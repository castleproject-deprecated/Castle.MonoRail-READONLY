<div align="center">
  <h2>Scaffolding</h2>
</div>

<div class="container">

<p>
  We are on the early stages of Scaffold support. Currently we only support 
  Scaffold for ActiveRecord:
</p>

<pre><code>
[Scaffolding( typeof(Customer) )]
public sealed class CustomersController : Controller
{
}
</code></pre>

<p>
  Assuming that Customer is an ActiveRecord class, the following actions and 
  view contents are dynamically genenrated:
</p>

<ul>
  <li>newCustomer</li>
  <li>createCustomer</li>
  <li>editCustomer</li>
  <li>updateCustomer</li>
  <li>listCustomer</li>
  <li>confirmCustomer</li>
  <li>removeCustomer</li>
</ul>

<p>
  The view that Scaffold generates are not meant to be completed. In fact, it 
  is supposed to be just something functional that you can replace later. The idea
  is to make a site functional in no time, but then replace the views by properly 
  designed ones.
</p>

<p>
  In order to make it work, though, you need to add the following assemblies to your web project:
</p>

<ul>
  <li>Castle.MonoRail.ActiveRecordScaffold</li>
  <li>Castle.ActiveRecord.dll</li>
  <li>Castle.Model.dll</li>
</ul>

<p>
  And the NHibernate assemblies:
</p>

<ul>
  <li>NHibernate.dll</li>
  <li>Castle.DynamicProxy.dll</li>
  <li>Iesi.Collections.dll</li>
  <li>HashCodeProvider.dll</li>
  <li>log4net.dll</li>
</ul>

<p align="center">
  Inheritance and nested classes are gracefully handled: <br>&nbsp;<br>
  <img src="$siteRoot/images/sc-new.jpg" />
</p>

<p align="center">
  Proper error messages: <br>&nbsp;<br>
  <img src="$siteRoot/images/sc-new-errors.jpg" />
</p>

<p align="center">
  Listing (pagination on the our plans): <br>&nbsp;<br>
  <img src="$siteRoot/images/sc-list.jpg" />
</p>

<p align="center">
  Before removing: <br>&nbsp;<br>
  <img src="$siteRoot/images/sc-confirmation.jpg" />
</p>

<p align="center">
  After removing: <br>&nbsp;<br>
  <img src="$siteRoot/images/sc-removed.jpg" />
</p>

