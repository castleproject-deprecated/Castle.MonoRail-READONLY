<div align="center">
  <h2>Resources/Localization</h2>
</div>

<div class="container">

<p>
  You can now associate a resource to a class or action. For example, our static file
  controller code uses resource like this:
</p>

<pre><code>
[Resource("Ajax","Castle.MonoRail.Framework.Controllers.Ajax")]
[Resource("Effects2", "Castle.MonoRail.Framework.Controllers.Effects2")]
[Resource("EffectsFat", "Castle.MonoRail.Framework.Controllers.EffectsFat")]
[Resource("Validation", "Castle.MonoRail.Framework.Controllers.Validation")]
public sealed class FilesController : Controller
{
  public FilesController()
  {
  }

  private string GetResourceValue(string resName, string resKey)
  {
    return (string)(Resources[resName])[resKey];
  }

  private void RenderFile(string resourceName, string resourceKey)
  {
    RenderText(GetResourceValue(resourceName, resourceKey));
  }

  public void AjaxScripts()
  {
    RenderFile("Ajax", "jsfunctions");
  }
	
  ...
</code></pre>

<p>
  You can use the LocalizationFilter attribute on a class level to specify 
  how MonoRail should decide about the language:
</p>

<pre><code>
namespace Yournamespace
{
  [LocalizationFilter( RequestStore.Session, "key" )]
  public class AccountController : SmartDispatcherController
  {
     ...
  }
}
</code></pre>
