<?xml version="1.0" encoding='iso-8859-1' ?>
<project name="all" default="build">

	<property name="base.dir" value="${path::get-full-path( project::get-base-directory() )}" />
	<property name="skipcaspol" value="true" />
	<property name="sharedlibrary.dir" value="${base.dir}/SharedLibs" />
	<property name="tempdir" value="tempdir" />

	<include buildfile="common.inc" />
	
	<target name="build" depends="clean, init, tools, container, components, services, activerecord, monorail, aspectsharp, facilities, samples" />

	<target name="clean">
		<delete dir="${build.dir}" failonerror="false" />
	</target>
		
	<target name="cleanall">
		<delete dir="${build.dir}" failonerror="false" />
		<nant buildfile="ActiveRecord/activerecord.build" target="clean" inheritall="true" />
		<nant buildfile="Tools/DynamicProxy/DynamicProxy.build" target="clean" inheritall="true" />
		<nant buildfile="Tools/NVelocity/nvelocity.build" target="clean" inheritall="true" />
		<nant buildfile="InversionOfControl/container.build" target="clean" inheritall="true" />
		<nant buildfile="Services/services.build" target="clean" inheritall="true" />
		<nant buildfile="Facilities/facilities.build" target="clean" inheritall="true" />
		<nant buildfile="Components/components.build" target="clean" inheritall="true" />
		<nant buildfile="MonoRail/monorail.build" target="clean" inheritall="true" />
		<nant buildfile="AspectSharp/aspectsharp.build" target="clean" inheritall="true" />
	</target>
	
	<target name="init">
		<mkdir dir="${build.dir}" />
		<call target="copydistdependencies" />
	</target>
	
	<target name="copydistdependencies">
		<copy todir="${build.dir}">
			<fileset basedir="${sharedlibrary.dir}/boo">
				<include name="*.dll" />
			</fileset>
		</copy>
		<copy todir="${build.dir}">
			<fileset basedir="${sharedlibrary.dir}/cassini">
				<include name="*.*" />
			</fileset>
		</copy>
		<copy todir="${build.dir}">
			<fileset basedir="${sharedlibrary.dir}/ibatis">
				<include name="*.dll" />
			</fileset>
		</copy>
		<copy todir="${build.dir}">
			<fileset basedir="${sharedlibrary.dir}/log4net">
				<include name="*.dll" />
			</fileset>
		</copy>
		<copy todir="${build.dir}">
			<fileset basedir="${sharedlibrary.dir}/netron">
				<include name="*.dll" />
			</fileset>
		</copy>
		<copy todir="${build.dir}">
			<fileset basedir="${sharedlibrary.dir}/nhibernate">
				<include name="*.*" />
			</fileset>
		</copy>
		<copy todir="${build.dir}">
			<fileset basedir="${sharedlibrary.dir}/nlog">
				<include name="*.*" />
			</fileset>
		</copy>
		<copy todir="${build.dir}">
			<fileset basedir="${sharedlibrary.dir}/nvelocity">
				<include name="*.*" />
			</fileset>
		</copy>
		<copy todir="${build.dir}">
			<fileset basedir="${sharedlibrary.dir}/prevalence">
				<include name="*.*" />
			</fileset>
		</copy>
	</target>

	<target name="activerecord" depends="init">
		<nant buildfile="ActiveRecord/activerecord.build" target="build" inheritall="true" />
	</target>
	
	<target name="tools" depends="init">
		<nant buildfile="Tools/DynamicProxy/DynamicProxy.build" target="build" inheritall="true" />
		<nant buildfile="Tools/NVelocity/nvelocity.build" target="build" inheritall="true" />
	</target>

	<target name="container" depends="init">
		<nant buildfile="InversionOfControl/container.build" target="build" inheritall="true" />
	</target>

	<target name="services" depends="init">
		<nant buildfile="Services/services.build" target="build" inheritall="true" />
	</target>

	<target name="facilities" depends="init">
		<nant buildfile="Facilities/facilities.build" target="build" inheritall="true" />
	</target>

	<target name="components" depends="init">
		<nant buildfile="Components/components.build" target="build" inheritall="true" />
	</target>

	<target name="monorail" depends="init">
		<nant buildfile="MonoRail/monorail.build" target="build" inheritall="true" />
	</target>

	<target name="aspectsharp" depends="init">
		<nant buildfile="AspectSharp/aspectsharp.build" target="build" inheritall="true" />
	</target>

	<target name="samples">
	
	</target>

	<target name="dist" depends="zipsource, zipsamples, zip11, zip20, zipdoc">
	<!--
		<nant buildfile="Tools/DynamicProxy/DynamicProxy.build" target="dist" inheritall="true" />
		<nant buildfile="AspectSharp/aspectsharp.build" target="distribution" inheritall="true" />
		<nant buildfile="InversionOfControl/container.build" target="dist" inheritall="true" />
		<nant buildfile="Components/components.build" target="dist" inheritall="true" />
		<nant buildfile="ActiveRecord/activerecord.build" target="dist" inheritall="true" />
		<nant buildfile="MonoRail/monorail.build" target="dist" inheritall="true" />
		<nant buildfile="Services/services.build" target="dist" inheritall="true" />
		<nant buildfile="Facilities/facilities.build" target="dist" inheritall="true" />
	-->
	</target>
	
	<target name="createreleasenotes">
		<mkdir dir="${tempdir}" />
		
		<copy file="ActiveRecord/Changes.txt" tofile="${tempdir}/ActiveRecord Release Notes.txt" />
		<copy file="MonoRail/Changes.txt" tofile="${tempdir}/MonoRail Release Notes.txt" />
		<copy file="InversionOfControl/Changes.txt" tofile="${tempdir}/InversionOfControl Release Notes.txt" />
		<copy file="ActiveRecord/Changes.txt" tofile="${tempdir}/ActiveRecord Release Notes.txt" />
		<copy file="Tools/DynamicProxy/Changes.txt" tofile="${tempdir}/DynamicProxy Release Notes.txt" />
	</target>
	
	<target name="deletereleasenotes">
		<delete dir="${tempdir}" />
	</target>

	<target name="zip11">
		<call target="createreleasenotes" />
		<zip zipfile="${base.dir}/Castle-net-1.1.zip">
			<fileset basedir="${base.dir}/build">
				<include name="net-1.1/*.*" />
			</fileset>
			<fileset basedir="${base.dir}/setup">
				<include name="License.rtf" />
			</fileset>
			<fileset basedir="${tempdir}">
				<include name="*.txt" />
			</fileset>
		</zip>
		<call target="deletereleasenotes" />
	</target>

	<target name="zip20">
		<call target="createreleasenotes" />
		<zip zipfile="${base.dir}/Castle-net-2.0.zip">
			<fileset basedir="${base.dir}/build">
				<include name="net-2.0/*.*" />
			</fileset>
			<fileset basedir="${base.dir}/setup">
				<include name="License.rtf" />
			</fileset>
			<fileset basedir="${tempdir}">
				<include name="*.txt" />
			</fileset>
		</zip>
		<call target="deletereleasenotes" />
	</target>

	<target name="zip-build" depends="build" >
		<call target="createreleasenotes" />
		<property name="build-type" value="release" unless="${debug}" />
		<property name="build-type" value ="debug" if="${debug}"/>
		<zip zipfile="${base.dir}/${CCNetLabel}-${framework::get-target-framework()}-${datetime::get-year(datetime::now())}-${datetime::get-month(datetime::now())}-${datetime::get-day(datetime::now())}-${build-type}.zip">
			<fileset basedir="${base.dir}/build">
				<include name="${framework::get-target-framework()}/*.*" />
			</fileset>
			<fileset basedir="${base.dir}/setup">
				<include name="License.rtf" />
			</fileset>
			<fileset basedir="${tempdir}">
				<include name="*.txt" />
			</fileset>
		</zip>
		<call target="deletereleasenotes" />
	</target>
	
	<target name="zipdoc">
		<zip zipfile="${base.dir}/Castle-api-doc.zip">
			<fileset basedir="${base.dir}/docs">
				<include name="Castle.chm" />
			</fileset>
		</zip>
	</target>

	<target name="zipsamples">
		<zip zipfile="${base.dir}/Samples/ActiveRecord-Samples.zip">
			<fileset basedir="${base.dir}/Samples/ActiveRecord">
				<include name="**/*.build" />
				<include name="**/*.sln" />
				<include name="**/*.cs" />
				<include name="**/*.ico" />
				<include name="**/*.csproj" />
				<include name="**/*.xml" />
				<include name="**/*.config" />
				<include name="**/*.lang" />
				<include name="**/*.txt" />
				<include name="**/*.inc" />
				<include name="**/*.vm" />
				<include name="*.snk" />
				<exclude name="**\obj\Debug\*.*" />
				<exclude name="**\bin\*.*" />
				<exclude name="**\*.user" />
			</fileset>
		</zip>
		<zip zipfile="${base.dir}/Samples/Facilities-Samples.zip">
			<fileset basedir="${base.dir}/Samples/Facilities">
				<include name="**/*.build" />
				<include name="**/*.sln" />
				<include name="**/*.cs" />
				<include name="**/*.ico" />
				<include name="**/*.csproj" />
				<include name="**/*.xml" />
				<include name="**/*.config" />
				<include name="**/*.lang" />
				<include name="**/*.txt" />
				<include name="**/*.inc" />
				<include name="**/*.vm" />
				<include name="*.snk" />
				<exclude name="**\obj\Debug\*.*" />
				<exclude name="**\bin\*.*" />
				<exclude name="**\*.user" />
			</fileset>
		</zip>
		<zip zipfile="${base.dir}/Samples/InversionOfControl-Samples.zip">
			<fileset basedir="${base.dir}/Samples/InversionOfControl">
				<include name="**/*.build" />
				<include name="**/*.sln" />
				<include name="**/*.cs" />
				<include name="**/*.ico" />
				<include name="**/*.csproj" />
				<include name="**/*.xml" />
				<include name="**/*.config" />
				<include name="**/*.lang" />
				<include name="**/*.txt" />
				<include name="**/*.inc" />
				<include name="**/*.vm" />
				<include name="*.snk" />
				<exclude name="**\obj\Debug\*.*" />
				<exclude name="**\bin\*.*" />
				<exclude name="**\*.user" />
			</fileset>
		</zip>
		<zip zipfile="${base.dir}/Samples/MonoRail-Samples.zip">
			<fileset basedir="${base.dir}/Samples/MonoRail">
				<include name="**/*.build" />
				<include name="**/*.sln" />
				<include name="**/*.cs" />
				<include name="**/*.ico" />
				<include name="**/*.csproj" />
				<include name="**/*.xml" />
				<include name="**/*.config" />
				<include name="**/*.lang" />
				<include name="**/*.txt" />
				<include name="**/*.inc" />
				<include name="**/*.vm" />
				<include name="*.snk" />
				<exclude name="**\obj\Debug\*.*" />
				<exclude name="**\bin\*.*" />
				<exclude name="**\*.user" />
			</fileset>
		</zip>
		<zip zipfile="${base.dir}/Samples/Castle-Samples.zip">
			<fileset basedir="${base.dir}/Samples/Castle">
				<include name="**/*.build" />
				<include name="**/*.sln" />
				<include name="**/*.cs" />
				<include name="**/*.ico" />
				<include name="**/*.csproj" />
				<include name="**/*.xml" />
				<include name="**/*.config" />
				<include name="**/*.lang" />
				<include name="**/*.txt" />
				<include name="**/*.inc" />
				<include name="**/*.vm" />
				<include name="*.snk" />
				<exclude name="**\obj\Debug\*.*" />
				<exclude name="**\bin\*.*" />
				<exclude name="**\*.user" />
			</fileset>
		</zip>
	</target>
	
	<target name="zipsource">
		<zip zipfile="Castle-src.zip">
			<fileset basedir="${base.dir}">
				<include name="**/*.build" />
				<include name="**/*.sln" />
				<include name="**/*.cs" />
				<include name="**/*.ico" />
				<include name="**/*.csproj" />
				<include name="**/*.xml" />
				<include name="**/*.config" />
				<include name="**/*.lang" />
				<include name="**/*.txt" />
				<include name="**/*.inc" />
				<include name="**/*.vm" />
				<include name="**/*.gif" />
				<include name="**/*.resx" />
				<include name="*.snk" />
				<include name="SharedLibs/**/*.dll" />
				<include name="SharedLibs/**/*.rtf" />
				<include name="ActiveRecord/Generator/lib/*.dll" />
				
				<exclude name="**\obj\Debug\*.*" />
				<exclude name="**\bin\*.*" />
				<exclude name="**\*.user" />
				<exclude name="/Rook" />
				<exclude name="/Sandbox" />
				<exclude name="/setup" />
			</fileset>
		</zip>
	</target>
	
	<description>Documentation generation.</description><property name="base.dir" value="." />
	<property name="doc.dir" value="${base.dir}/docs" />
	<property name="tempBin.dir" value="${doc.dir}/bin"/>
	<property name="outputDocs.file" value="Castle"/>
	
	<description>Docs generation properties.</description>
	<property name="ShowMissing" value="false"/>
	<property name="ShowPrivate" value="false"/>
	<property name="OutputTarget" value="HTMLHelp"/>

	<description>Generates documentation with default properties.</description>
	<target name="releaseDocs" depends="cleanup">
		<call target="copyFilesToDocument"/>
		<call target="generateReleaseDocs"/>
	</target>
	
	<description>Generates documentation for developers, with all missing information indicated and private members visible.</description>
	<target name="devDocs" depends="cleanup">
		<property name="ShowMissing" value="true"/>
		<property name="ShowPrivate" value="true"/>
		<property name="outputDocs.file" value="CastleDev"/>
		<call target="copyFilesToDocument"/>
		<call target="generateReleaseDocs"/>
	</target>
	
	<description>Generates documentation for release.</description>
	<target name="generateReleaseDocs">
		<ndoc failonerror="true">
			<assemblies basedir="${tempBin.dir}">
				<include name="Castle.*.dll"/>
			</assemblies>
			<referencepaths>
				<include name="ActiveRecord/lib"/>
				<include name="AspectSharp/bin"/>
				<include name="Monorail/lib"/>
				<include name="Tools/DynamicProxy/bin"/>
				<include name="Tools/NVelocity/bin"/>
				
				<!-- Components -->
				<include name="SharedLibs/Prevalence"/>
				<include name="SharedLibs/Db4o/net-1.1"/>
				<include name="SharedLibs/IBatis"/>
				<include name="SharedLibs/NHibernate"/>
				<include name="SharedLibs/boo"/>
				<include name="SharedLibs/cassini"/>
				<include name="SharedLibs/log4net"/>
				<include name="SharedLibs/netron"/>
				<include name="SharedLibs/Nlog"/>
				<include name="SharedLibs/log4net"/>
				<include name="SharedLibs/Nvelocity"/>
			    <include name="SharedLibs/stringtemplate/net-1.1"/> 
			</referencepaths>
			<documenters>
				<documenter name="MSDN">
					<property name="OutputTarget" value="${OutputTarget}" />
					<property name="Preliminary" value="true" />
					<property name="BinaryTOC" value="true" />
					<property name="CleanIntermediates" value="true" />
					<property name="SdkLinksOnWeb" value="true" />
					
					<property name="OutputDirectory" value="${doc.dir}" />
					<property name="HtmlHelpName" value="${outputDocs.file}" />
					<property name="IncludeFavorites" value="True" />
					<property name="SplitTOCs" value="False" />
					
					<property name="Title" value="Castle API documentation" />	
					<property name="DefaulTOC" value="Castle.MicroKernel" />
					
					<property name="ShowVisualBasic" value="True" />
					<property name="ShowMissingSummaries" value="${ShowMissing}" />
					<property name="ShowMissingRemarks" value="${ShowMissing}" />
					<property name="ShowMissingParams" value="${ShowMissing}" />
					<property name="ShowMissingReturns" value="${ShowMissing}" />
					<property name="ShowMissingValues" value="${ShowMissing}" />
					<property name="DocumentEmptyNamespaces" value="${ShowMissing}" />
					
					<property name="AutoPropertyBackerSummaries" value="true" />
					<property name="AutoDocumentConstructors" value="true" />
					<property name="DocumentProtected" value="True" />
					<property name="DocumentInternals" value="${ShowPrivate}" />
					<property name="DocumentPrivates" value="${ShowPrivate}" />
					
					<property name="IncludeAssemblyVersion" value="True" />
					<property name="CopyrightText" value="Copyright 2004,2006 - Castle Project (original author or authors)" />
					<property name="CopyrightHref" value="http://www.castleproject.org" />
				</documenter>
			</documenters>
		</ndoc>
	</target>
	
	<description>Copies all files to be documented to a single location to speed up the documentation process.</description>
	<target name="copyFilesToDocument">
		<foreach item="Folder" property="foldername">
			<in>
				<!-- Hardcode projects folders to speed up assemblies search -->
				<items>
					<include name="${build.dir}"/>
				</items>
			</in>
			<do>
			   <echo message="${foldername}" />

				<foreach item="File" property="file">
					<in>
						<items>
							<include name="${foldername}/Castle.*.dll"/>
							<include name="${foldername}/AspectSharp*.dll"/>
							<include name="${foldername}/NVelocity.dll"/>
							<exclude name="Castle.*.Tests.dll"/>
						</items>
					</in>
					<do>
						<property name="xml.file" value="${path::change-extension( file, 'xml' )}"/>
						<copy todir="${tempBin.dir}" if="${file::exists( xml.file )}" flatten="true">
							<fileset>
								<include name="${file}"/>
								<include name="${xml.file}"/>
							</fileset>
						</copy>
					</do>
				</foreach>
			</do>
		</foreach>
	</target>
	
	<description>Cleans up prior to documentation generation.</description>
	<target name="cleanup">
		<delete>
			<fileset>
				<include name="${doc.dir}/**"/>
				<exclude name="**/*.chm"/>
			</fileset>
		</delete>
	</target>

	<target name="ziptrunk">
		<zip zipfile="Castle-all.zip">
			<fileset basedir="${base.dir}">
				<include name="all.build" />
				<include name="common.inc" />
				<include name="CastleKey.snk" />
				<include name="How to build.txt" />
				
				<include name="ActiveRecord/**.*" />
				<include name="AspectSharp/**.*" />
				<include name="Components/**.*" />
				<include name="Deps/**.*" />
				<include name="Facilities/**.*" />
				<include name="InversionOfControl/**.*" />
				<include name="MonoRail/**.*" />
				<include name="Services/**.*" />
				<include name="Tools/**.*" />
				
				<exclude name="**\*.user" />
				<exclude name="**\*.pdb" />
				<exclude name="**\*.zip" />
				<exclude name="**\*.chm" />
				<exclude name="**\*.resharperoptions" />
				<exclude name="**\*.suo" />
				<exclude name="**\obj\Debug\*.*" />
			</fileset>
		</zip>
	</target>

	<target name="update-from-svn">
		<!--
		<exec program="C:\devtools\svn-win32-1.2.3\bin\svn.exe">
			<arg value=""/>
		</exec>
		-->
	</target>

</project>