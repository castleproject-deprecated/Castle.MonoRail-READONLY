<?xml version="1.0" encoding='iso-8859-1' ?>
<project name="dynamicproxy" default="build">

	<property name="base.dir" value="." />
	<property name="bin.dir" value="${base.dir}/bin" />
	<property name="library.dir" value="${base.dir}/lib" />
	<property name="doc.dir" value="${base.dir}/doc" />
	<property name="src.dir" value="${base.dir}" />

	<property name="core.src.dir" value="${src.dir}/DynamicProxy" />
	<property name="core.test.src.dir" value="${src.dir}/DynamicProxyTest" />
	<property name="core.name" value="Castle.DynamicProxy" />
	<property name="core.assembly.name" value="${core.name}.dll" />
	<property name="core.test.assembly.name" value="${core.name}.Test.dll" />

	<property name="strong" value="STRONG" unless="${property::exists('strong')}" />
	<property name="debug" value="false" />
	<property name="optimize" value="true" />
	<property name="version" value="1.1.5.0" />

	<include buildfile="../../common.inc" />

	<target name="clean">
		<delete dir="bin" failonerror="false" />
	</target>

	<target name="init" depends="clean">
		<mkdir dir="bin" />
		<!-- <copy file="${antlr.runtime.dll}" todir="build" /> -->
	</target>

	<target name="build" depends="init,core.tests.run" />
	
	<target name="core.compile" depends="init">
		<csc 
			define="${strong}"
			target="library" 
			debug="${debug}"
			optimize="${optimize}"
			output="${bin.dir}/${core.assembly.name}"
			doc="${bin.dir}/${core.name}.xml">
			
			<nowarn>
				<warning number="1591" />
				<warning number="1572" />
			</nowarn>
			
			<sources basedir="${core.src.dir}" defaultexcludes="true">
				<include name="**/*.cs" />
			</sources>
		</csc>
	</target>

	<target name="core.tests.compile" depends="core.compile" >
		<csc 
			target="library" 
			debug="${debug}" 
			output="${bin.dir}/${core.test.assembly.name}">
			
			<sources basedir="${core.test.src.dir}" defaultexcludes="true">
				<include name="**/*.cs" />
			</sources>

			<references>
				<include name="${nunit.framework.dll}" />
				<include name="${bin.dir}/${core.assembly.name}" />
				<include name="System.Data.dll" />
			</references>
		</csc>
	</target>
	
	<target name="core.tests.run" depends="core.tests.compile">
		<property name="isMono" value="${string::contains(framework::get-target-framework(),'mono')}" />
		<echo message="target is Mono? ${isMono}" />
		
		<nunit2 if="${not isMono}">
			<formatter type="Plain" />
			<test assemblyname="${bin.dir}/${core.test.assembly.name}">
			</test>
		</nunit2>
		
		<nunit2 if="${isMono}">
			<formatter type="Plain" />
			<test assemblyname="${bin.dir}/${core.test.assembly.name}">
				<categories>
					<exclude name="DotNetOnly" if="${isMono}" />
				</categories>
			</test>
		</nunit2>
	</target>
	
	<target name="dist">
		<zip zipfile="DynamicProxy.bin.${version}.zip">
			<fileset basedir="${base.dir}">
				<include name="${bin.dir}/Castle.DynamicProxy.dll" />				
				<include name="License.txt" />				
				<include name="Readme.txt" />				
				<include name="Changes.txt" />				
			</fileset>
		</zip>
		
		<zip zipfile="DynamicProxy.src.${version}.zip">
			<fileset basedir="${base.dir}">
				<include name="License.txt" />				
				<include name="Readme.txt" />				
				<include name="Changes.txt" />				
				<include name="*.build" />
				<include name="*.sln" />
				<include name="${core.src.dir}/**/*.*" />
				<include name="${core.test.src.dir}/**/*.*" />
				
				<exclude name="**/Debug/*" />
				<exclude name="**/obj/*" />
				<exclude name="**/*.user" />
				<exclude name="**/*.suo" />
			</fileset>
		</zip>
	</target>

</project>
