<configuration>
  <components>
    <component id="orders-dispatcher" 
               service="NShop.Services.IOrdersDispatcher, NShop"
               type="NShop.Impl.OrdersDispatcher, NShop"/>
    <component id="sender" 
               service="NShop.Services.ISender, NShop"
               type="NShop.Impl.NotificationManager, NShop">
      <parameters>
        <EmailSender>${email-sender}</EmailSender>
        <SmsSender>${sms-sender}</SmsSender>
      </parameters>
    </component>
    <component id="email-sender" 
               service="NShop.Services.ISender, NShop"
               type="NShop.Impl.EmailSender, NShop"/>
    <component id="sms-sender" 
               service="NShop.Services.ISender, NShop"
               type="NShop.Impl.SmsSender, NShop"/>
    <component id="security" 
               service="NShop.Services.ISecurityInformation, NShop"
               type="NShop.Impl.SecurityInformation, NShop"/>
    <component id="session-provider" 
               service="NShop.Services.ISessionProvider, NShop"
              type="NShop.Impl.SessionProvider, NShop"/>

    <!-- generic repository defination -->

    <component id="security-decorator"
               service="NShop.Repositories.IRepository`1, NShop" 
               type="NShop.Decorators.SecurityDecorator`1, NShop">
      <parameters>
        <inner>${transaction-decorator}</inner>
      </parameters>
    </component>
    <component id="transaction-decorator"
               service="NShop.Repositories.IRepository`1, NShop" 
               type="NShop.Decorators.TranactionDecorator`1, NShop">
      <parameters>
        <isolationLevel>RepeatableRead</isolationLevel>
        <inner>${logging-decorator}</inner>
      </parameters>
    </component>
    <component id="logging-decorator"
               service="NShop.Repositories.IRepository`1, NShop" 
               type="NShop.Decorators.LoggingDecorator`1, NShop">
      <parameters>
        <inner>${generic-repository}</inner>
      </parameters>
    </component>

    <component id="generic-repository"
               service="NShop.Repositories.IRepository`1, NShop" 
               type="NShop.Repositories.NHibernateRepository`1, NShop"/>
    <!-- end generic repository defination -->


    <!-- order repository defination -->

    <component id="orders-security-decorator" 
               service="NShop.Repositories.IRepository`1[[NShop.Order, NShop]], NShop" 
              type="NShop.Decorators.SecurityDecorator`1[[NShop.Order, NShop]], NShop">
      <parameters>
        <inner>${orders-logging-decorator}</inner>
      </parameters>
    </component>

    <component id="orders-logging-decorator"
               service="NShop.Repositories.IRepository`1[[NShop.Order, NShop]], NShop" 
               type="NShop.Decorators.LoggingDecorator`1[[NShop.Order, NShop]], NShop">
      <parameters>
        <inner>${orders-repository}</inner>
      </parameters>
    </component>

    <component id="orders-repository" 
               service="NShop.Repositories.NHibernateRepository`1[[NShop.Order, NShop]], NShop" 
              type="NShop.Repositories.OrderRepository, NShop"/>

    <!-- end  order repository defination -->
    <!-- repsitories configuration -->

    <!-- controller configuration -->
    <component id="/default"
               service="NShop.Services.IController, NShop"
               type="NShop.Controllers.DefaultController, NShop">
    </component>
    <!-- end controller configuration -->
  </components>
</configuration>