<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IBatisNet.DataMapper</name>
    </assembly>
    <members>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.UInt16TypeHandler">
            <summary>
            TypeHandler for UInt16 Type
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler">
            <summary>
            Summary description for BaseTypeHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ITypeHandler">
            <summary>
            Summary description for ITypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
             Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.Equals(System.Object,System.String)">
            <summary>
             Compares two values (that this handler deals with) for equality
            </summary>
            <param name="obj">one of the objects</param>
            <param name="str">the other object as a String</param>
            <returns>true if they are equal</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.IsSimpleType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
             Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.Equals(System.Object,System.String)">
            <summary>
             Compares two values (that this handler deals with) for equality
            </summary>
            <param name="obj">one of the objects</param>
            <param name="str">the other object as a String</param>
            <returns>true if they are equal</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UInt16TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UInt16TypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UInt16TypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UInt16TypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.UInt16TypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableTimeSpanTypeHandler">
            <summary>
            TypeHandler for Nullable TimeSpan Type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableTimeSpanTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
             Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableTimeSpanTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableTimeSpanTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableTimeSpanTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableTimeSpanTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableTimeSpanTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableTimeSpanTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Int64TypeHandler">
            <summary>
            Description résumée de Int64TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int64TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int64TypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int64TypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int64TypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Int64TypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.Scope.ErrorContext">
            <summary>
            An error context to help us create meaningful error messages.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.ErrorContext.Reset">
            <summary>
            Clear the error context
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.ErrorContext.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ErrorContext.Resource">
            <summary>
            The resource causing the problem
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ErrorContext.Activity">
            <summary>
            The activity that was happening when the error happened
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ErrorContext.ObjectId">
            <summary>
            The object ID where the problem happened
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ErrorContext.MoreInfo">
            <summary>
            More information about the error
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.PostSelectStrategyFactory">
            <summary>
            Factory to get <see cref="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.IPostSelectStrategy"/> implementation.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.PostSelectStrategyFactory.#cctor">
            <summary>
            Initializes the <see cref="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.PostSelectStrategyFactory"/> class.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.PostSelectStrategyFactory.Get(IBatisNet.DataMapper.MappedStatements.PostBindind.ExecuteMethod)">
            <summary>
            Gets the <see cref="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.IPostSelectStrategy"/>.
            </summary>
            <param name="method">The <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind.ExecuteMethod"/>.</param>
            <returns>The <see cref="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.IPostSelectStrategy"/></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement">
            <summary>
            Summary description for DeleteMappedStatement.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.MappedStatement">
            <summary>
            Summary description for MappedStatement.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.IMappedStatement">
            <summary>
            Summary description for IMappedStatement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForMap(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL. </param>
             <param name="keyProperty">The property of the result object to be used as the key. </param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForDictionary``2(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL. </param>
             <param name="keyProperty">The property of the result object to be used as the key. </param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A IDictionary of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForDictionary``2(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate{``0,``1})">
            <summary>
            Runs a query with a custom object that gets a chance 
            to deal with each row as it is processed.
            </summary>
            <param name="session">The session used to execute the statement</param>
            <param name="parameterObject">The object used to set the parameters in the SQL. </param>
            <param name="keyProperty">The property of the result object to be used as the key. </param>
            <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
            <param name="rowDelegate">A delegate called once per row in the QueryForDictionary method</param>
            <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteUpdate(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Execute an update statement. Also used for delete statement.
            Return the number of row effected.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>The number of row effected.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteInsert(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Execute an insert statement. Fill the parameter object with 
            the ouput parameters if any, also could return the insert generated key
            </summary>
            <param name="session">The session</param>
            <param name="parameterObject">The parameter object used to fill the statement.</param>
            <returns>Can return the insert generated key.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Collections.IList)">
            <summary>
            Executes the SQL and and fill a strongly typed collection.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">A strongly typed collection of result objects.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns a subset of the rows selected.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Executes the SQL and retuns all rows selected. This is exactly the same as
            calling ExecuteQueryForList(session, parameterObject, NO_SKIPPED_RESULTS, NO_MAXIMUM_RESULTS).
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForList``1(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Collections.Generic.IList{``0})">
            <summary>
            Executes the SQL and and fill a strongly typed collection.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">A strongly typed collection of result objects.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForList``1(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns a subset of the rows selected.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForList``1(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Executes the SQL and retuns all rows selected. This is exactly the same as
            calling ExecuteQueryForList(session, parameterObject, NO_SKIPPED_RESULTS, NO_MAXIMUM_RESULTS).
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForObject(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForObject(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object of the type of
            the resultObject passed in as a parameter.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">The result object.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForObject``1(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForObject``1(IBatisNet.DataMapper.ISqlMapSession,System.Object,``0)">
            <summary>
            Executes an SQL statement that returns a single row as an Object of the type of
            the resultObject passed in as a parameter.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">The result object.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForRowDelegate(IBatisNet.DataMapper.ISqlMapSession,System.Object,IBatisNet.DataMapper.RowDelegate)">
            <summary>
            Runs a query with a custom object that gets a chance 
            to deal with each row as it is processed.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="rowDelegate"></param>param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForMapWithRowDelegate(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate)">
            <summary>
            Runs a query with a custom object that gets a chance 
            to deal with each row as it is processed.
            </summary>
            <param name="session">The session used to execute the statement</param>
            <param name="parameterObject">The object used to set the parameters in the SQL. </param>
            <param name="keyProperty">The property of the result object to be used as the key. </param>
            <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
            <param name="rowDelegate"></param>
            <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForRowDelegate``1(IBatisNet.DataMapper.ISqlMapSession,System.Object,IBatisNet.DataMapper.RowDelegate{``0})">
            <summary>
            Runs a query with a custom object that gets a chance 
            to deal with each row as it is processed.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="rowDelegate"></param>param>
            <returns></returns>
        </member>
        <member name="E:IBatisNet.DataMapper.MappedStatements.IMappedStatement.Execute">
            <summary>
            Event launch on exceute query
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.IMappedStatement.PreparedCommand">
            <summary>
            The IPreparedCommand to use
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.IMappedStatement.Id">
            <summary>
            Name used to identify the MappedStatement amongst the others.
            This the name of the SQL statment by default.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.IMappedStatement.Statement">
            <summary>
            The SQL statment used by this MappedStatement
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.IMappedStatement.SqlMap">
            <summary>
            The SqlMap used by this MappedStatement
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.#ctor(IBatisNet.DataMapper.ISqlMapper,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="sqlMap">An SqlMap</param>
            <param name="statement">An SQL statement</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RetrieveOutputParameters(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.ISqlMapSession,System.Data.IDbCommand,System.Object)">
            <summary>
            Retrieve the output parameter and map them on the result object.
            This routine is only use is you specified a ParameterMap and some output attribute
            or if you use a store procedure with output parameter...
            </summary>
            <param name="request"></param>
            <param name="session">The current session.</param>
            <param name="result">The result object.</param>
            <param name="command">The command sql.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForObject(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForObject(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object of the type of
            the resultObject passed in as a parameter.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">The result object.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RunQueryForObject(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object of the type of
            the resultObject passed in as a parameter.
            </summary>
            <param name="request">The request scope.</param>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">The result object.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForObject``1(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForObject``1(IBatisNet.DataMapper.ISqlMapSession,System.Object,``0)">
            <summary>
            Executes an SQL statement that returns a single row as an Object of the type of
            the resultObject passed in as a parameter.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">The result object.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RunQueryForObject``1(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.ISqlMapSession,System.Object,``0)">
            <summary>
            Executes an SQL statement that returns a single row as an Object of the type of
            the resultObject passed in as a parameter.
            </summary>
            <param name="request">The request scope.</param>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">The result object.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForRowDelegate(IBatisNet.DataMapper.ISqlMapSession,System.Object,IBatisNet.DataMapper.RowDelegate)">
            <summary>
            Runs a query with a custom object that gets a chance 
            to deal with each row as it is processed.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="rowDelegate"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForMapWithRowDelegate(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate)">
             <summary>
             Runs a query with a custom object that gets a chance 
             to deal with each row as it is processed.
             </summary>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL. </param>
             <param name="keyProperty">The property of the result object to be used as the key. </param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <param name="rowDelegate"></param>
             <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Executes the SQL and retuns all rows selected. This is exactly the same as
            calling ExecuteQueryForList(session, parameterObject, NO_SKIPPED_RESULTS, NO_MAXIMUM_RESULTS).
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns a subset of the rows selected.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RunQueryForList(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Int32,System.Int32)">
            <summary>
            Runs the query for list.
            </summary>
            <param name="request">The request.</param>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RunQueryForList(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Collections.IList,IBatisNet.DataMapper.RowDelegate)">
            <summary>
            Executes the SQL and retuns a List of result objects.
            </summary>
            <param name="request">The request scope.</param>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">A strongly typed collection of result objects.</param>
            <param name="rowDelegate"></param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Collections.IList)">
            <summary>
            Executes the SQL and and fill a strongly typed collection.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">A strongly typed collection of result objects.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForRowDelegate``1(IBatisNet.DataMapper.ISqlMapSession,System.Object,IBatisNet.DataMapper.RowDelegate{``0})">
            <summary>
            Runs a query with a custom object that gets a chance 
            to deal with each row as it is processed.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="rowDelegate"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForList``1(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Executes the SQL and retuns all rows selected. This is exactly the same as
            calling ExecuteQueryForList(session, parameterObject, NO_SKIPPED_RESULTS, NO_MAXIMUM_RESULTS).
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForList``1(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns a subset of the rows selected.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RunQueryForList``1(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns a List of result objects.
            </summary>
            <param name="request">The request scope.</param>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RunQueryForList``1(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Collections.Generic.IList{``0},IBatisNet.DataMapper.RowDelegate{``0})">
            <summary>
            Executes the SQL and retuns a List of result objects.
            </summary>
            <param name="request">The request scope.</param>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">The result object</param>
            <param name="rowDelegate"></param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForList``1(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Collections.Generic.IList{``0})">
            <summary>
            Executes the SQL and and fill a strongly typed collection.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">A strongly typed collection of result objects.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteUpdate(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Execute an update statement. Also used for delete statement.
            Return the number of row effected.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>The number of row effected.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteInsert(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Execute an insert statement. Fill the parameter object with 
            the ouput parameters if any, also could return the insert generated key
            </summary>
            <param name="session">The session</param>
            <param name="parameterObject">The parameter object used to fill the statement.</param>
            <returns>Can return the insert generated key.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForMap(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL. </param>
             <param name="keyProperty">The property of the result object to be used as the key. </param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RunQueryForMap(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="request">The request scope.</param>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <param name="rowDelegate">A delegate called once per row in the QueryForMapWithRowDelegate method</param>
             <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForDictionary``2(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL. </param>
             <param name="keyProperty">The property of the result object to be used as the key. </param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A IDictionary of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForDictionary``2(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate{``0,``1})">
             <summary>
             Runs a query with a custom object that gets a chance 
             to deal with each row as it is processed.
             </summary>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL. </param>
             <param name="keyProperty">The property of the result object to be used as the key. </param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <param name="rowDelegate">A delegate called once per row in the QueryForDictionary method</param>
             <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RunQueryForDictionary``2(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate{``0,``1})">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="request">The request scope.</param>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <param name="rowDelegate">A delegate called once per row in the QueryForMapWithRowDelegate method</param>
             <returns>A IDictionary of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecutePostSelect(IBatisNet.DataMapper.Scope.RequestScope)">
            <summary>
            Executes the <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.
            </summary>
            <param name="request">The current <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RaiseExecuteEvent">
            <summary>
            Raise an event ExecuteEventArgs
            (Used when a query is executed)
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ToString">
            <summary>
            ToString implementation.
            </summary>
            <returns>A string that describes the MappedStatement</returns>
        </member>
        <member name="E:IBatisNet.DataMapper.MappedStatements.MappedStatement.Execute">
            <summary>
            Event launch on exceute query
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.PreparedCommand">
            <summary>
            The IPreparedCommand to use
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.Id">
            <summary>
            Name used to identify the MappedStatement amongst the others.
            This the name of the SQL statement by default.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.Statement">
            <summary>
            The SQL statment used by this MappedStatement
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.SqlMap">
            <summary>
            The SqlMap used by this MappedStatement
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.#ctor(IBatisNet.DataMapper.ISqlMapper,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="sqlMap">An SqlMap</param>
            <param name="statement">An SQL statement</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForMap(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="keyProperty"></param>
            <param name="valueProperty"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteInsert(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="skipResults"></param>
            <param name="maxResults"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForRowDelegate(IBatisNet.DataMapper.ISqlMapSession,System.Object,IBatisNet.DataMapper.RowDelegate)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="rowDelegate"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForObject(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForObject(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.ResultMapStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/> implementation when a 'resultMapping' attribute exists
            on a <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty"/>.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.BaseStrategy">
            <summary>
            BaseStrategy.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.MappedStatements.BaseStrategy.SKIP">
            <summary>
            Used by N+1 Select solution
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.BaseStrategy.GetUniqueKey(IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader)">
            <summary>
            Calculte a unique key which identify the resukt object build by this <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap"/>
            </summary>
            <param name="resultMap"></param>
            <param name="request"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.BaseStrategy.FillObjectWithReaderAndResultMap(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,System.Object)">
            <summary>
            Fills the object with reader and result map.
            </summary>
            <param name="request">The request.</param>
            <param name="reader">The reader.</param>
            <param name="resultMap">The result map.</param>
            <param name="resultObject">The result object.</param>
            <returns>Indicates if we have found a row.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/> contract to get the value of an argument constructor.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy.GetValue(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader@,System.Object)">
            <summary>
            Gets the value of an argument constructor.
            </summary>
            <param name="request">The current <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</param>
            <param name="mapping">The <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> with the argument infos.</param>
            <param name="reader">The current <see cref="T:System.Data.IDataReader"/>.</param>
            <param name="keys">The keys</param>
            <returns>The paremeter value.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.ResultMapStrategy.GetValue(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader@,System.Object)">
            <summary>
            Gets the value of an argument constructor.
            </summary>
            <param name="request">The current <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</param>
            <param name="mapping">The <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> with the argument infos.</param>
            <param name="reader">The current <see cref="T:System.Data.IDataReader"/>.</param>
            <param name="keys">The keys</param>
            <returns>The paremeter value.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Exceptions.DataMapperException">
            <summary>
            The DataMapperException is thrown when an error in the SqlMapper component occurs.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Exceptions.DataMapperException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException"/> class.
            </summary>
            <remarks>
            This constructor initializes the <para>Message</para> property of the new instance 
            to a system-supplied message that describes the error.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.Exceptions.DataMapperException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException"/> 
            class with a reference to the inner exception that is the cause of this exception.
            </summary>
            <remarks>
            This constructor initializes the Message property of the new instance 
            using the message parameter.
            </remarks>
            <param name="ex">
            The exception that is the cause of the current exception. 
            If the innerException parameter is not a null reference (Nothing in Visual Basic), 
            the current exception is raised in a catch block that handles the inner exception.
            </param>
        </member>
        <member name="M:IBatisNet.DataMapper.Exceptions.DataMapperException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException"/> 
            class with a specified error message.
            </summary>
            <remarks>
            This constructor initializes the Message property of the new instance to 
            the Message property of the passed in exception. 
            </remarks>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Exceptions.DataMapperException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException"/> 
            class with a specified error message and a reference to the inner exception 
            that is the cause of this exception.
            </summary>
            <remarks>
            An exception that is thrown as a direct result of a previous exception should include a reference to the previous 
            exception in the InnerException property. 
            The InnerException property returns the same value that is passed into the constructor, or a null reference 
            (Nothing in Visual Basic) if the InnerException property does not supply the inner exception value to the constructor.
            </remarks>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that caused the error</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Exceptions.DataMapperException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException"/> 
            class with serialized data.
            </summary>
            <remarks>
            This constructor is called during deserialization to reconstitute the 
            exception object transmitted over a stream.
            </remarks>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination. 
            </param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Delete">
            <summary>
            Summary description for delete.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Statement">
            <summary>
            Summary description for Statement.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.IStatement">
            <summary>
            Summary description for ISql.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.IStatement.CreateInstanceOfListClass">
            <summary>
            Create an instance of 'IList' class.
            </summary>
            <returns>An object which implement IList.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.IStatement.CreateInstanceOfGenericListClass``1">
            <summary>
            Create an instance of a generic 'IList' class.
            </summary>
            <returns>An object which implement IList.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.AllowRemapping">
            <summary>
            Allow remapping of dynamic SQL
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.Id">
            <summary>
            Identifier used to identify the statement amongst the others.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.CommandType">
            <summary>
            The type of the statement (text or procedure).
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.ExtendStatement">
            <summary>
            Extend statement attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.Sql">
            <summary>
            The sql statement to execute.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.ResultsMap">
            <summary>
            The ResultMaps used by the statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.ParameterMap">
            <summary>
            The parameterMap used by the statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.CacheModel">
            <summary>
            The CacheModel used by this statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.CacheModelName">
            <summary>
            The CacheModel name to use.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.ListClass">
            <summary>
            The list class type to use for strongly typed collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.ResultClass">
            <summary>
            The result class type to used.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.ParameterClass">
            <summary>
            The parameter class type to used.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Statement.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Initialize an statement for the sqlMap.
            </summary>
            <param name="configurationScope">The scope of the configuration</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Statement.CreateInstanceOfListClass">
            <summary>
            Create an instance of 'IList' class.
            </summary>
            <returns>An object which implment IList.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Statement.CreateInstanceOfGenericListClass``1">
            <summary>
            Create an instance of a generic 'IList' class.
            </summary>
            <returns>An object which implment IList.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.AllowRemapping">
            <summary>
            Allow remapping of dynamic SQL
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ExtendStatement">
            <summary>
            Extend statement attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.CacheModelName">
            <summary>
            The CacheModel name to use.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.HasCacheModel">
            <summary>
            Tell us if a cacheModel is attached to this statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.CacheModel">
            <summary>
            The CacheModel used by this statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ListClassName">
            <summary>
            The list class name to use for strongly typed collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ListClass">
            <summary>
            The list class type to use for strongly typed collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ResultClassName">
            <summary>
            The result class name to used.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ResultClass">
            <summary>
            The result class type to used.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ParameterClassName">
            <summary>
            The parameter class name to used.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ParameterClass">
            <summary>
            The parameter class type to used.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.Id">
            <summary>
            Name used to identify the statement amongst the others.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.Sql">
            <summary>
            The sql statement
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ResultMapName">
            <summary>
            The ResultMaps name used by the statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ParameterMapName">
            <summary>
            The ParameterMap name used by the statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ResultsMap">
            <summary>
            The ResultMap used by the statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ParameterMap">
            <summary>
            The parameterMap used by the statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.CommandType">
            <summary>
            The type of the statement (text or procedure)
            Default Text.
            </summary>
            <example>Text or StoredProcedure</example>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Delete.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Delete.Generate">
            <summary>
            The Generate tag used by a generated delete statement.
            (CRUD operation)
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.SelectDeSerializer">
            <summary>
            Summary description for SelectDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.SelectDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a Procedure object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.ParameterMapDeSerializer">
            <summary>
            Summary description for ParameterMapDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.ParameterMapDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a ParameterMap object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsLessEqualDeSerializer">
            <summary>
            Summary description for IsLessEqualDeSerializer.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IDeSerializer">
            <summary>
            Summary description for IDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsLessEqualDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsLessEqualDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a Dynamic object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsEqualDeSerializer">
            <summary>
            Summary description for IsEqualDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsEqualDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsEqualDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a Dynamic object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.IParameterSetter">
            <summary>
            Allows parameters to be set on the underlying prepared IDbCommand.
            TypeHandlerCallback implementations use this interface to
            process values before they are set on the IDbCommand.
            </summary>
            <remarks>
            There is no need to implement this.  The implementation
            will be passed into the TypeHandlerCallback automatically.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.IParameterSetter.DataParameter">
            <summary>
            Returns the underlying IDataParameter
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.IParameterSetter.Value">
            <summary>
            Get the parameter value
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.DBNullTypeHandler">
            <summary>
            DBNull TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DBNullTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DBNullTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DBNullTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DBNullTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DBNullTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.DBNullTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler">
            <summary>
            Custom type handler for adding a TypeHandlerCallback
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler.#ctor(IBatisNet.DataMapper.TypeHandlers.ITypeHandlerCallback)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler"/> class.
            </summary>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Performs processing on a value before it is used to set
            the parameter of a IDbCommand.
            </summary>
            <param name="dataParameter"></param>
            <param name="parameterValue">The value to be set</param>
            <param name="dbType">Data base type</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler.Callback">
            <summary>
            Gets or sets the callback.
            </summary>
            <value>The callback.</value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy"/> contract to process the <see cref="T:System.Data.IDataReader"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy.Process(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader@,System.Object)">
            <summary>
            Processes the specified <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="request">The request.</param>
            <param name="reader">The reader.</param>
            <param name="resultObject">The result object.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ExecuteEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.SelectObjectStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/> implementation when a 'select' attribute exists
            on an <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty"/> and the object property is 
            different from an <see cref="T:System.Array"/> or an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.SelectObjectStrategy.GetValue(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader@,System.Object)">
            <summary>
            Gets the value of an argument constructor.
            </summary>
            <param name="request">The current <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</param>
            <param name="mapping">The <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> with the argument infos.</param>
            <param name="reader">The current <see cref="T:System.Data.IDataReader"/>.</param>
            <param name="keys">The keys</param>
            <returns>The paremeter value.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.SqlGenerator">
            <summary>
            Summary description for SqlGenerator.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SqlGenerator.BuildQuery(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Creates SQL command text for a specified statement
            </summary>
            <param name="statement">The statement to build the SQL command text.</param>
            <returns>The SQL command text for the statement.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SqlGenerator.BuildSelectQuery(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Creates an select SQL command text for a specified statement
            </summary>
            <param name="statement">The statement to build the SQL command text.</param>
            <returns>The SQL command text for the statement.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SqlGenerator.BuildInsertQuery(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Creates an insert SQL command text for a specified statement
            </summary>
            <param name="statement">The statement to build the SQL command text.</param>
            <returns>The SQL command text for the statement.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SqlGenerator.BuildUpdateQuery(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Creates an update SQL command text for a specified statement
            </summary>
            <param name="statement">The statement to build the SQL command text.</param>
            <returns>The SQL command text for the statement.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SqlGenerator.BuildDeleteQuery(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Creates an delete SQL command text for a specified statement
            </summary>
            <param name="statement">The statement to build the SQL command text.</param>
            <returns>The SQL command text for the statement.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Select">
            <summary>
            Summary description for Select.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Select.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Select.Generate">
            <summary>
            The Generate tag used by a generated select statement.
            (CRUD operation)
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsGreaterEqual">
            <summary>
            Represent an isGreaterEqual sql tag element.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Conditional">
            <summary>
            Summary description for Conditional.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.BaseTag">
            <summary>
            Summary description for BaseTag.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag">
            <summary>
            SqlTag is a children element of dynamic Sql element.
            SqlTag represent any binary unary/conditional element (like isEmpty, isNull, iEquall...) 
            or other element as isParameterPresent, isNotParameterPresent, iterate.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.ISqlChild">
            <summary>
            Summary description for ISqlChild.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IDynamicParent">
            <summary>
            Summary description for DynamicParent.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IDynamicParent.AddChild(IBatisNet.DataMapper.Configuration.Sql.Dynamic.ISqlChild)">
            <summary>
            
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag.GetChildrenEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag.AddChild(IBatisNet.DataMapper.Configuration.Sql.Dynamic.ISqlChild)">
            <summary>
            
            </summary>
            <param name="child"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag.Parent">
            <summary>
            Parent tag element
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag.Prepend">
            <summary>
            Prepend attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag.Handler">
            <summary>
            Handler for this sql tag
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag.IsPrependAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.BaseTag.Property">
            <summary>
            Property attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Conditional.CompareProperty">
            <summary>
            CompareProperty attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Conditional.CompareValue">
            <summary>
            CompareValue attribute
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsGreaterEqual.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsGreaterEqual"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsParameterPresentDeSerializer">
            <summary>
            Summary description for IsParameterPresentDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsParameterPresentDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsParameterPresentDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a Dynamic object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsNotParameterPresentDeSerializer">
            <summary>
            Summary description for IsNotParameterPresentDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsNotParameterPresentDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsNotParameterPresentDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a Dynamic object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsLessThanDeSerializer">
            <summary>
            Summary description for IsLessThanDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsLessThanDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsLessThanDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a Dynamic object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsEmptyDeSerializer">
            <summary>
            Summary description for IsEmptyDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsEmptyDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsEmptyDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a IsNotNull object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.ArgumentPropertyDeSerializer">
            <summary>
            Summary description for ArgumentPropertyDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.ArgumentPropertyDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a ResultProperty object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap">
            <summary>
            Main implementation of ResultMap interface
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap">
            <summary>
            This is a grouping of ResultMapping objects used to map results back to objects
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap.CreateInstanceOfResult(System.Object[])">
            <summary>
            Create an instance Of result.
            </summary>
            <param name="parameters">
            An array of values that matches the number, order and type 
            of the parameters for this constructor. 
            </param>
            <returns>An object.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap.SetValueOfProperty(System.Object@,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object)">
            <summary>
            Set the value of an object property.
            </summary>
            <param name="target">The object to set the property.</param>
            <param name="property">The result property to use.</param>
            <param name="dataBaseValue">The database value to set.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap.ResolveSubMap(System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap.Parameters">
            <summary>
            The collection of constructor parameters.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap.Properties">
            <summary>
            The collection of ResultProperty.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap.GroupByProperties">
            <summary>
            The GroupBy Properties.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap.Id">
            <summary>
            Identifier used to identify the resultMap amongst the others.
            </summary>
            <example>GetProduct</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap.GroupByPropertyNames">
            <summary>
            The GroupBy Properties name.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap.Class">
            <summary>
            The output type class of the resultMap.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap.DataExchange">
            <summary>
            Sets the IDataExchange
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap.IsInitalized">
            <summary>
            Gets or sets a value indicating whether this instance is initalized.
            </summary>
            <value>
            	<c>true</c> if this instance is initalized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.XML_RESULT">
            <summary>
            Token for xml path to result elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.XML_CONSTRUCTOR_ARGUMENT">
            <summary>
            Token for xml path to result elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.XML_DISCRIMNATOR">
            <summary>
            Token for xml path to discriminator elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.XML_SUBMAP">
            <summary>
            Token for xml path to subMap elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.ANY_VISIBILITY_INSTANCE">
            <summary>
            Token for xml path to argument constructor elements.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap"/> class.
            </summary>
            <param name="configScope">The config scope.</param>
            <param name="className">The output class name of the resultMap.</param>
            <param name="extendMap">The extend result map bame.</param>
            <param name="id">Identifier used to identify the resultMap amongst the others.</param>
            <param name="groupBy">The groupBy properties</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Initialize the resultMap from an xmlNode..
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.InitializeGroupByProperties">
            <summary>
            Initializes the groupBy properties.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.GetChildNode(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Get the result properties and the subMap properties.
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.GetConstructor(System.Type,System.String[])">
            <summary>
            Finds the constructor that takes the parameters.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to find the constructor in.</param> 
            <param name="parametersName">The parameters name to use to find the appropriate constructor.</param>
            <returns>
            An <see cref="T:System.Reflection.ConstructorInfo"/> that can be used to create the type with 
            the specified parameters.
            </returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">
            Thrown when no constructor with the correct signature can be found.
            </exception> 
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.CreateInstanceOfResult(System.Object[])">
            <summary>
            Create an instance Of result.
            </summary>
            <param name="parameters">
            An array of values that matches the number, order and type 
            of the parameters for this constructor. 
            </param>
            <returns>An object.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.SetValueOfProperty(System.Object@,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object)">
            <summary>
            Set the value of an object property.
            </summary>
            <param name="target">The object to set the property.</param>
            <param name="property">The result property to use.</param>
            <param name="dataBaseValue">The database value to set.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.ResolveSubMap(System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.GroupByPropertyNames">
            <summary>
            The GroupBy Properties.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.IsInitalized">
            <summary>
            Gets or sets a value indicating whether this instance is initalized.
            </summary>
            <value>
            	<c>true</c> if this instance is initalized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.Discriminator">
            <summary>
            The discriminator used to choose the good SubMap
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.Properties">
            <summary>
            The collection of ResultProperty.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.GroupByProperties">
            <summary>
            The GroupBy Properties.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.Parameters">
            <summary>
            The collection of constructor parameters.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.Id">
            <summary>
            Identifier used to identify the resultMap amongst the others.
            </summary>
            <example>GetProduct</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.ExtendMap">
            <summary>
            Extend ResultMap attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.Class">
            <summary>
            The output type class of the resultMap.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.DataExchange">
            <summary>
            Sets the IDataExchange
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.Fifo.FifoCacheController">
            <summary>
            Summary description for FifoCacheController.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.ICacheController">
            <summary>
            Summary description for ICacheController.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.ICacheController.Remove(System.Object)">
            <summary>
            Remove an object from a cache model
            </summary>
            <param name="key">the key to the object</param>
            <returns>the removed object(?)</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.ICacheController.Flush">
            <summary>
            Clears all elements from the cache.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.ICacheController.Configure(System.Collections.IDictionary)">
            <summary>
            Configures the CacheController
            </summary>
            <param name="properties"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.ICacheController.Item(System.Object)">
            <summary>
            Adds an item with the specified key and value into cached data.
            Gets a cached object with the specified key.
            </summary>
            <value>The cached object or <c>null</c></value>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Fifo.FifoCacheController.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Fifo.FifoCacheController.Remove(System.Object)">
            <summary>
            Remove an object from a cache model
            </summary>
            <param name="key">the key to the object</param>
            <returns>the removed object(?)</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Fifo.FifoCacheController.Flush">
            <summary>
            Clears all elements from the cache.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Fifo.FifoCacheController.Configure(System.Collections.IDictionary)">
            <summary>
            Configures the cache
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.Fifo.FifoCacheController.Item(System.Object)">
            <summary>
            Adds an item with the specified key and value into cached data.
            Gets a cached object with the specified key.
            </summary>
            <value>The cached object or <c>null</c></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory">
            <summary>
            Not much of a suprise, this is a factory class for TypeHandler objects.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.GetTypeHandler(System.Type)">
            <summary>
            Get a TypeHandler for a Type
            </summary>
            <param name="type">the Type you want a TypeHandler for</param>
            <returns>the handler</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.GetTypeHandler(System.Type,System.String)">
            <summary>
            Get a TypeHandler for a type
            </summary>
            <param name="type">the type you want a TypeHandler for</param>
            <param name="dbType">the database type</param>
            <returns>the handler</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.GetPrivateTypeHandler(System.Type,System.String)">
            <summary>
             Get a TypeHandler for a type and a dbType type
            </summary>
            <param name="type">the type</param>
            <param name="dbType">the dbType type</param>
            <returns>the handler</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.Register(System.Type,IBatisNet.DataMapper.TypeHandlers.ITypeHandler)">
            <summary>
            Register (add) a type handler for a type
            </summary>
            <param name="type">the type</param>
            <param name="handler">the handler instance</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.Register(System.Type,System.String,IBatisNet.DataMapper.TypeHandlers.ITypeHandler)">
            <summary>
            Register (add) a type handler for a type and dbType
            </summary>
            <param name="type">the type</param>
            <param name="dbType">the dbType (optional, if dbType is null the handler will be used for all dbTypes)</param>
            <param name="handler">the handler instance</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.GetUnkownTypeHandler">
            <summary>
            When in doubt, get the "unknown" type handler
            </summary>
            <returns>if I told you, it would not be unknown, would it?</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.IsSimpleType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.GetTypeAlias(System.String)">
            <summary>
            Gets a named TypeAlias from the list of available TypeAlias
            </summary>
            <param name="name">The name of the TypeAlias.</param>
            <returns>The TypeAlias.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.GetType(System.String)">
            <summary>
            Gets the type object from the specific class name.
            </summary>
            <param name="className">The supplied class name.</param>
            <returns>The correpsonding type.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.AddTypeAlias(System.String,IBatisNet.DataMapper.Configuration.Alias.TypeAlias)">
            <summary>
            Adds a named TypeAlias to the list of available TypeAlias.
            </summary>
            <param name="key">The key name.</param>
            <param name="typeAlias"> The TypeAlias.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableByteTypeHandler">
            <summary>
            TypeHandler for  Nullable Byte Type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableByteTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableByteTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableByteTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableByteTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableByteTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableByteTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableByteTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.EnumTypeHandler">
            <summary>
            Summary description for EnumTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.EnumTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
             Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.EnumTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.EnumTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.EnumTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.EnumTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.EnumTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.SessionStore.ISessionStore">
            <summary>
            Provides the contract for implementors who want to store session.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.ISessionStore.Store(IBatisNet.DataMapper.ISqlMapSession)">
            <summary>
            Store the specified session.
            </summary>
            <param name="session">The session to store</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.ISessionStore.Dispose">
            <summary>
            Remove the local session from the storage.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SessionStore.ISessionStore.LocalSession">
            <summary>
            Get the local session
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Proxy.LazyListFactory">
            <summary>
            Implementation of <see cref="T:IBatisNet.DataMapper.Proxy.ILazyFactory"/> to create proxy for an <see cref="T:System.Collections.IList"/> element.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Proxy.ILazyFactory">
            <summary>
            Contract of an <see cref="T:IBatisNet.DataMapper.Proxy.ILazyFactory"/>
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.ILazyFactory.CreateProxy(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,System.Object,IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>
            Create a new proxy instance.
            </summary>
            <param name="mappedStatement">The mapped statement.</param>
            <param name="param">The param.</param>
            <param name="target">The target.</param>
            <param name="setAccessor">The set accessor.</param>
            <returns>Returns a new proxy.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListFactory.CreateProxy(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,System.Object,IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>
            Create a new proxy instance.
            </summary>
            <param name="mappedStatement">The mapped statement.</param>
            <param name="param">The param.</param>
            <param name="target">The target.</param>
            <param name="setAccessor">The set accessor.</param>
            <returns>Returns a new proxy.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ListStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy"/> implementation when 
            a 'resultClass' attribute is specified and
            the type of the result object is <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ListStrategy.Process(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader@,System.Object)">
            <summary>
            Processes the specified <see cref="T:System.Data.IDataReader"/> 
            when a ResultClass is specified on the statement and
            the ResultClass is <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="request">The request.</param>
            <param name="reader">The reader.</param>
            <param name="resultObject">The result object.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.ExecuteEventArgs">
            <summary>
            Summary description for ExecuteEventArgs.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ExecuteEventArgs.StatementName">
            <summary>
            Set or get the statement name
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotParameterPresentTagHandler">
            <summary>
            Summary description for IsNotParameterPresentTagHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsParameterPresentTagHandler">
            <summary>
            Summary description for IsParameterPresentTagHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler">
            <summary>
            Description résumée de ConditionalTagHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler">
            <summary>
            Description résumée de BaseTagHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ISqlTagHandler">
            <summary>
            Summary description for ISqlTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ISqlTagHandler.DoStartFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ISqlTagHandler.DoEndFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ISqlTagHandler.DoPrepend(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ISqlTagHandler.IsPostParseRequired">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.SKIP_BODY">
            <summary>
            BODY TAG
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.INCLUDE_BODY">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.REPEAT_BODY">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.DoStartFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.DoEndFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.DoPrepend(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.AccessorFactory">
            <summary>
            The factory which build <see cref="T:IBatisNet.Common.Utilities.Objects.Members.IAccessor"/>
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.IsPostParseRequired">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.NOT_COMPARABLE">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.DoStartFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.DoEndFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.Compare(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="sqlTag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.CompareValues(System.Type,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.ConvertValue(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsParameterPresentTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsParameterPresentTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsParameterPresentTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotParameterPresentTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotParameterPresentTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotParameterPresentTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotEqualTagHandler">
            <summary>
            Summary description for IsNotEqualTagHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsEqualTagHandler">
            <summary>
            Summary description for IsEqualTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsEqualTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsEqualTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsEqualTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotEqualTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotEqualTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotEqualTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotEmpty">
            <summary>
            Represent an isNotEmpty sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotEmpty.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotEmpty"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.SubMapDeSerializer">
            <summary>
            Summary description for SubMapDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.SubMapDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a ResultMap object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsGreaterEqualDeSerializer">
            <summary>
            Summary description for IsGreaterEqualDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsGreaterEqualDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsGreaterEqualDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a Dynamic object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.DiscriminatorDeSerializer">
            <summary>
            Summary description for DiscriminatorDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.DiscriminatorDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a ResultMap object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.CacheModelDeSerializer">
            <summary>
            Summary description for CacheModelDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.CacheModelDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a CacheModel object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty">
            <summary>
            Summary description for ResultProperty.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.UNKNOWN_COLUMN_INDEX">
            <summary>
            
            </summary>		
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope,System.Type)">
            <summary>
            Initialize the PropertyInfo of the result property.
            </summary>
            <param name="resultClass"></param>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.Initialize(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory,IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>
            Initialize a the result property
            for AutoMapper
            </summary>
            <param name="setAccessor">An <see cref="T:IBatisNet.Common.Utilities.Objects.Members.ISetAccessor"/>.</param>
            <param name="typeHandlerFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.GetDataBaseValue(System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.TranslateValue(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>An <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.IsGenericIList">
            <summary>
            Tell us if the member type implement generic Ilist interface.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.IsIList">
            <summary>
            Tell us if the member type implement Ilist interface.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.ListFactory">
            <summary>
            List factory for <see cref="T:System.Collections.IList"/> property
            </summary>
            <remarks>Used by N+1 Select solution</remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.LazyFactory">
            <summary>
            The lazy loader factory
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.ArgumentStrategy">
            <summary>
            Sets or gets the <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/> used to fill the object property.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.PropertyStrategy">
            <summary>
            Sets or gets the <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/> used to fill the object property.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.CallBackName">
            <summary>
            Specify the custom type handlers to used.
            </summary>
            <remarks>Will be an alias to a class wchic implement ITypeHandlerCallback</remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.IsLazyLoad">
            <summary>
            Tell us if we must lazy load this property..
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.TypeHandler">
            <summary>
            The typeHandler used to work with the result property.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.DbType">
            <summary>
            Give an entry in the 'DbType' enumeration
            </summary>
            <example >
            For Sql Server, give an entry of SqlDbType : Bit, Decimal, Money...
            <br/>
            For Oracle, give an OracleType Enumeration : Byte, Int16, Number...
            </example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.CLRType">
            <summary>
            Specify the CLR type of the result.
            </summary>
            <remarks>
            The type attribute is used to explicitly specify the property type of the property to be set.
            Normally this can be derived from a property through reflection, but certain mappings such as
            HashTable cannot provide the type to the framework.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.Select">
            <summary>
            The name of the statement to retrieve the property
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.NestedResultMapName">
            <summary>
            The name of a nested ResultMap to set the property
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.PropertyName">
            <summary>
            The property name used to identify the property amongst the others.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.SetAccessor">
            <summary>
            Defines a field/property <see cref="T:IBatisNet.Common.Utilities.Objects.Members.ISetAccessor"/>
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.MemberType">
            <summary>
            Get the field/property type
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.HasNullValue">
            <summary>
            Tell if a nullValue is defined.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.NullValue">
            <summary>
            Null value replacement.
            </summary>
            <example>"no_email@provided.com"</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.NestedResultMap">
            <summary>
            A nested ResultMap use to set a property
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.IsComplexMemberName">
            <summary>
            Indicate if we have a complex member name as [FavouriteLineItem.Id]
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.ColumnIndex">
            <summary>
            Column Index
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.ColumnName">
            <summary>
            Column Name
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.ArrayListFactory">
            <summary>
            <see cref="T:IBatisNet.Common.Utilities.Objects.IFactory"/> that constracut <see cref="T:System.Collections.ArrayList"/> instance
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.ArrayListFactory.CreateInstance(System.Object[])">
            <summary>
            Create a new instance with the specified parameters
            </summary>
            <param name="parameters">An array of values that matches the number, order and type
            of the parameters for this constructor.</param>
            <returns>A new instance</returns>
            <remarks>
            If you call a constructor with no parameters, pass null.
            Anyway, what you pass will be ignore.
            </remarks>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection">
            <summary>
            A ParameterProperty Collection.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.#ctor">
            <summary>
            Constructs a ParameterProperty collection. The list is initially empty and has a capacity
            of zero. Upon adding the first element to the list the capacity is
            increased to 8, and then increased in multiples of two as required.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.#ctor(System.Int32)">
            <summary>
             Constructs a ParameterPropertyCollection with a given initial capacity. 
             The list is initially empty, but will have room for the given number of elements
             before any reallocations are required.
            </summary>
            <param name="capacity">The initial capacity of the list</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.Add(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty)">
            <summary>
            Add an ParameterProperty
            </summary>
            <param name="value"></param>
            <returns>Index</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.AddRange(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty[])">
            <summary>
            Add a list of ParameterProperty to the collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.AddRange(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection)">
            <summary>
            Add a list of ParameterProperty to the collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.Contains(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty)">
            <summary>
            Indicate if a ParameterProperty is in the collection
            </summary>
            <param name="value">A ParameterProperty</param>
            <returns>True fi is in</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.Insert(System.Int32,IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty)">
            <summary>
            Insert a ParameterProperty in the collection.
            </summary>
            <param name="index">Index where to insert.</param>
            <param name="value">A ParameterProperty</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.Remove(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty)">
            <summary>
            Remove a ParameterProperty of the collection.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a ParameterProperty at the given index. The size of the list is
            decreased by one.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.Resize(System.Int32)">
            <summary>
            Ensures that the capacity of this collection is at least the given minimum
            value. If the currect capacity of the list is less than min, the
            capacity is increased to twice the current capacity.
            </summary>
            <param name="minSize"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.Count">
            <summary>
            Read-only property describing how many elements are in the Collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.Length">
            <summary>
            Length of the collection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterPropertyCollection.Item(System.Int32)">
            <summary>
            Sets or Gets the ParameterProperty at the given index.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Commands.DefaultPreparedCommand">
            <summary>
            Summary description for DefaultPreparedCommand.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Commands.IPreparedCommand">
            <summary>
            Summary description for IPreparedCommand.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.IPreparedCommand.Create(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.ISqlMapSession,IBatisNet.DataMapper.Configuration.Statements.IStatement,System.Object)">
            <summary>
            Create an IDbCommand for the SqlMapSession and the current SQL Statement
            and fill IDbCommand IDataParameter's with the parameterObject.
            </summary>
            <param name="request"></param>
            <param name="session">The SqlMapSession</param>
            <param name="statement">The IStatement</param>
            <param name="parameterObject">
            The parameter object that will fill the sql parameter
            </param>
            <returns>An IDbCommand with all the IDataParameter filled.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DefaultPreparedCommand.Create(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.ISqlMapSession,IBatisNet.DataMapper.Configuration.Statements.IStatement,System.Object)">
            <summary>
            Create an IDbCommand for the SqlMapSession and the current SQL Statement
            and fill IDbCommand IDataParameter's with the parameterObject.
            </summary>
            <param name="request"></param>
            <param name="session">The SqlMapSession</param>
            <param name="statement">The IStatement</param>
            <param name="parameterObject">
            The parameter object that will fill the sql parameter
            </param>
            <returns>An IDbCommand with all the IDataParameter filled.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DefaultPreparedCommand.ApplyParameterMap(IBatisNet.DataMapper.ISqlMapSession,System.Data.IDbCommand,IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.Statements.IStatement,System.Object)">
            <summary>
            Applies the parameter map.
            </summary>
            <param name="session">The session.</param>
            <param name="command">The command.</param>
            <param name="request">The request.</param>
            <param name="statement">The statement.</param>
            <param name="parameterObject">The parameter object.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt16TypeHandler">
            <summary>
            TypeHandler for Nullable Int16 type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt16TypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt16TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt16TypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt16TypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt16TypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt16TypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt16TypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt16TypeHandler">
            <summary>
            TypeHandler for Nullable UInt16 Type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt16TypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt16TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt16TypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt16TypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt16TypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt16TypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt16TypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDecimalTypeHandler">
            <summary>
            TypeHandler for Nullable decimal Type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDecimalTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDecimalTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDecimalTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDecimalTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDecimalTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
            <remarks>
            value decimal must be  in format ######.##
             where . is separator for decimal
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDecimalTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDecimalTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.IResultGetter">
            <summary>
            Allows values to be retrieved from the underlying IDataReader.
            TypeHandlerCallback implementations use this interface to
            get values that they can subsequently manipulate before
            having them returned.  																																																														   * or index with these methods.
            </summary>
            <remarks>
            There is no need to implement this.  The implementation
            will be passed into the TypeHandlerCallback automatically.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.IResultGetter.DataReader">
            <summary>
            Returns the underlying IDataReader
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.IResultGetter.Value">
            <summary>
            Get the parameter value
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Mapper">
            <summary>
            A singleton class to access the default SqlMapper defined by the SqlMap.Config
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Mapper.Configure(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Mapper.InitMapper">
            <summary>
            Init the 'default' SqlMapper defined by the SqlMap.Config file.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Mapper.Instance">
            <summary>
            Get the instance of the SqlMapper defined by the SqlMap.Config file.
            </summary>
            <returns>A SqlMapper initalized via the SqlMap.Config file.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Mapper.Get">
            <summary>
            Get the instance of the SqlMapper defined by the SqlMap.Config file. (Convenience form of Instance method.)
            </summary>
            <returns>A SqlMapper initalized via the SqlMap.Config file.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectGenericListStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/> implementation when a 'select' attribute exists
            on a <see cref="T:System.Collections.IList"/> <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/>
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/> contract to set value object on <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy.Set(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader,System.Object)">
            <summary>
            Sets value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> on the target object.
            </summary>
            <param name="request">The request.</param>
            <param name="resultMap">The result map.</param>
            <param name="mapping">The ResultProperty.</param>
            <param name="target">The target.</param>
            <param name="reader">The reader.</param>
            <param name="keys">The keys</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy.Get(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader)">
            <summary>
            Gets the value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> that must be set on the target object.
            </summary>
            <param name="request">The request.</param>
            <param name="resultMap">The result map.</param>
            <param name="mapping">The mapping.</param>
            <param name="reader">The reader.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectGenericListStrategy.Set(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader,System.Object)">
            <summary>
             Sets value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> on the target object
             when a 'select' attribute exists and fills an <see cref="T:System.Collections.IList"/> property
             on the <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> are empties.
             </summary>
             <param name="request">The request.</param>
             <param name="resultMap">The result map.</param>
             <param name="mapping">The ResultProperty.</param>
             <param name="target">The target.</param>
             <param name="reader">The current <see cref="T:System.Data.IDataReader"/></param>
             <param name="keys">The keys</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectGenericListStrategy.Get(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader)">
            <summary>
            Gets the value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> that must be set on the target object.
            </summary>
            <param name="request">The request.</param>
            <param name="resultMap">The result map.</param>
            <param name="mapping">The mapping.</param>
            <param name="reader">The reader.</param>
            <param name="target">The target object</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.SelectListStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/> implementation when a 'select' attribute exists
            on a <see cref="T:System.Collections.IList"/> <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty"/>
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.SelectListStrategy.GetValue(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader@,System.Object)">
            <summary>
            Gets the value of an argument constructor.
            </summary>
            <param name="request">The current <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</param>
            <param name="mapping">The <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> with the argument infos.</param>
            <param name="reader">The current <see cref="T:System.Data.IDataReader"/>.</param>
            <param name="keys">The keys</param>
            <returns>The paremeter value.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.DefaultStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/> implementation when no 'select' or
            'resultMapping' attribute exists on a <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.DefaultStrategy.GetValue(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader@,System.Object)">
            <summary>
            Gets the value of an argument constructor.
            </summary>
            <param name="request">The current <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</param>
            <param name="mapping">The <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> with the argument infos.</param>
            <param name="reader">The current <see cref="T:System.Data.IDataReader"/>.</param>
            <param name="keys">The keys</param>
            <returns>The paremeter value.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.ISqlMapSession">
            <summary>
            SqlMap Session contract
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapSession.CreateConnection">
            <summary>
            Create the connection
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapSession.CreateConnection(System.String)">
            <summary>
            Create the connection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapSession.SqlMapper">
            <summary>
            Gets the SQL mapper.
            </summary>
            <value>The SQL mapper.</value>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotEmptyTagHandler">
            <summary>
            Summary description for IsNotEmptyTagHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsEmptyTagHandler">
            <summary>
            IsEmptyTagHandler represent a isEmpty tag element in a dynamic mapped statement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsEmptyTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsEmptyTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsEmptyTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotEmptyTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotEmptyTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotEmptyTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty">
            <summary>
            Summary description for ParameterProperty.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Initialize(IBatisNet.DataMapper.Scope.IScope,System.Type)">
            <summary>
            Initializes the parameter property
            </summary>
            <param name="scope">The scope.</param>
            <param name="parameterClass">The parameter class.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>An <see cref="T:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty"/></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.IsComplexMemberName">
            <summary>
            Indicate if we have a complex member name as [avouriteLineItem.Id]
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.CallBackName">
            <summary>
            Specify the custom type handlers to used.
            </summary>
            <remarks>Will be an alias to a class wchic implement ITypeHandlerCallback</remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.CLRType">
            <summary>
            Specify the CLR type of the parameter.
            </summary>
            <remarks>
            The type attribute is used to explicitly specify the property type to be read.
            Normally this can be derived from a property through reflection, but certain mappings such as
            HashTable cannot provide the type to the framework.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.TypeHandler">
            <summary>
            The typeHandler used to work with the parameter.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.ColumnName">
            <summary>
            Column Name for output parameter 
            in store proccedure.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Size">
            <summary>
            Column size.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Scale">
            <summary>
            Column Scale.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Precision">
            <summary>
            Column Precision.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.DbType">
            <summary>
            Give an entry in the 'DbType' enumeration
            </summary>
            <example >
            For Sql Server, give an entry of SqlDbType : Bit, Decimal, Money...
            <br/>
            For Oracle, give an OracleType Enumeration : Byte, Int16, Number...
            </example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.DirectionAttribute">
            <summary>
            The direction attribute of the XML parameter.
            </summary>
            <example> Input, Output, InputOutput</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Direction">
            <summary>
            Indicate the direction of the parameter.
            </summary>
            <example> Input, Output, InputOutput</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.PropertyName">
            <summary>
            Property name used to identify the property amongst the others.
            </summary>
            <example>EmailAddress</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.HasNullValue">
            <summary>
            Tell if a nullValue is defined._nullValue!=null
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.NullValue">
            <summary>
            Null value replacement.
            </summary>
            <example>"no_email@provided.com"</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.GetAccessor">
            <summary>
            Defines a field/property get accessor
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler">
            <summary>
            Summary description for MemoryCacheControler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.Remove(System.Object)">
            <summary>
            Remove an object from a cache model
            </summary>
            <param name="key">the key to the object</param>
            <returns>the removed object(?)</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.Flush">
            <summary>
            Clears all elements from the cache.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.Configure(System.Collections.IDictionary)">
            <summary>
            Configures the cache
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.Item(System.Object)">
            <summary>
            Adds an item with the specified key and value into cached data.
            Gets a cached object with the specified key.
            </summary>
            <value>The cached object or <c>null</c></value>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.StrongReference">
            <summary>
            Class to implement a strong (permanent) reference.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.StrongReference.Target">
            <summary>
            Gets the object (the target) referenced by this instance.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.UInt64TypeHandler">
            <summary>
            Summary description for UInt64TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UInt64TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UInt64TypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UInt64TypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UInt64TypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.UInt64TypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.DateTimeTypeHandler">
            <summary>
            Description résumée de DateTimeTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DateTimeTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DateTimeTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DateTimeTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DateTimeTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.DateTimeTypeHandler.IsSimpleType">
            <summary>
            Tell us if ot is a 'primitive' type
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.SessionStore.HybridWebThreadSessionStore">
            <summary>
            This implementation of <see cref="T:IBatisNet.DataMapper.SessionStore.ISessionStore"/>will first try 
            to get the currentrequest, and if not found, will use a thread local.
            </summary>
            <remarks>
            This is used for scenarios where most of the you need per request session, but you also does some work outside a 
            request (in a thread pool thread, for instance).
            </remarks>
        </member>
        <member name="T:IBatisNet.DataMapper.SessionStore.AbstractSessionStore">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.SessionStore.AbstractSessionStore.sessionName">
            <summary>
            session name
            </summary>	    
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.AbstractSessionStore.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.SessionStore.AbstractSessionStore"/> class.
            </summary>
            <param name="sqlMapperId">The SQL mapper id.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.AbstractSessionStore.Store(IBatisNet.DataMapper.ISqlMapSession)">
            <summary>
            Store the specified session.
            </summary>
            <param name="session">The session to store</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.AbstractSessionStore.Dispose">
            <summary>
            Remove the local session from the storage.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SessionStore.AbstractSessionStore.LocalSession">
            <summary>
            Get the local session
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.HybridWebThreadSessionStore.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.SessionStore.WebSessionStore"/> class.
            </summary>
            <param name="sqlMapperId">The SQL mapper id.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.HybridWebThreadSessionStore.Store(IBatisNet.DataMapper.ISqlMapSession)">
            <summary>
            Store the specified session.
            </summary>
            <param name="session">The session to store</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.HybridWebThreadSessionStore.Dispose">
            <summary>
            Remove the local session.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SessionStore.HybridWebThreadSessionStore.LocalSession">
            <summary>
            Get the local session
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ResultClassStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy"/> implementation when 
            a 'resultClass' attribute is specified.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ResultClassStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ResultClassStrategy"/> class.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ResultClassStrategy.Process(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader@,System.Object)">
            <summary>
            Processes the specified <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="request">The request.</param>
            <param name="reader">The reader.</param>
            <param name="resultObject">The result object.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PostBindind">
            <summary>
            All dataq tor retrieve 'select' <see cref="P:IBatisNet.DataMapper.MappedStatements.PostBindind.ResultProperty"/>
            </summary>
            <remarks>
            As ADO.NET allows one open <see cref="T:System.Data.IDataReader"/> per connection at once, we keep
            all the datas to open the next <see cref="T:System.Data.IDataReader"/> after having closed the current. 
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PostBindind.Statement">
            <summary>
            Gets or sets the statement.
            </summary>
            <value>The statement.</value>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PostBindind.ResultProperty">
            <summary>
            Gets or sets the result property.
            </summary>
            <value>The result property.</value>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PostBindind.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PostBindind.Keys">
            <summary>
            Gets or sets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PostBindind.Method">
            <summary>
            Gets or sets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PostBindind.ExecuteMethod">
            <summary>
            Enumeration of the ExecuteQuery method.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.MappedStatements.PostBindind.ExecuteMethod.ExecuteQueryForObject">
            <summary>
            Execute Query For Object
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.MappedStatements.PostBindind.ExecuteMethod.ExecuteQueryForIList">
            <summary>
            Execute Query For IList
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.MappedStatements.PostBindind.ExecuteMethod.ExecuteQueryForGenericIList">
            <summary>
            Execute Query For Generic IList
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.MappedStatements.PostBindind.ExecuteMethod.ExecuteQueryForArrayList">
            <summary>
            Execute Query For Array List
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.MappedStatements.PostBindind.ExecuteMethod.ExecuteQueryForStrongTypedIList">
            <summary>
            Execute Query For Strong Typed IList
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.DataExchange.BaseDataExchange">
            <summary>
            Summary description for BaseDataExchange.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.DataExchange.IDataExchange">
            <summary>
            Interface for exchanging data between a parameter map/result map and the related objects
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.IDataExchange.GetData(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Gets the data to be set into a IDataParameter.
            </summary>
            <param name="mapping"></param>
            <param name="parameterObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.IDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object)">
            <summary>
            Sets the value to the result property.
            </summary>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.IDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Sets the value to the parameter property.
            </summary>
            <remarks>Use to set value on output parameter</remarks>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.BaseDataExchange.#ctor(IBatisNet.DataMapper.DataExchange.DataExchangeFactory)">
            <summary>
            Constructor
            </summary>
            <param name="dataExchangeFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.BaseDataExchange.GetData(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Gets the data to be set into a IDataParameter.
            </summary>
            <param name="mapping"></param>
            <param name="parameterObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.BaseDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object)">
            <summary>
            Sets the value to the result property.
            </summary>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.BaseDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Sets the value to the parameter property.
            </summary>
            <remarks>Use to set value on output parameter</remarks>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.DataExchange.BaseDataExchange.DataExchangeFactory">
            <summary>
            Getter for the factory that created this object
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Generate">
            <summary>
            Represent a generate tag element.
            The generation would happen at the point where the 
            SqlMapClient instance is built.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Generate.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Generate.Table">
            <summary>
            The table name used to build the SQL query. 
            </summary>
            <remarks>
            Will be used to get the metadata to build the SQL if needed.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Generate.By">
            <summary>
            The by attribute is used to generate the where clause.
            </summary>
            <remarks>The by="" attribute can support multiple colums.</remarks>
            <example> 
            	&lt; delete ...&gt;
            		&lt;generate table="EMPLOYEE" by="EMPLOYEE_ID, LAST_MOD_DATE" /&gt;
            	&lt;/delete&gt;
            </example>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsLessEqual">
            <summary>
            Represent an isLessEqual sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsLessEqual.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsLessEqual"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.ProcedureDeSerializer">
            <summary>
            Summary description for ProcedureDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.ProcedureDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a Procedure object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.CreateInstanceOfResult(System.Object[])">
            <summary>
            Create an instance Of result.
            </summary>
            <param name="parameters">An array of values that matches the number, order and type
            of the parameters for this constructor.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.SetValueOfProperty(System.Object@,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object)">
            <summary>
            Set the value of an object property.
            </summary>
            <param name="target">The object to set the property.</param>
            <param name="property">The result property to use.</param>
            <param name="dataBaseValue">The database value to set.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.ResolveSubMap(System.Data.IDataReader)">
            <summary>
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.GroupByPropertyNames">
            <summary>
            The GroupBy Properties.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.GroupByProperties">
            <summary>
            The GroupBy Properties.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.IsInitalized">
            <summary>
            Gets or sets a value indicating whether this instance is initalized.
            </summary>
            <value>
            	<c>true</c> if this instance is initalized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.Discriminator">
            <summary>
            The discriminator used to choose the good SubMap
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.Properties">
            <summary>
            The collection of ResultProperty.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.Parameters">
            <summary>
            The collection of constructor parameters.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.Id">
            <summary>
            Identifier used to identify the resultMap amongst the others.
            </summary>
            <example>GetProduct</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.ExtendMap">
            <summary>
            Extend ResultMap attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.Class">
            <summary>
            The output type class of the resultMap.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.NullResultMap.DataExchange">
            <summary>
            Sets the IDataExchange
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.FlushInterval">
            <summary>
            Summary description for FlushInterval.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.FlushInterval.Initialize">
            <summary>
            Calcul the flush interval value in ticks
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.FlushInterval.Hours">
            <summary>
            Flush interval in hours
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.FlushInterval.Minutes">
            <summary>
            Flush interval in minutes
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.FlushInterval.Seconds">
            <summary>
            Flush interval in seconds
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.FlushInterval.Milliseconds">
            <summary>
            Flush interval in milliseconds
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.FlushInterval.Interval">
            <summary>
            Get the flush interval value
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.CacheModel">
            <summary>
            Summary description for CacheModel.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Cache.CacheModel.NO_FLUSH_INTERVAL">
            <summary>
            Constant to turn off periodic cache flushes
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Cache.CacheModel.NULL_OBJECT">
            <summary>
            This is used to represent null objects that are returned from the cache so 
            that they can be cached, too.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.RegisterTriggerStatement(IBatisNet.DataMapper.MappedStatements.IMappedStatement)">
            <summary>
            Event listener
            </summary>
            <param name="mappedStatement">A MappedStatement on which we listen ExecuteEventArgs event.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.FlushHandler(System.Object,IBatisNet.DataMapper.ExecuteEventArgs)">
            <summary>
            FlushHandler which clear the cache 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.Flush">
            <summary>
            Clears all elements from the cache.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.AddProperty(System.String,System.String)">
            <summary>
            Add a property
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.GetLock(IBatisNet.DataMapper.Configuration.Cache.CacheKey)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.Id">
            <summary>
            Identifier used to identify the CacheModel amongst the others.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.Implementation">
            <summary>
            Cache controller implementation name.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.CacheController">
            <summary>
            Set the cache controller
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.FlushInterval">
            <summary>
            Set or get the flushInterval (in Ticks)
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.IsSerializable">
            <summary>
            Specifie how the cache content should be returned.
            If true a deep copy is returned.
            </summary>
            <remarks>
            Combinaison
            IsReadOnly=true/IsSerializable=false : Returned instance of cached object
            IsReadOnly=false/IsSerializable=true : Returned coopy of cached object
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.IsReadOnly">
            <summary>
            Determines if the cache will be used as a read-only cache.
            Tells the cache model that is allowed to pass back a reference to the object
            existing in the cache.
            </summary>
            <remarks>
            The IsReadOnly properties works in conjonction with the IsSerializable propertie.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.Item(IBatisNet.DataMapper.Configuration.Cache.CacheKey)">
            <summary>
            Adds an item with the specified key and value into cached data.
            Gets a cached object with the specified key.
            </summary>
            <value>The cached object or <c>null</c></value>
            <remarks>
            A side effect of this method is that is may clear the cache
            if it has not been cleared in the flushInterval.
            </remarks> 
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.HitRatio">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.SByteTypeHandler">
            <summary>
            SByteTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.SByteTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.SByteTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.SByteTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.SByteTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.SByteTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.SByteTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableGuidTypeHandler">
            <summary>
            TypeHandler for Nullable Guid type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableGuidTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableGuidTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableGuidTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableGuidTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableGuidTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableGuidTypeHandler.IsSimpleType">
            <summary>
            Tell us if ot is a 'primitive' type
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableGuidTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.AnsiStringTypeHandler">
            <summary>
            TypeHandler for AnsiString dbType
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.AnsiStringTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
             Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.AnsiStringTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.AnsiStringTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.AnsiStringTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.AnsiStringTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.AnsiStringTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.Proxy.LazyList">
            <summary>
            A lazy list
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyList.Load(System.String)">
            <summary>
            Resolve the lazy loading.
            </summary>
            <param name="methodName">Name of the method.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyList.#ctor(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,System.Object,IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>
            Initializes a new instance of the <see cref="T:LazyList"/> class.
            </summary>
            <param name="mappedSatement">The mapped satement.</param>
            <param name="param">The param.</param>
            <param name="target">The target.</param>
            <param name="setAccessor">The set accessor.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyList.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to add to the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            The position into which the new element was inserted.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyList.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyList.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"></see> contains a specific value.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to locate in the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            true if the <see cref="T:System.Object"></see> is found in the <see cref="T:System.Collections.IList"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyList.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to locate in the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            The index of value if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyList.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"></see> at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The <see cref="T:System.Object"></see> to insert into the <see cref="T:System.Collections.IList"></see>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
            <exception cref="T:System.NullReferenceException">value is null reference in the <see cref="T:System.Collections.IList"></see>.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyList.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to remove from the <see cref="T:System.Collections.IList"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyList.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList"></see> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> has a fixed size.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"></see> has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.PreparedStatement">
            <summary>
            Construct the list of IDataParameters for the statement
            and prepare the sql
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.PreparedStatement.DbParametersName">
            <summary>
            The list of IDataParameter name used by the PreparedSql.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.PreparedStatement.DbParameters">
            <summary>
            The list of IDataParameter to use for the PreparedSql.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.PreparedStatement.PreparedSql">
            <summary>
            The prepared statement.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsEqual">
            <summary>
            Represent an isEqual sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsEqual.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsEqual"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.UpdateDeSerializer">
            <summary>
            Summary description for UpdateDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.UpdateDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a Procedure object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.TypeAliasDeSerializer">
            <summary>
            Summary description for TypeAliasDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.TypeAliasDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a TypeAlias object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.InsertDeSerializer">
            <summary>
            Summary description for InsertDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.InsertDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a TypeHandler object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.DeSerializerFactory">
            <summary>
            Summary description for DeSerializerFactory.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.DeSerializerFactory.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Constructor
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.DeSerializerFactory.GetDeSerializer(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Commands.DataReaderTransformer">
            <summary>
            For <see cref="T:System.Data.IDataReader"/> which don't support M.A.R.S, wraps the current <see cref="T:System.Data.IDataReader"/>
            in an <see cref="T:IBatisNet.DataMapper.Commands.InMemoryDataReader"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderTransformer.Transform(System.Data.IDataReader,IBatisNet.Common.IDbProvider)">
            <summary>
             Creates a DataReaderAdapter from a <see cref="T:System.Data.IDataReader"/>
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> which holds the records from the Database.</param>
            <param name="dbProvider">The databse provider <see cref="T:IBatisNet.Common.IDbProvider"/></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Commands.DataReaderDecorator">
            <summary>
            Decorate an <see cref="T:System.Data.IDataReader"></see>
            to auto move to next ResultMap on NextResult call. 
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.#ctor(System.Data.IDataReader,IBatisNet.DataMapper.Scope.RequestScope)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Commands.DataReaderDecorator"/> class.
            </summary>
            <param name="dataReader">The data reader.</param>
            <param name="request">The request scope</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataReader#Close">
            <summary>
            Closes the <see cref="T:System.Data.IDataReader"></see> 0bject.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataReader#GetSchemaTable">
            <summary>
            Returns a <see cref="T:System.Data.DataTable"></see> that describes the column metadata of the <see cref="T:System.Data.IDataReader"></see>.
            </summary>
            <returns>
            A <see cref="T:System.Data.DataTable"></see> that describes the column metadata.
            </returns>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.IDataReader"></see> is closed. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataReader#NextResult">
            <summary>
            Advances the data reader to the next result, when reading the results of batch SQL statements.
            </summary>
            <returns>
            true if there are more rows; otherwise, false.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataReader#Read">
            <summary>
            Advances the <see cref="T:System.Data.IDataReader"></see> to the next record.
            </summary>
            <returns>
            true if there are more rows; otherwise, false.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetByte(System.Int32)">
            <summary>
            Gets the 8-bit unsigned integer value of the specified column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>
            The 8-bit unsigned integer value of the specified column.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="fieldOffset">The index within the field from which to start the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferoffset">The index for buffer to start the read operation.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of bytes read.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetChar(System.Int32)">
            <summary>
            Gets the character value of the specified column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>
            The character value of the specified column.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="fieldoffset">The index within the row from which to start the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferoffset">The index for buffer to start the read operation.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of characters read.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetData(System.Int32)">
            <summary>
            Gets an <see cref="T:System.Data.IDataReader"></see> to be used when the field points to more remote structured data.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            An <see cref="T:System.Data.IDataReader"></see> to be used when the field points to more remote structured data.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetDataTypeName(System.Int32)">
            <summary>
            Gets the data type information for the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The data type information for the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetDateTime(System.Int32)">
            <summary>
            Gets the date and time data value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The date and time data value of the spcified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetDecimal(System.Int32)">
            <summary>
            Gets the fixed-position numeric value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The fixed-position numeric value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetDouble(System.Int32)">
            <summary>
            Gets the double-precision floating point number of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The double-precision floating point number of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetFieldType(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Type"></see> information corresponding to the type of <see cref="T:System.Object"></see> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)"></see>.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The <see cref="T:System.Type"></see> information corresponding to the type of <see cref="T:System.Object"></see> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)"></see>.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetFloat(System.Int32)">
            <summary>
            Gets the single-precision floating point number of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The single-precision floating point number of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetGuid(System.Int32)">
            <summary>
            Returns the GUID value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The GUID value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetInt16(System.Int32)">
            <summary>
            Gets the 16-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The 16-bit signed integer value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetInt32(System.Int32)">
            <summary>
            Gets the 32-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The 32-bit signed integer value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetInt64(System.Int32)">
            <summary>
            Gets the 64-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The 64-bit signed integer value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetName(System.Int32)">
            <summary>
            Gets the name for the field to find.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The name of the field or the empty string (""), if there is no value to return.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetOrdinal(System.String)">
            <summary>
            Return the index of the named field.
            </summary>
            <param name="name">The name of the field to find.</param>
            <returns>The index of the named field.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetString(System.Int32)">
            <summary>
            Gets the string value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The string value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#GetValue(System.Int32)">
            <summary>
            Return the value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The <see cref="T:System.Object"></see> which will contain the field value upon return.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#IsDBNull(System.Int32)">
            <summary>
            Return whether the specified field is set to null.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            true if the specified field is set to null. Otherwise, false.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataReader#Depth">
            <summary>
            Gets a value indicating the depth of nesting for the current row.
            </summary>
            <value></value>
            <returns>The level of nesting.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataReader#IsClosed">
            <summary>
            Gets a value indicating whether the data reader is closed.
            </summary>
            <value></value>
            <returns>true if the data reader is closed; otherwise, false.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#FieldCount">
            <summary>
            Gets the number of columns in the current row.
            </summary>
            <value></value>
            <returns>When not positioned in a valid recordset, 0; otherwise the number of columns in the current record. The default is -1.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.DataReaderDecorator.System#Data#IDataRecord#Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the specified i.
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler">
            <summary>
             Implementation of TypeHandler for dealing with unknown types
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler.#ctor(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory)">
            <summary>
            Constructor to create via a factory
            </summary>
            <param name="factory">the factory to associate this with</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Performs processing on a value before it is used to set
            the parameter of a IDbCommand.
            </summary>
            <param name="dataParameter"></param>
            <param name="parameterValue">The value to be set</param>
            <param name="dbType">Data base type</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler.Equals(System.Object,System.String)">
            <summary>
             Compares two values (that this handler deals with) for equality
            </summary>
            <param name="obj">one of the objects</param>
            <param name="str">the other object as a String</param>
            <returns>true if they are equal</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt64TypeHandler">
            <summary>
            TypeHandler for Nullable UInt64 Type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt64TypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt64TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt64TypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt64TypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt64TypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt64TypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt64TypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt64TypeHandler">
            <summary>
            TypeHandler for Nullable Int64 Type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt64TypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt64TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt64TypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt64TypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value 
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt64TypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt64TypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt64TypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Int32TypeHandler">
            <summary>
            Summary description for Int32TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int32TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int32TypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int32TypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int32TypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Int32TypeHandler.IsSimpleType">
            <summary>
            Tell us if ot is a 'primitive' type
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.SqlMapSession">
            <summary>
            Summary description for SqlMapSession.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.#ctor(IBatisNet.DataMapper.ISqlMapper)">
            <summary>
            
            </summary>
            <param name="sqlMapper"></param>
        </member>
        <member name="F:IBatisNet.DataMapper.SqlMapSession._consistent">
            <summary>
            Changes the vote to commit (true) or to abort (false) in transsaction
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.SqlMapSession._connection">
            <summary>
            Holds value of connection
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.SqlMapSession._transaction">
            <summary>
            Holds value of transaction
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.Complete">
            <summary>
            Complete (commit) a transaction
            </summary>
            <remarks>
            Use in 'using' syntax.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.OpenConnection">
            <summary>
            Open the connection
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CreateConnection">
            <summary>
            Create the connection
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CreateConnection(System.String)">
            <summary>
            Create the connection
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.OpenConnection(System.String)">
            <summary>
            Open a connection, on the specified connection string.
            </summary>
            <param name="connectionString">The connection string</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CloseConnection">
            <summary>
            Close the connection
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.BeginTransaction">
            <summary>
            Begins a database transaction.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.BeginTransaction(System.String)">
            <summary>
            Open a connection and begin a transaction on the specified connection string.
            </summary>
            <param name="connectionString">The connection string</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.BeginTransaction(System.Boolean)">
            <summary>
            Begins a database transaction
            </summary>
            <param name="openConnection">Open a connection.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a database transaction with the specified isolation level.
            </summary>
            <param name="isolationLevel">
            The isolation level under which the transaction should run.
            </param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.BeginTransaction(System.String,System.Data.IsolationLevel)">
            <summary>
            Open a connection and begin a transaction on the specified connection string.
            </summary>
            <param name="connectionString">The connection string</param>
            <param name="isolationLevel">The transaction isolation level for this connection.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.BeginTransaction(System.Boolean,System.Data.IsolationLevel)">
            <summary>
            Begins a transaction on the current connection
            with the specified IsolationLevel value.
            </summary>
            <param name="isolationLevel">The transaction isolation level for this connection.</param>
            <param name="openConnection">Open a connection.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.BeginTransaction(System.String,System.Boolean,System.Data.IsolationLevel)">
            <summary>
            Begins a transaction on the current connection
            with the specified IsolationLevel value.
            </summary>
            <param name="isolationLevel">The transaction isolation level for this connection.</param>
            <param name="connectionString">The connection string</param>
            <param name="openConnection">Open a connection.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CommitTransaction">
            <summary>
            Commits the database transaction.
            </summary>
            <remarks>
            Will close the connection.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CommitTransaction(System.Boolean)">
            <summary>
            Commits the database transaction.
            </summary>
            <param name="closeConnection">Close the connection</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.RollBackTransaction">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
            <remarks>
            Will close the connection.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.RollBackTransaction(System.Boolean)">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
            <param name="closeConnection">Close the connection</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CreateCommand(System.Data.CommandType)">
            <summary>
            Create a command object
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CreateDataParameter">
            <summary>
            Create an IDataParameter
            </summary>
            <returns>An IDataParameter.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CreateDataAdapter">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CreateDataAdapter(System.Data.IDbCommand)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.Dispose">
            <summary>
            Releasing, or resetting resources.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapSession.SqlMapper">
            <summary>
            Gets the SQL mapper.
            </summary>
            <value>The SQL mapper.</value>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapSession.DataSource">
            <summary>
            The data source use by the session.
            </summary>
            <value></value>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapSession.Connection">
            <summary>
            The Connection use by the session.
            </summary>
            <value></value>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapSession.Transaction">
            <summary>
            The Transaction use by the session.
            </summary>
            <value></value>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapSession.IsTransactionStart">
            <summary>
            Indicates if a transaction is open  on
            the session.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapSession.Consistent">
            <summary>
            Changes the vote for transaction to commit (true) or to abort (false).
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ReaderAutoMapper">
            <summary>
            Build a dynamic instance of a <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection"/>
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ReaderAutoMapper.Build(IBatisNet.DataMapper.DataExchange.DataExchangeFactory,System.Data.IDataReader,System.Object@)">
            <summary>
            Builds a <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection"/> for an <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap"/>.
            </summary>
            <param name="dataExchangeFactory">The data exchange factory.</param>
            <param name="reader">The reader.</param>
            <param name="resultObject">The result object.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.ObjectStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.IPostSelectStrategy"/> implementation to exceute a query for object.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.IPostSelectStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.IPostSelectStrategy"/> contract to excute a 'select' <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/>
            after the process of the main <see cref="T:System.Data.IDataReader"/>
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.IPostSelectStrategy.Execute(IBatisNet.DataMapper.MappedStatements.PostBindind,IBatisNet.DataMapper.Scope.RequestScope)">
            <summary>
            Executes the specified <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.
            </summary>
            <param name="postSelect">The <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.</param>
            <param name="request">The <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.ObjectStrategy.Execute(IBatisNet.DataMapper.MappedStatements.PostBindind,IBatisNet.DataMapper.Scope.RequestScope)">
            <summary>
            Executes the specified <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.
            </summary>
            <param name="postSelect">The <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.</param>
            <param name="request">The <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/></param>
        </member>
        <member name="T:IBatisNet.DataMapper.DataExchange.DotNetObjectDataExchange">
            <summary>
            IDataExchange implementation for .NET object
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.DotNetObjectDataExchange.#ctor(System.Type,IBatisNet.DataMapper.DataExchange.DataExchangeFactory)">
            <summary>
            Cosntructor
            </summary>
            <param name="dataExchangeFactory"></param>
            <param name="parameterClass"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.DotNetObjectDataExchange.GetData(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Gets the data to be set into a IDataParameter.
            </summary>
            <param name="mapping"></param>
            <param name="parameterObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.DotNetObjectDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object)">
            <summary>
            Sets the value to the result property.
            </summary>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.DotNetObjectDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Sets the value to the parameter property.
            </summary>
            <remarks>Use to set value on output parameter</remarks>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Update">
            <summary>
            Summary description for Update.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Update.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Update.Generate">
            <summary>
            The Generate tag used by a generated update statement.
            (CRUD operation)
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.SelectKey">
            <summary>
            Represent a SelectKey tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SelectKey.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SelectKey.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configurationScope">The scope of the configuration</param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.SelectKey.ExtendStatement">
            <summary>
            Extend statement attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.SelectKey.PropertyName">
            <summary>
            The property name object to fill with the key.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.SelectKey.SelectKeyType">
            <summary>
            The type of the selectKey tag : 'Pre' or 'Post'
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.SelectKey.isAfter">
            <summary>
            True if it is a post-generated key.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNull">
            <summary>
            Represent an isNull sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNull.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsLessThan">
            <summary>
            Represent an isLessThan sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsLessThan.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsLessThan"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql">
            <summary>
            DynamicSql represent the root element of a dynamic sql statement
            </summary>
            <example>
                 <dynamic prepend="where">...</dynamic>
            </example>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.ISql">
            <summary>
            Summary description for ISql.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.ISql.GetRequestScope(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,IBatisNet.DataMapper.ISqlMapSession)">
            <summary>
            Builds a new <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/> and the <see cref="T:System.Data.IDbCommand"/> text to execute.
            </summary>
            <param name="parameterObject">
            The parameter object (used by DynamicSql/SimpleDynamicSql).
            Use to complete the sql statement.
            </param>
            <param name="session">The current session</param>
            <param name="mappedStatement">The <see cref="T:IBatisNet.DataMapper.MappedStatements.IMappedStatement"/>.</param>
            <returns>A new <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql"/> class.
            </summary>
            <param name="configScope">The config scope.</param>
            <param name="statement">The statement.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.AddChild(IBatisNet.DataMapper.Configuration.Sql.Dynamic.ISqlChild)">
            <summary>
            
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.GetRequestScope(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,IBatisNet.DataMapper.ISqlMapSession)">
            <summary>
            Builds a new <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/> and the <see cref="T:System.Data.IDbCommand"/> text to execute.
            </summary>
            <param name="parameterObject">The parameter object (used in DynamicSql)</param>
            <param name="session">The current session</param>
            <param name="mappedStatement">The <see cref="T:IBatisNet.DataMapper.MappedStatements.IMappedStatement"/>.</param>
            <returns>A new <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.Process(IBatisNet.DataMapper.Scope.RequestScope,System.Object)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.ProcessBodyChildren(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,System.Object,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="ctx"></param>
            <param name="parameterObject"></param>
            <param name="localChildren"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.ProcessBodyChildren(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,System.Object,System.Collections.IEnumerator,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="ctx"></param>
            <param name="parameterObject"></param>
            <param name="localChildren"></param>
            <param name="buffer"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.BuildPreparedStatement(IBatisNet.DataMapper.ISqlMapSession,IBatisNet.DataMapper.Scope.RequestScope,System.String)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="request"></param>
            <param name="sqlStatement"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.ResultPropertyDeSerializer">
            <summary>
            Summary description for ResultPropertyDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.ResultPropertyDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a ResultProperty object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ParameterSetterImpl">
            <summary>
            A ParameterSetter implementation
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ParameterSetterImpl.#ctor(System.Data.IDataParameter)">
            <summary>
            Default Constructor
            </summary>
            <param name="dataParameter"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ParameterSetterImpl.DataParameter">
            <summary>
            Returns the underlying DataParameter
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ParameterSetterImpl.Value">
            <summary>
            Set the parameter value
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Proxy.LazyListGenericFactory">
            <summary>
               /// Implementation of <see cref="T:IBatisNet.DataMapper.Proxy.ILazyFactory"/> to create proxy for an generic IList element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGenericFactory.CreateProxy(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,System.Object,IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>
            Create a new proxy instance.
            </summary>
            <param name="mappedStatement">The mapped statement.</param>
            <param name="param">The param.</param>
            <param name="target">The target.</param>
            <param name="setAccessor">The set accessor.</param>
            <returns>Returns a new proxy.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.SimpleTypeStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy"/> implementation when 
            a 'resultClass' attribute is specified and
            the type of the result object is primitive.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.SimpleTypeStrategy.Process(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader@,System.Object)">
            <summary>
            Processes the specified <see cref="T:System.Data.IDataReader"/> 
            when a ResultClass is specified on the statement and
            the ResultClass is a SimpleType.
            </summary>
            <param name="request">The request.</param>
            <param name="reader">The reader.</param>
            <param name="resultObject">The result object.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.SelectKeyType">
            <summary>
            Indicate if the generated key by a selectKey statement
             concern a pre or post-generated key.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.SelectKeyType.pre">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.SelectKeyType.post">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.CacheKeyType">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.CacheKeyType.Object">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.CacheKeyType.List">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.CacheKeyType.Map">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.RowDelegate">
            <summary>
            A delegate called once per row in the QueryWithRowDelegate method
            </summary>
            <param name="obj">The object currently being processed.</param>
            <param name="parameterObject">The optional parameter object passed into the QueryWithRowDelegate method.</param>
            <param name="list">The IList that will be returned to the caller.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.RowDelegate`1">
            <summary>
            A delegate called once per row in the QueryWithRowDelegate method
            </summary>
            <param name="obj">The object currently being processed.</param>
            <param name="parameterObject">The optional parameter object passed into the QueryWithRowDelegate method.</param>
            <param name="list">The IList that will be returned to the caller.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.DictionaryRowDelegate`2">
            <summary>
            A delegate called once per row in the QueryForMapWithRowDelegate method
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="parameterObject">The optional parameter object passed into the QueryForMapWithRowDelegate method.</param>
            <param name="dictionary">The IDictionary that will be returned to the caller.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.DictionaryRowDelegate">
            <summary>
            A delegate called once per row in the QueryForMapWithRowDelegate method
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="parameterObject">The optional parameter object passed into the QueryForMapWithRowDelegate method.</param>
            <param name="dictionary">The IDictionary that will be returned to the caller.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql">
            <summary>
            Summary description for SimpleDynamicSql.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql.#ctor(IBatisNet.DataMapper.Scope.IScope,System.String,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql"/> class.
            </summary>
            <param name="scope">The scope.</param>
            <param name="sqlStatement">The SQL statement.</param>
            <param name="statement">The statement.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql.GetSql(System.Object)">
            <summary>
            
            </summary>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql.IsSimpleDynamicSql(System.String)">
            <summary>
            
            </summary>
            <param name="sqlStatement"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql.ProcessDynamicElements(System.Object)">
            <summary>
            
            </summary>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql.GetRequestScope(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,IBatisNet.DataMapper.ISqlMapSession)">
            <summary>
            Builds a new <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/> and the sql command text to execute.
            </summary>
            <param name="parameterObject">The parameter object (used in DynamicSql)</param>
            <param name="session">The current session</param>
            <param name="mappedStatement">The <see cref="T:IBatisNet.DataMapper.MappedStatements.IMappedStatement"/>.</param>
            <returns>A new <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql.BuildPreparedStatement(IBatisNet.DataMapper.ISqlMapSession,IBatisNet.DataMapper.Scope.RequestScope,System.String)">
            <summary>
            Build the PreparedStatement
            </summary>
            <param name="session"></param>
            <param name="request"></param>
            <param name="sqlStatement"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ITypeHandlerCallback">
            <summary>
            A simple interface for implementing custom type handlers.
            <p/>
            Using this interface, you can implement a type handler that
            will perform customized processing before parameters are set
            on a IDbCommand and after values are retrieved from
            a IDataReader.  Using a custom type handler you can extend
            the framework to handle types that are not supported, or
            handle supported types in a different way.  For example,
            you might use a custom type handler to implement proprietary
            BLOB support (e.g. Oracle), or you might use it to handle
            booleans using "Y" and "N" instead of the more typical 0/1.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandlerCallback.SetParameter(IBatisNet.DataMapper.TypeHandlers.IParameterSetter,System.Object)">
            <summary>
            Performs processing on a value before it is used to set
            the parameter of a IDbCommand.
            </summary>
            <param name="setter">The interface for setting the value on the IDbCommand.</param>
            <param name="parameter">The value to be set</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandlerCallback.GetResult(IBatisNet.DataMapper.TypeHandlers.IResultGetter)">
            <summary>
            Performs processing on a value before after it has been retrieved
            from a IDataReader.
            </summary>
            <param name="getter">The interface for getting the value from the IDataReader.</param>
            <returns>The processed value.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandlerCallback.ValueOf(System.String)">
            <summary>
            Casts the string representation of a value into a type recognized by
            this type handler.  This method is used to translate nullValue values
            into types that can be appropriately compared.  If your custom type handler
            cannot support nullValues, or if there is no reasonable string representation
            for this type (e.g. File type), you can simply return the String representation
            as it was passed in.  It is not recommended to return null, unless null was passed
            in.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ITypeHandlerCallback.NullValue">
            <summary>
            The null value for this type
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.BooleanTypeHandler">
            <summary>
            Boolean TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BooleanTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BooleanTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BooleanTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BooleanTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.BooleanTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.Scope.ConfigurationScope">
            <summary>
            The ConfigurationScope maintains the state of the build process.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Scope.IScope">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.IScope.ErrorContext">
            <summary>
             Get the error context
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.IScope.DataExchangeFactory">
            <summary>
            The factory for DataExchange objects
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Scope.ConfigurationScope.EMPTY_PARAMETER_MAP">
            <summary>
            Empty parameter map
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Scope.ConfigurationScope.DOT">
            <summary>
            Dot representation.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.ConfigurationScope.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.ConfigurationScope.ApplyNamespace(System.String)">
            <summary>
            Register under Statement Name or Fully Qualified Statement Name
            </summary>
            <param name="id">An Identity</param>
            <returns>The new Identity</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.ConfigurationScope.ResolveTypeHandler(System.Type,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Resolves the type handler.
            </summary>
            <param name="clazz">The clazz.</param>
            <param name="memberName">Name of the member.</param>
            <param name="clrType">Type of the CLR.</param>
            <param name="dbType">Type of the db.</param>
            <param name="forSetter">if set to <c>true</c> [for setter].</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.SqlIncludes">
            <summary>
            The list of sql fragment
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.XmlNamespaceManager">
            <summary>
            XmlNamespaceManager
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.ValidateSqlMap">
            <summary>
            Set if the parser should validate the sqlMap documents
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.IsXmlValid">
            <summary>
            Tells us if the xml configuration file validate the schema 
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.SqlMapNamespace">
            <summary>
            The current SqlMap namespace.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.SqlMapper">
            <summary>
            The SqlMapper we are building.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.DataExchangeFactory">
            <summary>
            A factory for DataExchange objects
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.IsCallFromDao">
            <summary>
            Tell us if we are in a DataAccess context.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.IsCacheModelsEnabled">
            <summary>
            Tell us if we cache model is enabled.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.DataSource">
            <summary>
            External data source
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.NodeContext">
            <summary>
            The current context node we are analizing
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.SqlMapConfigDocument">
            <summary>
            The XML SqlMap config file
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.SqlMapDocument">
            <summary>
            A XML SqlMap file
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.UseConfigFileWatcher">
            <summary>
            Tell us if we use Configuration File Watcher
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.UseStatementNamespaces">
            <summary>
            Tell us if we use statements namespaces
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.ErrorContext">
            <summary>
             Get the request's error context
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.Providers">
            <summary>
             List of providers
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.Properties">
            <summary>
             List of global properties
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.UseReflectionOptimizer">
            <summary>
            Indicates if we can use reflection optimizer.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.CacheModelFlushOnExecuteStatements">
            <summary>
            Temporary storage for mapping cache model ids (key is System.String) to statements (value is IList which contains IMappedStatements).
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Proxy.LazyLoadInterceptor">
            <summary>
            Default implementation of the interceptor reponsible of load the lazy element
            Could load collections and single objects
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyLoadInterceptor.#cctor">
            <summary>
            Static Constructor for a lazy list loader
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyLoadInterceptor.#ctor(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,System.Object,IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>
            Constructor for a lazy list loader
            </summary>
            <param name="mappedSatement">The mapped statement used to build the list</param>
            <param name="param">The parameter object used to build the list</param>
            <param name="setAccessor">The proxified member accessor.</param>
            <param name="target">The target object which contains the property proxydied.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyLoadInterceptor.Intercept(Castle.DynamicProxy.IInvocation,System.Object[])">
            <summary>
            Intercepts the specified invocation.
            </summary>
            <param name="invocation">The invocation.</param>
            <param name="arguments">The target arguments.</param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Proxy.LazyListGeneric`1">
            <summary>
            A lazy generic list
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.#ctor(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,System.Object,IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>
            Initializes a new instance of the LazyListGeneric class.
            </summary>
            <param name="mappedSatement">The mapped satement.</param>
            <param name="param">The param.</param>
            <param name="target">The target.</param>
            <param name="setAccessor">The set accessor.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.Load(System.String)">
            <summary>
            Resolve the lazy loading.
            </summary>
            <param name="methodName">Name of the method.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"></see>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"></see> at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"></see>.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"></see> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"></see>.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or-arrayIndex is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"></see> is greater than the available space from arrayIndex to the end of the destination array.-or-Type T cannot be cast automatically to the type of the destination array.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="!:System.Collections.Generic.IEnumerator"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to add to the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            The position into which the new element was inserted.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#IList#Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"></see> contains a specific value.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to locate in the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            true if the <see cref="T:System.Object"></see> is found in the <see cref="T:System.Collections.IList"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to locate in the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            The index of value if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"></see> at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The <see cref="T:System.Object"></see> to insert into the <see cref="T:System.Collections.IList"></see>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
            <exception cref="T:System.NullReferenceException">value is null reference in the <see cref="T:System.Collections.IList"></see>.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to remove from the <see cref="T:System.Collections.IList"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"></see> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"></see>.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.Item(System.Int32)">
            <summary>
            Gets or sets the object at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> has a fixed size.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"></see> has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#ICollection#Count">
            <summary>
            Gets the number of elements contained in the <see cref="!:System.Collections.Generic.ICollection"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="!:System.Collections.Generic.ICollection"></see>.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Proxy.LazyListGeneric`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.SelectMappedStatement">
            <summary>
            Summary description for SelectMappedStatement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.SelectMappedStatement.#ctor(IBatisNet.DataMapper.ISqlMapper,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="sqlMap">An SqlMap</param>
            <param name="statement">An SQL statement</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.SelectMappedStatement.ExecuteInsert(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.SelectMappedStatement.ExecuteUpdate(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Insert">
            <summary>
            Represent an insert statement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Insert.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Insert.ExtendStatement">
            <summary>
            Extend statement attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Insert.SelectKey">
            <summary>
            The selectKey statement used by an insert statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Insert.Generate">
            <summary>
            The Generate tag used by a generated insert statement.
            (CRUD operation)
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Static.StaticSql">
            <summary>
            Summary description for StaticSql.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Static.StaticSql.#ctor(IBatisNet.DataMapper.Scope.IScope,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="statement">The statement.</param>
            <param name="scope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Static.StaticSql.GetRequestScope(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,IBatisNet.DataMapper.ISqlMapSession)">
            <summary>
            Builds a new <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/> and the sql command text to execute.
            </summary>
            <param name="parameterObject">The parameter object (used in DynamicSql)</param>
            <param name="session">The current session</param>
            <param name="mappedStatement">The <see cref="T:IBatisNet.DataMapper.MappedStatements.IMappedStatement"/>.</param>
            <returns>A new <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Static.StaticSql.BuildPreparedStatement(IBatisNet.DataMapper.ISqlMapSession,System.String)">
            <summary>
            Build the PreparedStatement
            </summary>
            <param name="session"></param>
            <param name="sqlStatement"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotPropertyAvailableTagHandler">
            <summary>
            Summary description for IsNotPropertyAvailableTagHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsPropertyAvailableTagHandler">
            <summary>
            Summary description for IsPropertyAvailableTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsPropertyAvailableTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsPropertyAvailableTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsPropertyAvailableTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotPropertyAvailableTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotPropertyAvailableTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotPropertyAvailableTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsParameterPresent">
            <summary>
            Represent an isParameterPresent sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsParameterPresent.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsParameterPresent"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotNull">
            <summary>
            Represent an isNotNull sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotNull.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotNull"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.ResultMapDeSerializer">
            <summary>
            Summary description for ResultMapDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.ResultMapDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a ResultMap object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsNotNullDeSerializer">
            <summary>
            Summary description for IsNotNullDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsNotNullDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsNotNullDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a IsNotNull object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.SubMap">
            <summary>
            Summary description for SubMap.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.SubMap.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.SubMap.DiscriminatorValue">
            <summary>
            Discriminator value
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.SubMap.ResultMapName">
            <summary>
            The name of the ResultMap used if the column value is = to the Discriminator Value
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.SubMap.ResultMap">
            <summary>
            The resultMap used if the column value is = to the Discriminator Value
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap">
            <summary>
            Summary description for ParameterMap.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.XML_PARAMATER">
            <summary>
            Token for xml path to parameter elements.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.#ctor(IBatisNet.DataMapper.DataExchange.DataExchangeFactory)">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
            <param name="dataExchangeFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.GetProperty(System.Int32)">
            <summary>
            Get the ParameterProperty at index.
            </summary>
            <param name="index">Index</param>
            <returns>A ParameterProperty</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.GetProperty(System.String)">
            <summary>
            Get a ParameterProperty by his name.
            </summary>
            <param name="name">The name of the ParameterProperty</param>
            <returns>A ParameterProperty</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.AddParameterProperty(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty)">
            <summary>
            Add a ParameterProperty to the ParameterProperty list.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.InsertParameterProperty(System.Int32,IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty)">
            <summary>
            Insert a ParameterProperty ine the ParameterProperty list at the specified index..
            </summary>
            <param name="index">
            The zero-based index at which ParameterProperty should be inserted. 
            </param>
            <param name="property">The ParameterProperty to insert. </param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.GetParameterIndex(System.String)">
            <summary>
            Retrieve the index for array property
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.GetPropertyNameArray">
            <summary>
            Get all Parameter Property Name 
            </summary>
            <returns>A string array</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.SetParameter(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Data.IDataParameter,System.Object)">
            <summary>
            Set parameter value, replace the null value if any.
            </summary>
            <param name="mapping"></param>
            <param name="dataParameter"></param>
            <param name="parameterValue"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.SetOutputParameter(System.Object@,IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Set output parameter value.
            </summary>
            <param name="mapping"></param>
            <param name="dataBaseValue"></param>
            <param name="target"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.Initialize(System.Boolean,IBatisNet.DataMapper.Scope.IScope)">
            <summary>
            Initialize the parameter properties child.
            </summary>
            <param name="scope"></param>
            <param name="usePositionalParameters"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.BuildProperties(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Build the properties
            </summary>
            <param name="scope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.GetProperties(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
             Get the parameter properties child for the xmlNode parameter.
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.ClassName">
            <summary>
            The parameter class name.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.Class">
            <summary>
            The parameter type class.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.Id">
            <summary>
            Identifier used to identify the ParameterMap amongst the others.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.Properties">
            <summary>
            The collection of ParameterProperty
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.PropertiesList">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.ExtendMap">
            <summary>
            Extend Parametermap attribute
            </summary>
            <remarks>The id of a ParameterMap</remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.DataExchange">
            <summary>
            Sets the IDataExchange
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Commands.InMemoryDataReader">
            <summary>
            An implementation of <see cref="T:System.Data.IDataReader"/> that will copy the contents
            of the an open <see cref="T:System.Data.IDataReader"/> to an in-memory <see cref="T:IBatisNet.DataMapper.Commands.InMemoryDataReader"/> if the 
            session <see cref="T:IBatisNet.Common.IDbProvider"/> doesn't allow multiple open <see cref="T:System.Data.IDataReader"/> with
            the same <see cref="T:System.Data.IDbConnection"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.#ctor(System.Data.IDataReader)">
            <summary>
             Creates an InMemoryDataReader from a <see cref="T:System.Data.IDataReader"/>
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> which holds the records from the Database.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.NextResult">
            <summary>
            Advances the data reader to the next result, when reading the results of batch SQL statements.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.Close">
            <summary>
            Closes the IDataReader 0bject.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.Read">
            <summary>
            Advances the IDataReader to the next record.
            </summary>
            <returns>true if there are more rows; otherwise, false.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetSchemaTable">
            <summary>
            Returns a DataTable that describes the column metadata of the IDataReader.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetInt32(System.Int32)">
            <summary>
            Gets the 32-bit signed integer value of the specified field.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetValue(System.Int32)">
            <summary>
            Return the value of the specified field.
            </summary>
            <param name="fieldIndex">The index of the field to find. </param>
            <returns>The object which will contain the field value upon return.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.IsDBNull(System.Int32)">
            <summary>
            Return whether the specified field is set to null.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer as an array, 
            starting at the given buffer offset.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <param name="dataIndex">The index within the field from which to begin the read operation. </param>
            <param name="buffer">The buffer into which to read the stream of bytes. </param>
            <param name="bufferIndex">The index for buffer to begin the read operation.</param>
            <param name="length">The number of bytes to read. </param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetByte(System.Int32)">
            <summary>
            Gets the 8-bit unsigned integer value of the specified column.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetFieldType(System.Int32)">
            <summary>
            Gets the Type information corresponding to the type of Object that would be returned from GetValue.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetDecimal(System.Int32)">
            <summary>
            Gets the fixed-position numeric value of the specified field.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetValues(System.Object[])">
            <summary>
            Gets all the attribute fields in the collection for the current record.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetName(System.Int32)">
            <summary>
            Gets the name for the field to find.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetInt64(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetDouble(System.Int32)">
            <summary>
            
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetGuid(System.Int32)">
            <summary>
            Returns the GUID value of the specified field.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetDateTime(System.Int32)">
            <summary>
            Returns the value of the specified column as a DateTime object.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetOrdinal(System.String)">
            <summary>
            Returns the column ordinal, given the name of the column.
            </summary>
            <param name="colName">The name of the column. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetDataTypeName(System.Int32)">
            <summary>
            Gets the database type information for the specified field.
            </summary>
            <param name="fieldIndex">The index of the field to find.</param>
            <returns>The database type information for the specified field.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetFloat(System.Int32)">
            <summary>
            Returns the value of the specified column as a single-precision floating point number.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetData(System.Int32)">
            <summary>
            Gets an IDataReader to be used when the field points to more remote structured data.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column offset into the buffer as an array, 
            starting at the given buffer offset.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <param name="dataIndex">The index within the row from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferIndex">The index for buffer to begin the read operation. </param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of characters read.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetString(System.Int32)">
            <summary>
            Gets the string value of the specified field.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetChar(System.Int32)">
            <summary>
            Gets the character value of the specified column.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.GetInt16(System.Int32)">
            <summary>
            Gets the 16-bit signed integer value of the specified field.
            </summary>
            <param name="fieldIndex">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.InMemoryDataReader.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.InMemoryDataReader.IsClosed">
            <summary>
            Gets a value indicating whether the data reader is closed.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.InMemoryDataReader.Depth">
            <summary>
            Gets a value indicating the depth of nesting for the current row.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.InMemoryDataReader.Item(System.String)">
            <summary>
            Gets the column with the specified name.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.InMemoryDataReader.Item(System.Int32)">
            <summary>
            Gets the column located at the specified index.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.InMemoryDataReader.FieldCount">
            <summary>
            Indicates the number of fields within the current record. This property is read-only.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.InMemoryDataReader.CurrentResultSet">
            <summary>
            Gets the current result set.
            </summary>
            <value>The current result set.</value>
        </member>
        <member name="T:IBatisNet.DataMapper.Commands.InMemoryDataReader.InMemoryResultSet">
            <summary>
            Represent an in-memory result set
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.InMemoryResultSet.#ctor(System.Data.IDataReader,System.Boolean)">
            <summary>
             Creates an in-memory ResultSet from a <see cref="T:System.Data.IDataReader"/>
            </summary>
            <param name="isMidstream">
            <c>true</c> if the <see cref="T:System.Data.IDataReader"/> is already positioned on the record
            to start reading from.
            </param>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> which holds the records from the Database.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.InMemoryResultSet.GetValue(System.Int32,System.Int32)">
            <summary>
            Get a column value in a row
            </summary>
            <param name="rowIndex">The row index</param>
            <param name="colIndex">The column index</param>
            <returns>The column value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.InMemoryResultSet.GetFieldType(System.Int32)">
            <summary>
            Gets the type of the field.
            </summary>
            <param name="colIndex">Index of the col.</param>
            <returns>The type of the field.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.InMemoryResultSet.GetName(System.Int32)">
            <summary>
            Gets the name of the field.
            </summary>
            <param name="colIndex">Index of the col.</param>
            <returns>The name of the field.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.InMemoryResultSet.GetOrdinal(System.String)">
            <summary>
            Gets the ordinal.
            </summary>
            <param name="colName">Name of the column.</param>
            <returns>The ordinal of the column</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.InMemoryResultSet.GetDataTypeName(System.Int32)">
            <summary>
            Gets the name of the database type.
            </summary>
            <param name="colIndex">Index of the col.</param>
            <returns>The name of the database type</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.InMemoryDataReader.InMemoryResultSet.GetValues(System.Int32,System.Object[])">
            <summary>
            Gets the values.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.InMemoryDataReader.InMemoryResultSet.FieldCount">
            <summary>
            Gets the number of columns in the current row.
            </summary>
            <value>The number of columns in the current row.</value>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.InMemoryDataReader.InMemoryResultSet.RecordCount">
            <summary>
            The number of record contained in the ResultSet.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.UInt32TypeHandler">
            <summary>
            UInt32TypeHandler
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UInt32TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UInt32TypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UInt32TypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UInt32TypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.UInt32TypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDateTimeTypeHandler">
            <summary>
            
            </summary>
            <remarks>System.TimeSpan is map to DbType.Int64 </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDateTimeTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDateTimeTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDateTimeTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDateTimeTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDateTimeTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDateTimeTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDateTimeTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.CharTypeHandler">
            <summary>
            Description résumée de CharTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.CharTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.CharTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.CharTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.CharTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.CharTypeHandler.IsSimpleType">
            <summary>
            Tell us if ot is a 'primitive' type
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement">
            <summary>
            Summary description for InsertMappedStatement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.#ctor(IBatisNet.DataMapper.ISqlMapper,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="sqlMap">An SqlMap</param>
            <param name="statement">An SQL statement</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForMap(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="keyProperty"></param>
            <param name="valueProperty"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteUpdate(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="skipResults"></param>
            <param name="maxResults"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForRowDelegate(IBatisNet.DataMapper.ISqlMapSession,System.Object,IBatisNet.DataMapper.RowDelegate)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="rowDelegate"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForMapWithRowDelegate(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate)">
             <summary>
             Runs a query with a custom object that gets a chance 
             to deal with each row as it is processed.
             </summary>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL. </param>
             <param name="keyProperty">The property of the result object to be used as the key. </param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <param name="rowDelegate"></param>
             <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForObject(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForObject(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.SelectGenericListStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/> implementation when a 'select' attribute exists
            on an <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty"/> and the object property is 
            different from an <see cref="T:System.Array"/> or an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.SelectGenericListStrategy.GetValue(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader@,System.Object)">
            <summary>
            Gets the value of an argument constructor.
            </summary>
            <param name="request">The current <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</param>
            <param name="mapping">The <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> with the argument infos.</param>
            <param name="reader">The current <see cref="T:System.Data.IDataReader"/>.</param>
            <param name="keys">The keys</param>
            <returns>The paremeter value.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext">
            <summary>
            Summary description for SqlTagContext.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.GetWriter">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.AddAttribute(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.GetAttribute(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.AddParameterMapping(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.GetParameterMappings">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.BodyText">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.IsOverridePrepend">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.FirstNonDynamicTagWithPrepend">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.TypeHandlerDeSerializer">
            <summary>
            Summary description for TypeHandlerDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.TypeHandlerDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a TypeHandler object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.Lru.LruCacheController">
            <summary>
            Summary description for LruCacheController.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Lru.LruCacheController.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Lru.LruCacheController.Remove(System.Object)">
            <summary>
            Remove an object from a cache model
            </summary>
            <param name="key">the key to the object</param>
            <returns>the removed object(?)</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Lru.LruCacheController.Flush">
            <summary>
            Clears all elements from the cache.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Lru.LruCacheController.Configure(System.Collections.IDictionary)">
            <summary>
            Configures the cache
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.Lru.LruCacheController.Item(System.Object)">
            <summary>
            Adds an item with the specified key and value into cached data.
            Gets a cached object with the specified key.
            </summary>
            <value>The cached object or <c>null</c></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.DoubleTypeHandler">
            <summary>
            Description résumée de Double.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DoubleTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DoubleTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DoubleTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DoubleTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.DoubleTypeHandler.IsSimpleType">
            <summary>
            Tell us if ot is a 'primitive' type
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.SessionStore.WebSessionStore">
            <summary>
            Provides an implementation of <see cref="T:IBatisNet.DataMapper.SessionStore.ISessionStore"/>
            which relies on <c>HttpContext</c>. Suitable for web projects.
            This implementation will get the current session from the current 
            request.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.WebSessionStore.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.SessionStore.WebSessionStore"/> class.
            </summary>
            <param name="sqlMapperId">The SQL mapper id.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.WebSessionStore.Store(IBatisNet.DataMapper.ISqlMapSession)">
            <summary>
            Store the specified session.
            </summary>
            <param name="session">The session to store</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.WebSessionStore.Dispose">
            <summary>
            Remove the local session.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SessionStore.WebSessionStore.LocalSession">
            <summary>
            Get the local session
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.SessionStore.SessionStoreFactory">
            <summary>
            Build a session container for a Windows or Web context.
            When running in the context of a web application the session object is 
            stored in HttpContext items and has 'per request' lifetime.
            When running in the context of a windows application the session object is 
            stored via CallContext.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.SessionStoreFactory.GetSessionStore(System.String)">
            <summary>
            Gets the session store.
            </summary>
            <param name="sqlMapperId">The SQL mapper id.</param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement">
            <summary>
            Summary description for UpdateMappedStatement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.#ctor(IBatisNet.DataMapper.ISqlMapper,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="sqlMap">An SqlMap</param>
            <param name="statement">An SQL statement</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForMap(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="keyProperty"></param>
            <param name="valueProperty"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteInsert(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="skipResults"></param>
            <param name="maxResults"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForRowDelegate(IBatisNet.DataMapper.ISqlMapSession,System.Object,IBatisNet.DataMapper.RowDelegate)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="rowDelegate"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForMapWithRowDelegate(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate)">
             <summary>
             Runs a query with a custom object that gets a chance 
             to deal with each row as it is processed.
             </summary>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL. </param>
             <param name="keyProperty">The property of the result object to be used as the key. </param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <param name="rowDelegate"></param>
             <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForObject(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForObject(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ResultStrategyFactory">
            <summary>
            Factory to get <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy"/> implementation.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ResultStrategyFactory.#cctor">
            <summary>
            Initializes the <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ResultStrategyFactory"/> class.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ResultStrategyFactory.Get(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Finds the <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy"/>.
            </summary>
            <param name="statement">The statement.</param>
            <returns>The <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy"/></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.ResultMapStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/> implementation when a 'resultMapping' attribute exists
            on a <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.ResultMapStrategy.Set(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader,System.Object)">
            <summary>
            Sets value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> on the target object
            when a 'resultMapping' attribute exists
            on the <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/>.
            </summary>
            <param name="request">The request.</param>
            <param name="resultMap">The result map.</param>
            <param name="mapping">The ResultProperty.</param>
            <param name="target">The target.</param>
            <param name="reader">The reader.</param>
            <param name="keys">The keys</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.ResultMapStrategy.Get(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader)">
            <summary>
            Gets the value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> that must be set on the target object.
            </summary>
            <param name="request">The request.</param>
            <param name="resultMap">The result map.</param>
            <param name="mapping">The mapping.</param>
            <param name="reader">The reader.</param>
            <param name="target">The target object</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.CachingStatement">
            <summary>
            Summary description for CachingStatement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.#ctor(IBatisNet.DataMapper.MappedStatements.MappedStatement)">
            <summary>
            Constructor
            </summary>
            <param name="statement"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForMap(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL. </param>
             <param name="keyProperty">The property of the result object to be used as the key. </param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForDictionary``2(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL. </param>
             <param name="keyProperty">The property of the result object to be used as the key. </param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForDictionary``2(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate{``0,``1})">
            <summary>
            Runs a query with a custom object that gets a chance 
            to deal with each row as it is processed.
            </summary>
            <param name="session">The session used to execute the statement</param>
            <param name="parameterObject">The object used to set the parameters in the SQL. </param>
            <param name="keyProperty">The property of the result object to be used as the key. </param>
            <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
            <param name="rowDelegate"></param>
            <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteUpdate(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Execute an update statement. Also used for delete statement.
            Return the number of row effected.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>The number of row effected.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteInsert(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Execute an insert statement. Fill the parameter object with 
            the ouput parameters if any, also could return the insert generated key
            </summary>
            <param name="session">The session</param>
            <param name="parameterObject">The parameter object used to fill the statement.</param>
            <returns>Can return the insert generated key.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Collections.IList)">
            <summary>
            Executes the SQL and and fill a strongly typed collection.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">A strongly typed collection of result objects.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns a subset of the rows selected.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForList(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Executes the SQL and retuns all rows selected. This is exactly the same as
            calling ExecuteQueryForList(session, parameterObject, NO_SKIPPED_RESULTS, NO_MAXIMUM_RESULTS).
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForList``1(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Collections.Generic.IList{``0})">
            <summary>
            Executes the SQL and and fill a strongly typed collection.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">A strongly typed collection of result objects.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForList``1(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns a subset of the rows selected.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForList``1(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Executes the SQL and retuns all rows selected. This is exactly the same as
            calling ExecuteQueryForList(session, parameterObject, NO_SKIPPED_RESULTS, NO_MAXIMUM_RESULTS).
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForObject(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForObject(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object of the type of
            the resultObject passed in as a parameter.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">The result object.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForObject``1(IBatisNet.DataMapper.ISqlMapSession,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForObject``1(IBatisNet.DataMapper.ISqlMapSession,System.Object,``0)">
            <summary>
            Executes an SQL statement that returns a single row as an Object of the type of
            the resultObject passed in as a parameter.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">The result object.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForRowDelegate(IBatisNet.DataMapper.ISqlMapSession,System.Object,IBatisNet.DataMapper.RowDelegate)">
            <summary>
            Runs a query with a custom object that gets a chance 
            to deal with each row as it is processed.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="rowDelegate"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForRowDelegate``1(IBatisNet.DataMapper.ISqlMapSession,System.Object,IBatisNet.DataMapper.RowDelegate{``0})">
            <summary>
            Runs a query with a custom object that gets a chance 
            to deal with each row as it is processed.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="rowDelegate"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.ExecuteQueryForMapWithRowDelegate(IBatisNet.DataMapper.ISqlMapSession,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate)">
            <summary>
            Runs a query with a custom object that gets a chance 
            to deal with each row as it is processed.
            </summary>
            <param name="session">The session used to execute the statement</param>
            <param name="parameterObject">The object used to set the parameters in the SQL. </param>
            <param name="keyProperty">The property of the result object to be used as the key. </param>
            <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
            <param name="rowDelegate"></param>
            <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.GetDataCacheHitRatio">
            <summary>
            Gets a percentage of successful cache hits achieved
            </summary>
            <returns>The percentage of hits (0-1), or -1 if cache is disabled.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.CachingStatement.GetCacheKey(IBatisNet.DataMapper.Scope.RequestScope)">
            <summary>
            Gets the cache key.
            </summary>
            <param name="request">The request.</param>
            <returns>the cache key</returns>
        </member>
        <member name="E:IBatisNet.DataMapper.MappedStatements.CachingStatement.Execute">
            <summary>
            Event launch on exceute query
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.CachingStatement.PreparedCommand">
            <summary>
            The IPreparedCommand to use
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.CachingStatement.Id">
            <summary>
            Name used to identify the MappedStatement amongst the others.
            This the name of the SQL statment by default.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.CachingStatement.Statement">
            <summary>
            The SQL statment used by this MappedStatement
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.CachingStatement.SqlMap">
            <summary>
            The SqlMap used by this MappedStatement
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.DataExchange.DictionaryDataExchange">
            <summary>
            DataExchange implementation for IDictionary objects
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.DictionaryDataExchange.#ctor(IBatisNet.DataMapper.DataExchange.DataExchangeFactory)">
            <summary>
            Cosntructor
            </summary>
            <param name="dataExchangeFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.DictionaryDataExchange.GetData(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Gets the data to be set into a IDataParameter.
            </summary>
            <param name="mapping"></param>
            <param name="parameterObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.DictionaryDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object)">
            <summary>
            Sets the value to the result property.
            </summary>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.DictionaryDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Sets the value to the parameter property.
            </summary>
            <remarks>Use to set value on output parameter</remarks>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotNullTagHandler">
            <summary>
            Summary description for IsNotNullTagHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNullTagHandler">
            <summary>
            Summary description for IsNullTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNullTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNullTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNullTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotNullTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotNullTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotNullTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotParameterPresent">
            <summary>
            Represent an isNotParameterPresent sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotParameterPresent.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotParameterPresent"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsGreaterThanDeSerializer">
            <summary>
            Summary description for IsGreaterThanDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsGreaterThanDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsGreaterThanDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a Dynamic object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection">
            <summary>
            Collection of <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap"/>
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.#ctor">
            <summary>
            Constructs a ResultMapCollection. The list is initially empty and has a capacity
            of zero. Upon adding the first element to the list the capacity is
            increased to 8, and then increased in multiples of two as required.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.#ctor(System.Int32)">
            <summary>
             Constructs a ResultMapCollection with a given initial capacity. 
             The list is initially empty, but will have room for the given number of elements
             before any reallocations are required.
            </summary>
            <param name="capacity">The initial capacity of the list</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.Add(IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap)">
            <summary>
            Add an ResultMap
            </summary>
            <param name="value"></param>
            <returns>Index</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.AddRange(IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap[])">
            <summary>
            Add a list of ResultMap to the collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.AddRange(IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection)">
            <summary>
            Add a list of ResultMap to the collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.Contains(IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap)">
            <summary>
            Indicate if a ResultMap is in the collection
            </summary>
            <param name="value">A ResultMap</param>
            <returns>True fi is in</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.Insert(System.Int32,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap)">
            <summary>
            Insert a ResultMap in the collection.
            </summary>
            <param name="index">Index where to insert.</param>
            <param name="value">A ResultMap</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.Remove(IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap)">
            <summary>
            Remove a ResultMap of the collection.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a ResultMap at the given index. The size of the list is
            decreased by one.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.Resize(System.Int32)">
            <summary>
            Ensures that the capacity of this collection is at least the given minimum
            value. If the currect capacity of the list is less than min, the
            capacity is increased to twice the current capacity.
            </summary>
            <param name="minSize"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.Count">
            <summary>
            Read-only property describing how many elements are in the Collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.Length">
            <summary>
            Length of the collection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMapCollection.Item(System.Int32)">
            <summary>
            Sets or Gets the ResultMap at the given index.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap">
            <summary>
            Implementation of <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap"/> interface for auto mapping
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.#ctor(System.Type,IBatisNet.Common.Utilities.Objects.IFactory,IBatisNet.DataMapper.DataExchange.IDataExchange)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap"/> class.
            </summary>
            <param name="resultClass">The result class.</param>
            <param name="resultClassFactory">The result class factory.</param>
            <param name="dataExchange">The data exchange.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.CreateInstanceOfResult(System.Object[])">
            <summary>
            Create an instance Of result.
            </summary>
            <param name="parameters">An array of values that matches the number, order and type
            of the parameters for this constructor.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.SetValueOfProperty(System.Object@,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object)">
            <summary>
            Set the value of an object property.
            </summary>
            <param name="target">The object to set the property.</param>
            <param name="property">The result property to use.</param>
            <param name="dataBaseValue">The database value to set.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.ResolveSubMap(System.Data.IDataReader)">
            <summary>
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.CreateInstanceOfResultClass">
            <summary>
            Create an instance of result class.
            </summary>
            <returns>An object.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.GroupByPropertyNames">
            <summary>
            The GroupBy Properties.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.Properties">
            <summary>
            The collection of ResultProperty.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.GroupByProperties">
            <summary>
            The GroupBy Properties.
            </summary>
            <value></value>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.Parameters">
            <summary>
            The collection of constructor parameters.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.IsInitalized">
            <summary>
            Gets or sets a value indicating whether this instance is initalized.
            </summary>
            <value>
            	<c>true</c> if this instance is initalized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.Id">
            <summary>
            Identifier used to identify the resultMap amongst the others.
            </summary>
            <value></value>
            <example>GetProduct</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.Class">
            <summary>
            The output type class of the resultMap.
            </summary>
            <value></value>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.AutoResultMap.DataExchange">
            <summary>
            Sets the IDataExchange
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Alias.TypeAlias">
            <summary>
            TypeAlias.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Alias.TypeAlias.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Alias.TypeAlias.#ctor(System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="type">a type.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Alias.TypeAlias.Initialize">
            <summary>
            Initialize the object, 
            try to idenfify the .Net type class from the corresponding name.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeAlias.Name">
            <summary>
            Name used to identify the typeAlias amongst the others.
            </summary>
            <example> Account</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeAlias.Class">
            <summary>
            The type class for the typeAlias
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeAlias.ClassName">
            <summary>
            The class name to identify the typeAlias.
            </summary>
            <example>Com.Site.Domain.Product</example>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.TimeSpanTypeHandler">
            <summary>
            Description résumée de TimespanTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TimeSpanTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
             Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TimeSpanTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TimeSpanTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TimeSpanTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TimeSpanTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.TimeSpanTypeHandler.IsSimpleType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ObjectTypeHandler">
            <summary>
            Description résumée de ObjectTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ObjectTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ObjectTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ObjectTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ObjectTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ObjectTypeHandler.IsSimpleType">
            <summary>
            Tell us if ot is a 'primitive' type
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt32TypeHandler">
            <summary>
            Summary description for Int32TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt32TypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt32TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt32TypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt32TypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt32TypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt32TypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableUInt32TypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSByteTypeHandler">
            <summary>
            TypeHandler for SByte TimeSpan Type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSByteTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSByteTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSByteTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSByteTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSByteTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSByteTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSByteTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt32TypeHandler">
            <summary>
            TypeHandler for Nullable Int32 Type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt32TypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt32TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt32TypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt32TypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt32TypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt32TypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableInt32TypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ResultMapStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy"/> implementation when 
            a 'resultMap' attribute is specified.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ResultMapStrategy.Process(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader@,System.Object)">
            <summary>
            Processes the specified <see cref="T:System.Data.IDataReader"/> 
            when a ResultMap is specified on the statement.
            </summary>
            <param name="request">The request.</param>
            <param name="reader">The reader.</param>
            <param name="resultObject">The result object.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectObjectStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/> implementation when a 'select' attribute exists
            on an <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> and the object property is 
            different from an <see cref="T:System.Array"/> or an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectObjectStrategy.Set(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader,System.Object)">
            <summary>
             Sets value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> on the target object
             when a 'select' attribute exists and fills an object property.
             on the <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> are empties.
             </summary>
             <param name="request">The request.</param>
             <param name="resultMap">The result map.</param>
             <param name="mapping">The ResultProperty.</param>
             <param name="target">The target.</param>
             <param name="reader">The current <see cref="T:System.Data.IDataReader"/></param>
             <param name="keys">The keys</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectObjectStrategy.Get(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader)">
            <summary>
            Gets the value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> that must be set on the target object.
            </summary>
            <param name="request">The request.</param>
            <param name="resultMap">The result map.</param>
            <param name="mapping">The mapping.</param>
            <param name="reader">The reader.</param>
            <param name="target">The target object</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.ListStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.IPostSelectStrategy"/> implementation to exceute a query for list.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.ListStrategy.Execute(IBatisNet.DataMapper.MappedStatements.PostBindind,IBatisNet.DataMapper.Scope.RequestScope)">
            <summary>
            Executes the specified <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.
            </summary>
            <param name="postSelect">The <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.</param>
            <param name="request">The <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler">
            <summary>
            Summary description for IterateTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler.DoStartFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler.DoPrepend(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler.DoEndFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler.Replace(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="find"></param>
            <param name="replace"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler.IsPostParseRequired">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsLessThanTagHandler">
            <summary>
            Summary description for IsLessThanTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsLessThanTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsLessThanTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsLessThanTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.DynamicTagHandler">
            <summary>
            Summary description for DynamicTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.DynamicTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.DynamicTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.DynamicTagHandler.DoStartFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsPropertyAvailable">
            <summary>
            Represent an isPropertyAvailable sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsPropertyAvailable.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsPropertyAvailable"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotEqual">
            <summary>
            Represent an isNotEqual sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotEqual.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotEqual"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Dynamic">
            <summary>
            Summary description for DynamicTag.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Dynamic.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamic"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.StatementDeSerializer">
            <summary>
            Summary description for StatementDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.StatementDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a Procedure object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.SqlDeSerializer">
            <summary>
            Summary description for ArgumentPropertyDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.SqlDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a sql tag
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.ParameterPropertyDeSerializer">
            <summary>
            Summary description for ParameterPropertyDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.ParameterPropertyDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a ResultMap object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.CacheKey">
            <summary>
             Hash value generator for cache keys
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheKey.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheKey.#ctor(System.Int32)">
            <summary>
            Constructor that supplies an initial hashcode
            </summary>
            <param name="initialNonZeroOddNumber">the hashcode to use</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor that supplies an initial hashcode and multiplier
            </summary>
            <param name="initialNonZeroOddNumber">the hashcode to use</param>
            <param name="multiplierNonZeroOddNumber">the multiplier to use</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheKey.Update(System.Object)">
            <summary>
            Updates this object with new information based on an object
            </summary>
            <param name="obj">the object</param>
            <returns>the cachekey</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheKey.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheKey.GetHashCode">
            <summary>
            Get the HashCode for this CacheKey
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheKey.ToString">
            <summary>
            ToString implementation.
            </summary>
            <returns>A string that give the CacheKey HashCode.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDoubleTypeHandler">
            <summary>
            TypeHandler for Nullable double Type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDoubleTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDoubleTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDoubleTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDoubleTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDoubleTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDoubleTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableDoubleTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.DecimalTypeHandler">
            <summary>
            DecimalTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DecimalTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DecimalTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DecimalTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
            <remarks>
            value decimal must be  in format ######.##
            where . is separator for decimal
            </remarks> 
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DecimalTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.DecimalTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.MapStrategy">
            <summary>
            Delegates on the <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ResultMapStrategy"/>  or on the 
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.GroupByStrategy"/> implementation if a grouBy attribute is specify on the resultMap tag.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.MapStrategy.#cctor">
            <summary>
            Initializes the <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.MapStrategy"/> class.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.MapStrategy.Process(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader@,System.Object)">
            <summary>
            Processes the specified <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="request">The request.</param>
            <param name="reader">The reader.</param>
            <param name="resultObject">The result object.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.DefaultStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/> implementation when no 'select' or
            'resultMapping' attribute exists on a <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.DefaultStrategy.Set(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader,System.Object)">
            <summary>
             Sets value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> on the target object
             when the 'select' and 'resultMap' attributes 
             on the <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> are empties.
             </summary>
             <param name="request">The request.</param>
             <param name="resultMap">The result map.</param>
             <param name="mapping">The ResultProperty.</param>
             <param name="target">The target.</param>
             <param name="reader">The reader.</param>
             <param name="keys">The keys</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.DefaultStrategy.Get(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader)">
            <summary>
            Gets the value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> that must be set on the target object.
            </summary>
            <param name="request">The request.</param>
            <param name="resultMap">The result map.</param>
            <param name="mapping">The mapping.</param>
            <param name="reader">The reader.</param>
            <param name="target">The target object</param>
        </member>
        <member name="T:IBatisNet.DataMapper.DataExchange.PrimitiveDataExchange">
            <summary>
            DataExchange implementation for "primitive" objects.
            </summary>
            <remarks>
            The primitive types are Boolean, Byte, SByte, Int16, UInt16, Int32,
            UInt32, Int64, UInt64, Char, Double, and Single + string, Guid, Decimal, DateTime
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.PrimitiveDataExchange.#ctor(IBatisNet.DataMapper.DataExchange.DataExchangeFactory)">
            <summary>
            Cosntructor
            </summary>
            <param name="dataExchangeFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.PrimitiveDataExchange.GetData(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Gets the data to be set into a IDataParameter.
            </summary>
            <param name="mapping"></param>
            <param name="parameterObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.PrimitiveDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object)">
            <summary>
            Sets the value to the result property.
            </summary>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.PrimitiveDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Sets the value to the parameter property.
            </summary>
            <remarks>Use to set value on output parameter</remarks>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.DataExchange.ComplexDataExchange">
            <summary>
            A IDataExchange implemtation for working with .NET object
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.ComplexDataExchange.#ctor(IBatisNet.DataMapper.DataExchange.DataExchangeFactory)">
            <summary>
            Cosntructor
            </summary>
            <param name="dataExchangeFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.ComplexDataExchange.GetData(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Gets the data to be set into a IDataParameter.
            </summary>
            <param name="mapping"></param>
            <param name="parameterObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.ComplexDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object)">
            <summary>
            Sets the value to the result property.
            </summary>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.ComplexDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Sets the value to the parameter property.
            </summary>
            <remarks>Use to set value on output parameter</remarks>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsLessEqualTagHandler">
            <summary>
            Summary description for IsLessEqualTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsLessEqualTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsLessEqualTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsLessEqualTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsGreaterThanTagHandler">
            <summary>
            Summary description for IsGreaterThanTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsGreaterThanTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsGreaterThanTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsGreaterThanTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsGreaterEqualTagHandler">
            <summary>
            Summary description for IsGreaterEqualTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsGreaterEqualTagHandler.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsGreaterEqualTagHandler"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsGreaterEqualTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsGreaterThan">
            <summary>
            Represent an isGreaterThan sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsGreaterThan.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsGreaterThan"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsPropertyAvailableDeSerializer">
            <summary>
            Summary description for IsPropertyAvailableDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsPropertyAvailableDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsPropertyAvailableDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a IsNotEmpty object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsNotPropertyAvailableDeSerializer">
            <summary>
            Summary description for IsNotPropertyAvailableDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsNotPropertyAvailableDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsNotPropertyAvailableDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a IsNotEmpty object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel">
            <summary>
            Summary description for MemoryCacheLevel.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel.Weak">
            <summary>
            Constant for weak caching
            This cache model is probably the best choice in most cases. It will increase
            performance for popular results, but it will absolutely release the memory to
            be used in allocating other objects, assuming that the results are not currently
            in use.
            References an object while still allowing it to be garbage collected.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel.Strong">
            <summary>
            Constant for strong caching.
            This cache model will guarantee that the results stay in memory until the cache 
            is explicitly flushed. This is ideal for results that are:
            <list>
            <item>very small</item>
            <item>absolutely static</item>
            <item>used very often</item>
            </list>
            The advantage is that performance will be very good for this particular query.
            The disadvantage is that if the memory used by these results is needed, then it
            will not be released to make room for other objects (possibly more important
            objects).
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel.#ctor(System.String)">
            <summary>
            Creates a new instance of CacheLevel
            </summary>
            <param name="type">The type of the CacheLevel.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel.GetByRefenceType(System.String)">
            <summary>
            
            </summary>
            <param name="referenceType"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel.ReferenceType">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Proxy.LazyLoadProxyFactory">
            <summary>
            This class is responsible of create lazy load proxies for a concrete class with virtual method.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyLoadProxyFactory.CreateProxy(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,System.Object,IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>
            Builds the specified lazy load proxy for a concrete class with virtual method.
            </summary>
            <param name="selectStatement">The mapped statement used to build the lazy loaded object.</param>
            <param name="param">The parameter object used to build lazy loaded object.</param>
            <param name="target">The target object which contains the property proxydied..</param>
            <param name="setAccessor">The proxified member accessor.</param>
            <returns>Return a proxy object</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/> implementation when a 'select' attribute exists
            on a <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/>
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectStrategy.#ctor(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy,IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy,IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy,IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectStrategy"/> class.
            </summary>
            <param name="mapping">The mapping.</param>
            <param name="selectArrayStrategy">The select array strategy.</param>
            <param name="selectGenericListStrategy">The select generic list strategy.</param>
            <param name="selectListStrategy">The select list strategy.</param>
            <param name="selectObjectStrategy">The select object strategy.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectStrategy.Set(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader,System.Object)">
            <summary>
             Sets value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> on the target object
             when a 'select' attribute exists
             on the <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> are empties.
             </summary>
             <param name="request">The request.</param>
             <param name="resultMap">The result map.</param>
             <param name="mapping">The ResultProperty.</param>
             <param name="target">The target.</param>
             <param name="reader">The reader.</param>
             <param name="selectKeys">The keys</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectStrategy.Get(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader)">
            <summary>
            Gets the value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> that must be set on the target object.
            </summary>
            <param name="request">The request.</param>
            <param name="resultMap">The result map.</param>
            <param name="mapping">The mapping.</param>
            <param name="reader">The reader.</param>
            <param name="target">The target object</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectListStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/> implementation when a 'select' attribute exists
            on a <see cref="T:System.Collections.IList"/> <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/>
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectListStrategy.Set(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader,System.Object)">
            <summary>
             Sets value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> on the target object
             when a 'select' attribute exists and fills an <see cref="T:System.Collections.IList"/> property
             on the <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> are empties.
             </summary>
             <param name="request">The request.</param>
             <param name="resultMap">The result map.</param>
             <param name="mapping">The ResultProperty.</param>
             <param name="target">The target.</param>
             <param name="reader">The current <see cref="T:System.Data.IDataReader"/></param>
             <param name="keys">The keys</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectListStrategy.Get(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader)">
            <summary>
            Gets the value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> that must be set on the target object.
            </summary>
            <param name="request">The request.</param>
            <param name="resultMap">The result map.</param>
            <param name="mapping">The mapping.</param>
            <param name="reader">The reader.</param>
            <param name="target">The target object</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PropertStrategy.GroupByStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/> implementation when a 'resultMapping' attribute exists
            on a <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> ant the resulMap have a groupBy attribute.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertStrategy.GroupByStrategy.#cctor">
            <summary>
            Initializes the <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.PropertyStrategyFactory"/> class.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertStrategy.GroupByStrategy.Set(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader,System.Object)">
            <summary>
            Sets value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> on the target object
            when a 'resultMapping' attribute exists
            on the <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/>.
            </summary>
            <param name="request">The request.</param>
            <param name="resultMap">The result map.</param>
            <param name="mapping">The ResultProperty.</param>
            <param name="target">The target.</param>
            <param name="reader">The reader.</param>
            <param name="keys">The keys</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertStrategy.GroupByStrategy.Get(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader)">
            <summary>
            Gets the value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> that must be set on the target object.
            </summary>
            <param name="request">The request.</param>
            <param name="resultMap">The result map.</param>
            <param name="mapping">The mapping.</param>
            <param name="reader">The reader.</param>
            <param name="target">The target object</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.ArrayStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.IPostSelectStrategy"/> implementation to exceute a query for <see cref="T:System.Array"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.ArrayStrategy.Execute(IBatisNet.DataMapper.MappedStatements.PostBindind,IBatisNet.DataMapper.Scope.RequestScope)">
            <summary>
            Executes the specified <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.
            </summary>
            <param name="postSelect">The <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.</param>
            <param name="request">The <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/></param>
        </member>
        <member name="T:IBatisNet.DataMapper.ISqlMapper">
            <summary>
            Contract for an <see cref="T:IBatisNet.DataMapper.ISqlMapper"/>
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.CreateSqlMapSession">
            <summary>
            Creates a new SqlMapSession that will be used to query the data source.
            </summary>
            <returns>A new session</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.GetParameterMap(System.String)">
            <summary>
            Get a ParameterMap by name
            </summary>
            <param name="name">The name of the ParameterMap</param>
            <returns>The ParameterMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.AddParameterMap(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap)">
            <summary>
            Adds a (named) ParameterMap.
            </summary>
            <param name="parameterMap">the ParameterMap to add</param>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.GetResultMap(System.String)">
            <summary>
            Gets a ResultMap by name
            </summary>
            <param name="name">The name of the result map</param>
            <returns>The ResultMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.AddResultMap(IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap)">
            <summary>
            Adds a (named) ResultMap
            </summary>
            <param name="resultMap">The ResultMap to add</param>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.GetCache(System.String)">
            <summary>
            Gets a cache by name
            </summary>
            <param name="name">The name of the cache to get</param>
            <returns>The cache object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.AddCache(IBatisNet.DataMapper.Configuration.Cache.CacheModel)">
            <summary>
            Adds a (named) cache.
            </summary>
            <param name="cache">The cache to add</param>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.AddMappedStatement(System.String,IBatisNet.DataMapper.MappedStatements.IMappedStatement)">
            <summary>
            Adds a (named) MappedStatement.
            </summary>
            <param name="key"> The key name</param>
            <param name="mappedStatement">The statement to add</param>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.BeginTransaction(System.Boolean)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="openConnection">if set to <c>true</c> [open connection].</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.BeginTransaction(System.String)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.BeginTransaction(System.Boolean,System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="openNewConnection">if set to <c>true</c> [open new connection].</param>
            <param name="isolationLevel">The isolation level.</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.BeginTransaction(System.String,System.Boolean,System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="openNewConnection">if set to <c>true</c> [open new connection].</param>
            <param name="isolationLevel">The isolation level.</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="isolationLevel">The isolation level.</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.BeginTransaction(System.String,System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="isolationLevel">The isolation level.</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.CloseConnection">
            <summary>
            Closes the connection.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.CommitTransaction(System.Boolean)">
            <summary>
            Commits the transaction.
            </summary>
            <param name="closeConnection">if set to <c>true</c> [close connection].</param>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.CommitTransaction">
            <summary>
            Commits the transaction.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.Delete(System.String,System.Object)">
            <summary>
             Executes a Sql DELETE statement.
             Delete returns the number of rows effected.
            </summary>
            <param name="statementName">The name of the statement to execute.</param>
            <param name="parameterObject">The parameter object.</param>
            <returns>The number of rows effected.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.FlushCaches">
            <summary>
            Flushes all cached objects that belong to this SqlMap
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.GetDataCacheStats">
            <summary>
            Gets the data cache stats.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.GetMappedStatement(System.String)">
            <summary>
            Gets a MappedStatement by name
            </summary>
            <param name="id"> The id of the statement</param>
            <returns> The MappedStatement</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.Insert(System.String,System.Object)">
            <summary>
            Executes a Sql INSERT statement.
            Insert is a bit different from other update methods, as it
            provides facilities for returning the primary key of the
            newly inserted row (rather than the effected rows).  This
            functionality is of course optional.
            <p/>
            The parameter object is generally used to supply the input
            data for the INSERT values.
            </summary>
            <param name="statementName">The name of the statement to execute.</param>
            <param name="parameterObject">The parameter object.</param>
            <returns> The primary key of the newly inserted row.  
            This might be automatically generated by the RDBMS, 
            or selected from a sequence table or other source.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.OpenConnection">
            <summary>
            Opens the connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.OpenConnection(System.String)">
            <summary>
            Opens the connection.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForDictionary(System.String,System.Object,System.String,System.String)">
             <summary>
             Alias to QueryForMap, .NET spirit.
              Feature idea by Ted Husted.
             </summary>
             <param name="statementName">The name of the sql statement to execute.</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForDictionary(System.String,System.Object,System.String)">
            <summary>
             Alias to QueryForMap, .NET spirit.
             Feature idea by Ted Husted.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="keyProperty">The property of the result object to be used as the key.</param>
            <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForList(System.String,System.Object,System.Collections.IList)">
            <summary>
            Executes a Sql SELECT statement that returns data to populate
            a number of result objects.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">An Ilist object used to hold the objects.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForList(System.String,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns data to populate
            a number of result objects.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForList(System.String,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns all rows selected.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForMap(System.String,System.Object,System.String)">
            <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the entire result object.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="keyProperty">The property of the result object to be used as the key.</param>
            <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForMap(System.String,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="statementName">The name of the sql statement to execute.</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForMapWithRowDelegate(System.String,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate)">
             <summary>
             Runs a query with a custom object that gets a chance to deal 
             with each row as it is processed.
             <p/>
              The parameter object is generally used to supply the input
             data for the WHERE clause parameter(s) of the SELECT statement.
             </summary>
             <param name="statementName">The name of the sql statement to execute.</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <param name="rowDelegate"></param>
             <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForObject(System.String,System.Object,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns a single object of the type of the
            resultObject parameter.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">An object of the type to be returned.</param>
            <returns>The single result object populated with the result set data.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForObject(System.String,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns that returns data 
            to populate a single object instance.
            <p/>
            The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns> The single result object populated with the result set data.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForPaginatedList(System.String,System.Object,System.Int32)">
            <summary>
            Executes the SQL and retuns a subset of the results in a dynamic PaginatedList that can be used to
            automatically scroll through results from a database table.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL</param>
            <param name="pageSize">The maximum number of objects to store in each page</param>
            <returns>A PaginatedList of beans containing the rows</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryWithRowDelegate(System.String,System.Object,IBatisNet.DataMapper.RowDelegate)">
            <summary>
            Runs a query for list with a custom object that gets a chance to deal 
            with each row as it is processed.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="rowDelegate"></param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.RollBackTransaction">
            <summary>
            Rolls the back transaction.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.RollBackTransaction(System.Boolean)">
            <summary>
            Rolls the back transaction.
            </summary>
            <param name="closeConnection">if set to <c>true</c> [close connection].</param>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.Update(System.String,System.Object)">
            <summary>
            Executes a Sql UPDATE statement.
            Update can also be used for any other update statement type,
            such as inserts and deletes.  Update returns the number of
            rows effected.
            <p/>
            The parameter object is generally used to supply the input
            data for the UPDATE values as well as the WHERE clause parameter(s).
            </summary>
            <param name="statementName">The name of the statement to execute.</param>
            <param name="parameterObject">The parameter object.</param>
            <returns>The number of rows effected.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForDictionary``2(System.String,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="statementName">The name of the sql statement to execute.</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A IDictionary of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForDictionary``2(System.String,System.Object,System.String)">
            <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the entire result object.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="keyProperty">The property of the result object to be used as the key.</param>
            <returns>A IDictionary of object containing the rows keyed by keyProperty.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForDictionary``2(System.String,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate{``0,``1})">
             <summary>
             Runs a query with a custom object that gets a chance to deal 
             with each row as it is processed.
             <p/>
              The parameter object is generally used to supply the input
             data for the WHERE clause parameter(s) of the SELECT statement.
             </summary>
             <param name="statementName">The name of the sql statement to execute.</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <param name="rowDelegate">A delegate called once per row in the QueryForDictionary method&gt;</param>
             <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForObject``1(System.String,System.Object,``0)">
            <summary>
            Executes a Sql SELECT statement that returns a single object of the type of the
            resultObject parameter.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="instanceObject">An object of the type to be returned.</param>
            <returns>The single result object populated with the result set data.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForObject``1(System.String,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns that returns data 
            to populate a single object instance.
            <p/>
            The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns> The single result object populated with the result set data.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForList``1(System.String,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns data to populate
            a number of result objects.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForList``1(System.String,System.Object,System.Collections.Generic.IList{``0})">
            <summary>
            Executes a Sql SELECT statement that returns data to populate
            a number of result objects.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">An Ilist object used to hold the objects.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryForList``1(System.String,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns all rows selected.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.ISqlMapper.QueryWithRowDelegate``1(System.String,System.Object,IBatisNet.DataMapper.RowDelegate{``0})">
            <summary>
            Runs a query for list with a custom object that gets a chance to deal 
            with each row as it is processed.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="rowDelegate"></param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.Id">
            <summary>
            Name used to identify the the <see cref="T:IBatisNet.DataMapper.SqlMapper"/>
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.SessionStore">
            <summary>
            Allow to set a custom session store like the <see cref="T:IBatisNet.DataMapper.SessionStore.HybridWebThreadSessionStore"/>
            </summary>
            <remarks>Set it after the configuration and before use of the <see cref="T:IBatisNet.DataMapper.SqlMapper"/></remarks>
            <example>
            sqlMapper.SessionStore = new HybridWebThreadSessionStore( sqlMapper.Id );
            </example>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.IsSessionStarted">
            <summary>
            Gets a value indicating whether this instance is session started.
            </summary>
            <value>
            	<c>true</c> if this instance is session started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.LocalSession">
            <summary>
             Returns the DalSession instance 
             currently being used by the SqlMap.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.IsCacheModelsEnabled">
            <summary>
            A flag that determines whether cache models were enabled 
            when this SqlMap was built.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.DataExchangeFactory">
            <summary>
            Factory for DataExchange objects
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.TypeHandlerFactory">
            <summary>
            The TypeHandlerFactory
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.ObjectFactory">
            <summary>
            The meta factory for object factory
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.AccessorFactory">
            <summary>
            The factory which build <see cref="T:IBatisNet.Common.Utilities.Objects.Members.IAccessor"/>
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.ParameterMaps">
            <summary>
            The ParameterMap collection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.ResultMaps">
            <summary>
            The ResultMap collection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.MappedStatements">
            <summary>
            The MappedStatements collection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ISqlMapper.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="T:IBatisNet.DataMapper.DataExchange.ListDataExchange">
            <summary>
            IDataExchange implementation for IList objects
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.ListDataExchange.#ctor(IBatisNet.DataMapper.DataExchange.DataExchangeFactory)">
            <summary>
            Cosntructor
            </summary>
            <param name="dataExchangeFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.ListDataExchange.GetData(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Gets the data to be set into a IDataParameter.
            </summary>
            <param name="mapping"></param>
            <param name="parameterObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.ListDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object)">
            <summary>
            Sets the value to the result property.
            </summary>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.ListDataExchange.SetData(System.Object@,IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Object)">
            <summary>
            Sets the value to the parameter property.
            </summary>
            <remarks>Use to set value on output parameter</remarks>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="dataBaseValue"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IterateSerializer">
            <summary>
            Summary description for IterateSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IterateSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IterateSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a Iterate object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsNullDeSerializer">
            <summary>
            Summary description for IsNullDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsNullDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsNullDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a Dynamic object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsNotEqualDeSerializer">
            <summary>
            Summary description for IsNotEqualDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsNotEqualDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsNotEqualDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a Dynamic object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.DeleteDeSerializer">
            <summary>
            Summary description for DeleteDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.DeleteDeSerializer.Deserialize(System.Xml.XmlNode,IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Deserialize a TypeHandler object
            </summary>
            <param name="node"></param>
            <param name="configScope"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty">
            <summary>
            Summary description for ArgumentProperty.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope,System.Reflection.ConstructorInfo)">
            <summary>
            Initialize the argument property.
            </summary>
            <param name="constructorInfo"></param>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty.ResolveTypeHandler(IBatisNet.DataMapper.Scope.ConfigurationScope,System.Type,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
            <param name="argumenType">The argument type</param>
            <param name="clrType"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty.ArgumentStrategy">
            <summary>
            Sets or gets the <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/> used to fill the object property.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty.ArgumentName">
            <summary>
            Specify the constructor argument name.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty.IsLazyLoad">
            <summary>
            Tell us if we must lazy load this property..
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty.MemberType">
            <summary>
            Get the argument type
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Alias.TypeHandler">
            <summary>
            Summary description for TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Alias.TypeHandler.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Alias.TypeHandler.Initialize">
            <summary>
            Initialize the object, 
            try to idenfify the .Net type class from the corresponding name.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeHandler.ClassName">
            <summary>
            CLR type
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeHandler.Class">
            <summary>
            The type class for the TypeName
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeHandler.DbType">
            <summary>
            dbType name
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeHandler.CallBackName">
            <summary>
            callback alias name
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Commands.PreparedCommandFactory">
            <summary>
            Summary description for PreparedCommandFactory.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.PreparedCommandFactory.GetPreparedCommand(System.Boolean)">
            <summary>
            Get an IPreparedCommand.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.SingleTypeHandler">
            <summary>
            Description résumée de SingleTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.SingleTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.SingleTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.SingleTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.SingleTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.SingleTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ResultGetterImpl">
            <summary>
            Description résumée de ResultGetterImpl.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ResultGetterImpl.#ctor(System.Data.IDataReader,System.Int32)">
            <summary>
            Creates an instance for a IDataReader and column index
            </summary>
            <param name="dataReader">The dataReader</param>
            <param name="columnIndex">the column index</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ResultGetterImpl.#ctor(System.Data.IDataReader,System.String)">
            <summary>
            Creates an instance for a IDataReader and column name
            </summary>
            <param name="dataReader">The dataReader</param>
            <param name="columnName">the column name</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ResultGetterImpl.#ctor(System.Object)">
            <summary>
            Creates an instance for an output parameter
            </summary>
            <param name="outputValue">value of an output parameter (store procedure)</param>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ResultGetterImpl.DataReader">
            <summary>
            Returns the underlying IDataReader
            </summary>
            <remarks>Null for an output parameter</remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ResultGetterImpl.Value">
            <summary>
            Get the parameter value
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Int16TypeHandler">
            <summary>
            Description résumée de Int16TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int16TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int16TypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int16TypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int16TypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Int16TypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ByteTypeHandler">
            <summary>
            Description résumée de ByteTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ByteTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ByteTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ByteTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ByteTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ByteTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ByteTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.GroupByStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy"/> implementation when 
            a 'groupBy' attribute is specified on the resultMap tag.
            </summary>
            <remarks>N+1 Select solution</remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.GroupByStrategy.Process(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader@,System.Object)">
            <summary>
            Processes the specified <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="request">The request.</param>
            <param name="reader">The reader.</param>
            <param name="resultObject">The result object.</param>
            <returns>The result object</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.PropertyStrategyFactory">
            <summary>
            Factory to get <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/> implementation.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.PropertyStrategyFactory.#cctor">
            <summary>
            Initializes the <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.PropertyStrategyFactory"/> class.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.PropertyStrategyFactory.Get(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty)">
            <summary>
            Finds the <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/>.
            </summary>
            <param name="mapping">The <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/>.</param>
            <returns>The <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.StrongTypedListStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.IPostSelectStrategy"/> implementation to exceute a query for 
            strong typed list.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.StrongTypedListStrategy.Execute(IBatisNet.DataMapper.MappedStatements.PostBindind,IBatisNet.DataMapper.Scope.RequestScope)">
            <summary>
            Executes the specified <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.
            </summary>
            <param name="postSelect">The <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.</param>
            <param name="request">The <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/></param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.GenericListStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.IPostSelectStrategy"/> implementation to exceute a query generic list.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PostSelectStrategy.GenericListStrategy.Execute(IBatisNet.DataMapper.MappedStatements.PostBindind,IBatisNet.DataMapper.Scope.RequestScope)">
            <summary>
            Executes the specified <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.
            </summary>
            <param name="postSelect">The <see cref="T:IBatisNet.DataMapper.MappedStatements.PostBindind"/>.</param>
            <param name="request">The <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsEmpty">
            <summary>
            Represent an isEmpty sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsEmpty.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsEmpty"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.IsNotEmptyDeSerializer">
            <summary>
            Summary description for IsNotEmptyDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsNotEmptyDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.IsNotEmptyDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a IsNotEmpty object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Serializers.DynamicDeSerializer">
            <summary>
            Summary description for DynamicDeSerializer.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.DynamicDeSerializer.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Constructor
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Serializers.DynamicDeSerializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserialize a Dynamic object
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ParameterMapping.InlineParameterMapParser">
            <summary>
            Summary description for InlineParameterMapParser.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.InlineParameterMapParser.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.InlineParameterMapParser.ParseInlineParameterMap(IBatisNet.DataMapper.Scope.IScope,IBatisNet.DataMapper.Configuration.Statements.IStatement,System.String)">
            <summary>
            Parse Inline ParameterMap
            </summary>
            <param name="statement"></param>
            <param name="sqlStatement"></param>
            <returns>A new sql command text.</returns>
            <param name="scope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.InlineParameterMapParser.NewParseMapping(System.String,System.Type,IBatisNet.DataMapper.Scope.IScope)">
            <summary>
            Parse inline parameter with syntax as
            #propertyName,type=string,dbype=Varchar,direction=Input,nullValue=N/A,handler=string#
            </summary>
            <param name="token"></param>
            <param name="parameterClassType"></param>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.InlineParameterMapParser.OldParseMapping(System.String,System.Type,IBatisNet.DataMapper.Scope.IScope)">
            <summary>
            Parse inline parameter with syntax as
            #propertyName:dbType:nullValue#
            </summary>
            <param name="token"></param>
            <param name="parameterClassType"></param>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.InlineParameterMapParser.ResolveTypeHandler(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory,System.Type,System.String,System.String,System.String)">
            <summary>
            Resolve TypeHandler
            </summary>
            <param name="parameterClassType"></param>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <param name="dbType"></param>
            <param name="typeHandlerFactory"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.StringTypeHandler">
            <summary>
            Description résumée de SByteTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.StringTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.StringTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.StringTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.StringTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.StringTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableCharTypeHandler">
            <summary>
            TypeHandler for Nullable char Type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableCharTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableCharTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableCharTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableCharTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableCharTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableCharTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableCharTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ByteArrayTypeHandler">
            <summary>
            Description résumée de ByteArrayTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ByteArrayTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ByteArrayTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ByteArrayTypeHandler.GetValueByIndex(System.Int32,System.Data.IDataReader)">
            <summary>
            Gets the index of the value by.
            </summary>
            <param name="columnIndex">Index of the column.</param>
            <param name="dataReader">The data reader.</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ByteArrayTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ByteArrayTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ByteArrayTypeHandler.IsSimpleType">
            <summary>
            Tell us if ot is a 'primitive' type
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.SqlMapper">
            <summary>
            Summary description for SqlMap.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.SqlMapper._sessionStore">
            <summary>
            Container session unique for each thread. 
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.#ctor(IBatisNet.Common.Utilities.Objects.IObjectFactory,IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.SqlMapper"/> class.
            </summary>
            <param name="objectFactory">The object factory.</param>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.OpenConnection">
            <summary>
            Open a connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.OpenConnection(System.String)">
            <summary>
            Open a connection, on the specified connection string.
            </summary>
            <param name="connectionString">The connection string</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.CloseConnection">
            <summary>
            Open a connection
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.BeginTransaction">
            <summary>
            Begins a database transaction.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.BeginTransaction(System.String)">
            <summary>
            Open a connection and begin a transaction on the specified connection string.
            </summary>
            <param name="connectionString">The connection string</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.BeginTransaction(System.Boolean)">
            <summary>
            Begins a database transaction on the currect session
            </summary>
            <param name="openConnection">Open a connection.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a database transaction with the specified isolation level.
            </summary>
            <param name="isolationLevel">
            The isolation level under which the transaction should run.
            </param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.BeginTransaction(System.String,System.Data.IsolationLevel)">
            <summary>
            Open a connection and begin a transaction on the specified connection string.
            </summary>
            <param name="connectionString">The connection string</param>
            <param name="isolationLevel">The transaction isolation level for this connection.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.BeginTransaction(System.Boolean,System.Data.IsolationLevel)">
            <summary>
            Start a database transaction on the current session
            with the specified isolation level.
            </summary>
            <param name="openNewConnection">Open a connection.</param>
            <param name="isolationLevel">
            The isolation level under which the transaction should run.
            </param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.BeginTransaction(System.String,System.Boolean,System.Data.IsolationLevel)">
            <summary>
            Begins a transaction on the current connection
            with the specified IsolationLevel value.
            </summary>
            <param name="isolationLevel">The transaction isolation level for this connection.</param>
            <param name="connectionString">The connection string</param>
            <param name="openNewConnection">Open a connection.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.CommitTransaction">
            <summary>
            Commits the database transaction.
            </summary>
            <remarks>
            Will close the connection.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.CommitTransaction(System.Boolean)">
            <summary>
            Commits the database transaction.
            </summary>
            <param name="closeConnection">Close the connection</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.RollBackTransaction">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
            <remarks>
            Will close the connection.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.RollBackTransaction(System.Boolean)">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
            <param name="closeConnection">Close the connection</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForObject(System.String,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns that returns data 
            to populate a single object instance.
            <p/>
            The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns> The single result object populated with the result set data.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForObject(System.String,System.Object,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns a single object of the type of the
            resultObject parameter.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">An object of the type to be returned.</param>
            <returns>The single result object populated with the result set data.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForObject``1(System.String,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns that returns data 
            to populate a single object instance.
            <p/>
            The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns> The single result object populated with the result set data.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForObject``1(System.String,System.Object,``0)">
            <summary>
            Executes a Sql SELECT statement that returns a single object of the type of the
            resultObject parameter.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="instanceObject">An object of the type to be returned.</param>
            <returns>The single result object populated with the result set data.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForDictionary(System.String,System.Object,System.String)">
            <summary>
             Alias to QueryForMap, .NET spirit.
             Feature idea by Ted Husted.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="keyProperty">The property of the result object to be used as the key.</param>
            <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForDictionary(System.String,System.Object,System.String,System.String)">
             <summary>
             Alias to QueryForMap, .NET spirit.
              Feature idea by Ted Husted.
             </summary>
             <param name="statementName">The name of the sql statement to execute.</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForMap(System.String,System.Object,System.String)">
            <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the entire result object.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="keyProperty">The property of the result object to be used as the key.</param>
            <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForMap(System.String,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="statementName">The name of the sql statement to execute.</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForList(System.String,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns data to populate
            a number of result objects.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForList(System.String,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns all rows selected.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForList(System.String,System.Object,System.Collections.IList)">
            <summary>
            Executes a Sql SELECT statement that returns data to populate
            a number of result objects.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">An Ilist object used to hold the objects.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForDictionary``2(System.String,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="statementName">The name of the sql statement to execute.</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A IDictionary of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForDictionary``2(System.String,System.Object,System.String)">
            <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the entire result object.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="keyProperty">The property of the result object to be used as the key.</param>
            <returns>A IDictionary of object containing the rows keyed by keyProperty.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForDictionary``2(System.String,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate{``0,``1})">
             <summary>
             Runs a query with a custom object that gets a chance to deal 
             with each row as it is processed.
             <p/>
              The parameter object is generally used to supply the input
             data for the WHERE clause parameter(s) of the SELECT statement.
             </summary>
             <param name="statementName">The name of the sql statement to execute.</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <param name="rowDelegate">A delegate called once per row in the QueryForDictionary method&gt;</param>
             <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForList``1(System.String,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns data to populate
            a number of result objects.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForList``1(System.String,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns all rows selected.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForList``1(System.String,System.Object,System.Collections.Generic.IList{``0})">
            <summary>
            Executes a Sql SELECT statement that returns data to populate
            a number of result objects.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">An Ilist object used to hold the objects.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForPaginatedList(System.String,System.Object,System.Int32)">
            <summary>
            Executes the SQL and retuns a subset of the results in a dynamic PaginatedList that can be used to
            automatically scroll through results from a database table.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL</param>
            <param name="pageSize">The maximum number of objects to store in each page</param>
            <returns>A PaginatedList of beans containing the rows</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryWithRowDelegate(System.String,System.Object,IBatisNet.DataMapper.RowDelegate)">
            <summary>
            Runs a query for list with a custom object that gets a chance to deal 
            with each row as it is processed.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="rowDelegate"></param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryWithRowDelegate``1(System.String,System.Object,IBatisNet.DataMapper.RowDelegate{``0})">
            <summary>
            Runs a query for list with a custom object that gets a chance to deal 
            with each row as it is processed.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="rowDelegate"></param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForMapWithRowDelegate(System.String,System.Object,System.String,System.String,IBatisNet.DataMapper.DictionaryRowDelegate)">
             <summary>
             Runs a query with a custom object that gets a chance to deal 
             with each row as it is processed.
             <p/>
              The parameter object is generally used to supply the input
             data for the WHERE clause parameter(s) of the SELECT statement.
             </summary>
             <param name="statementName">The name of the sql statement to execute.</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <param name="rowDelegate"></param>
             <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.Insert(System.String,System.Object)">
            <summary>
            Executes a Sql INSERT statement.
            Insert is a bit different from other update methods, as it
            provides facilities for returning the primary key of the
            newly inserted row (rather than the effected rows).  This
            functionality is of course optional.
            <p/>
            The parameter object is generally used to supply the input
            data for the INSERT values.
            </summary>
            <param name="statementName">The name of the statement to execute.</param>
            <param name="parameterObject">The parameter object.</param>
            <returns> The primary key of the newly inserted row.  
            This might be automatically generated by the RDBMS, 
            or selected from a sequence table or other source.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.Update(System.String,System.Object)">
            <summary>
            Executes a Sql UPDATE statement.
            Update can also be used for any other update statement type,
            such as inserts and deletes.  Update returns the number of
            rows effected.
            <p/>
            The parameter object is generally used to supply the input
            data for the UPDATE values as well as the WHERE clause parameter(s).
            </summary>
            <param name="statementName">The name of the statement to execute.</param>
            <param name="parameterObject">The parameter object.</param>
            <returns>The number of rows effected.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.Delete(System.String,System.Object)">
            <summary>
             Executes a Sql DELETE statement.
             Delete returns the number of rows effected.
            </summary>
            <param name="statementName">The name of the statement to execute.</param>
            <param name="parameterObject">The parameter object.</param>
            <returns>The number of rows effected.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.GetMappedStatement(System.String)">
            <summary>
            Gets a MappedStatement by name
            </summary>
            <param name="id"> The id of the statement</param>
            <returns> The MappedStatement</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.AddMappedStatement(System.String,IBatisNet.DataMapper.MappedStatements.IMappedStatement)">
            <summary>
            Adds a (named) MappedStatement.
            </summary>
            <param name="key"> The key name</param>
            <param name="mappedStatement">The statement to add</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.GetParameterMap(System.String)">
            <summary>
            Get a ParameterMap by name
            </summary>
            <param name="name">The name of the ParameterMap</param>
            <returns>The ParameterMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.AddParameterMap(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap)">
            <summary>
            Adds a (named) ParameterMap.
            </summary>
            <param name="parameterMap">the ParameterMap to add</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.GetResultMap(System.String)">
            <summary>
            Gets a ResultMap by name
            </summary>
            <param name="name">The name of the result map</param>
            <returns>The ResultMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.AddResultMap(IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap)">
            <summary>
            Adds a (named) ResultMap
            </summary>
            <param name="resultMap">The ResultMap to add</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.FlushCaches">
            <summary>
            Flushes all cached objects that belong to this SqlMap
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.AddCache(IBatisNet.DataMapper.Configuration.Cache.CacheModel)">
            <summary>
            Adds a (named) cache.
            </summary>
            <param name="cache">The cache to add</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.GetCache(System.String)">
            <summary>
            Gets a cache by name
            </summary>
            <param name="name">The name of the cache to get</param>
            <returns>The cache object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.GetDataCacheStats">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.CreateSqlMapSession">
            <summary>
            Creates a new SqlMapSession that will be used to query the data source.
            </summary>
            <returns>A new session</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.CreateSqlMapSession(System.String)">
            <summary>
            Creates the SQL map session.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns>A new session</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.Id">
            <summary>
            Name used to identify the the <see cref="T:IBatisNet.DataMapper.SqlMapper"/>
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.SessionStore">
            <summary>
            Allow to set a custom session store like the <see cref="T:IBatisNet.DataMapper.SessionStore.HybridWebThreadSessionStore"/>
            </summary>
            <remarks>Set it after the configuration and before use of the <see cref="T:IBatisNet.DataMapper.SqlMapper"/></remarks>
            <example>
            sqlMapper.SessionStore = new HybridWebThreadSessionStore( sqlMapper.Id );
            </example>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.LocalSession">
            <summary>
             Returns the DalSession instance 
             currently being used by the SqlMap.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.IsSessionStarted">
            <summary>
            Gets a value indicating whether this instance is session started.
            </summary>
            <value>
            	<c>true</c> if this instance is session started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.DataExchangeFactory">
            <summary>
            Factory for DataExchange objects
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.TypeHandlerFactory">
            <summary>
            The TypeHandlerFactory
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.ObjectFactory">
            <summary>
            The meta factory for object factory
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.AccessorFactory">
            <summary>
            The factory which build <see cref="T:IBatisNet.Common.Utilities.Objects.Members.IAccessor"/>
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.IsCacheModelsEnabled">
            <summary>
            A flag that determines whether cache models were enabled 
            when this SqlMap was built.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.MappedStatements">
            <summary>
            The MappedStatements collection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.ParameterMaps">
            <summary>
            The ParameterMap collection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.ResultMaps">
            <summary>
            The ResultMap collection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.DataSource">
            <summary>
            The DataSource
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Proxy.LazyFactoryBuilder">
            <summary>
            Gets <see cref="T:IBatisNet.DataMapper.Proxy.ILazyFactory"/> instance.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyFactoryBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Proxy.LazyFactoryBuilder"/> class.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyFactoryBuilder.Register(System.Type,System.String,IBatisNet.DataMapper.Proxy.ILazyFactory)">
            <summary>
            Register (add) a lazy load Proxy for a type and member type
            </summary>
            <param name="type">The target type which contains the member proxyfied</param>
            <param name="memberName">The member name the proxy must emulate</param>
            <param name="factory">The <see cref="T:IBatisNet.DataMapper.Proxy.ILazyFactory"/>.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Proxy.LazyFactoryBuilder.GetLazyFactory(System.Type)">
            <summary>
            Get a ILazyLoadProxy for a type, member name
            </summary>
            <param name="type">The target type which contains the member proxyfied</param>
            <returns>Return the ILazyLoadProxy instance</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PaginatedList">
            <summary>
            Summary description for PaginatedDataList.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.#ctor(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="mappedStatement"></param>
            <param name="parameterObject"></param>
            <param name="pageSize"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.PageForward">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.PageBack">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.SafePageTo(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.PageTo(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.GetList(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="localPageSize"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.SubList(System.Collections.IList,System.Int32,System.Int32)">
            <summary>
            Provides a view of the IList pramaeter 
            from the specified position <paramref name="fromIndex"/> 
            to the specified position <paramref name="toIndex"/>. 
            </summary>
            <param name="list">The IList elements.</param>
            <param name="fromIndex">Starting position for the view of elements. </param>
            <param name="toIndex">Ending position for the view of elements. </param>
            <returns> A view of list.
            </returns>
            <remarks>
            The list that is returned is just a view, it is still backed
            by the orignal list.  Any changes you make to it will be 
            reflected in the orignal list.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.GotoPage(System.Int32)">
            <summary>
            
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.NextPage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.PreviousPage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.Insert(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.Remove(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.Contains(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.IndexOf(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.Add(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.CopyTo(System.Array,System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.Reset">
            <summary>
            Sets the enumerator to its initial position, 
            which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; 
            false if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.PageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsPreviousPageAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsFirstPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.PageSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsMiddlePage">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsNextPageAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsLastPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsFixedSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsSynchronized">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.SyncRoot">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.Current">
            <summary>
            Gets the current element in the page.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.SelectStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/> implementation when a 'select' attribute exists
            on a <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty"/>
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.SelectStrategy.#ctor(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy,IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy,IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy,IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.SelectStrategy"/> class.
            </summary>
            <param name="mapping">The mapping.</param>
            <param name="selectArrayStrategy">The select array strategy.</param>
            <param name="selectGenericListStrategy">The select generic list strategy.</param>
            <param name="selectListStrategy">The select list strategy.</param>
            <param name="selectObjectStrategy">The select object strategy.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.SelectStrategy.GetValue(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader@,System.Object)">
            <summary>
            Gets the value of an argument constructor.
            </summary>
            <param name="request">The current <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</param>
            <param name="mapping">The <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> with the argument infos.</param>
            <param name="reader">The current <see cref="T:System.Data.IDataReader"/>.</param>
            <param name="selectKeys">The keys</param>
            <returns>The paremeter value.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.DataExchange.DataExchangeFactory">
            <summary>
            Factory for DataExchange objects
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.DataExchangeFactory.#ctor(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory,IBatisNet.Common.Utilities.Objects.IObjectFactory,IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.DataExchange.DataExchangeFactory"/> class.
            </summary>
            <param name="typeHandlerFactory">The type handler factory.</param>
            <param name="objectFactory">The object factory.</param>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.DataExchange.DataExchangeFactory.GetDataExchangeForClass(System.Type)">
            <summary>
            Get a DataExchange object for the passed in Class
            </summary>
            <param name="clazz">The class to get a DataExchange object for</param>
            <returns>The IDataExchange object</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.DataExchange.DataExchangeFactory.TypeHandlerFactory">
            <summary>
             Getter for the type handler factory
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.DataExchange.DataExchangeFactory.ObjectFactory">
            <summary>
            The factory for object
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.DataExchange.DataExchangeFactory.AccessorFactory">
            <summary>
            The factory which build <see cref="T:IBatisNet.Common.Utilities.Objects.Members.ISetAccessor"/>
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Static.ProcedureSql">
            <summary>
            Summary description for ProcedureSql.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Static.ProcedureSql.#ctor(IBatisNet.DataMapper.Scope.IScope,System.String,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="statement">The statement.</param>
            <param name="sqlStatement"></param>
            <param name="scope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Static.ProcedureSql.GetRequestScope(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,IBatisNet.DataMapper.ISqlMapSession)">
            <summary>
            Builds a new <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/> and the sql command text to execute.
            </summary>
            <param name="parameterObject">The parameter object (used in DynamicSql)</param>
            <param name="session">The current session</param>
            <param name="mappedStatement">The <see cref="T:IBatisNet.DataMapper.MappedStatements.IMappedStatement"/>.</param>
            <returns>A new <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Static.ProcedureSql.BuildPreparedStatement(IBatisNet.DataMapper.ISqlMapSession,IBatisNet.DataMapper.Scope.RequestScope,System.String)">
            <summary>
            Build the PreparedStatement
            </summary>
            <param name="session"></param>
            <param name="commandText"></param>
            <param name="request"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.SqlText">
            <summary>
            Summary description for SqlText.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.SqlText.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.SqlText.IsWhiteSpace">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.SqlText.Parameters">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext">
            <summary>
            Summary description for IterateContext.
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dncscol/html/csharp01212002.asp
            http://www.microsoft.com/mspress/books/sampchap/6173.asp
            http://www.dur.ac.uk/barry.cornelius/java/a.taste.of.csharp/onefile/
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.Reset">
            <summary>
            Sets the enumerator to its initial position,
             which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.MoveNext">
             <summary>
             Advances the enumerator to the next element of the collection.
             </summary>
             <returns>
             True if the enumerator was successfully advanced to the next element;
             False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.Remove">
            <summary>
            Removes from the underlying collection the last element returned by the iterator. 
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.Index">
            <summary>
            Gets the index of the current element in the collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.IsFirst">
            <summary>
            Return true if the current element is the first.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.IsLast">
            <summary>
             Return true if the current element is the last.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.HasNext">
            <summary>
            Returns true if the iteration has more elements. (In other words, returns true 
            if next would return an element rather than throwing an exception.) 
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Iterate">
            <summary>
            Represent an iterate sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Iterate.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Iterate"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Iterate.Conjunction">
            <summary>
            Conjonction attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Iterate.Close">
            <summary>
            Close attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Iterate.Open">
            <summary>
            Open attribute
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotPropertyAvailable">
            <summary>
            Represent an isEmpty sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotPropertyAvailable.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotPropertyAvailable"/> class.
            </summary>
            <param name="accessorFactory">The accessor factory.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder">
            <summary>
            Builds an ISqlMapper instance from the supplied resources (e.g. XML configuration files).
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.DATAMAPPER_NAMESPACE_PREFIX">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.DEFAULT_FILE_CONFIG_NAME">
            <summary>
            Default filename of main configuration file.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.DEFAULT_PROVIDER_NAME">
            <summary>
            Default provider name
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.DOT">
            <summary>
            Dot representation.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_DATAMAPPER_CONFIG_ROOT">
            <summary>
            Token for SqlMapConfig xml root element.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_CONFIG_SETTINGS">
            <summary>
            Token for xml path to SqlMapConfig settings element.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.PROVIDERS_FILE_NAME">
            <summary>
            Token for default providers config file name.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_CONFIG_PROVIDERS">
            <summary>
            Token for xml path to SqlMapConfig providers element.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_PROPERTIES">
            <summary>
            Token for xml path to properties elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_PROPERTY">
            <summary>
            Token for xml path to property elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_SETTINGS_ADD">
            <summary>
            Token for xml path to settings add elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_GLOBAL_PROPERTIES">
            <summary>
            Token for xml path to global properties elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_PROVIDER">
            <summary>
            Token for xml path to provider elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_DATABASE_PROVIDER">
            <summary>
            Token for xml path to database provider elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_DATABASE_DATASOURCE">
            <summary>
            Token for xml path to database source elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_GLOBAL_TYPEALIAS">
            <summary>
            Token for xml path to global type alias elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_GLOBAL_TYPEHANDLER">
            <summary>
            Token for xml path to global type alias elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_SQLMAP">
            <summary>
            Token for xml path to sqlMap elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_MAPPING_ROOT">
            <summary>
            Token for mapping xml root.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_TYPEALIAS">
            <summary>
            Token for xml path to type alias elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_RESULTMAP">
            <summary>
            Token for xml path to resultMap elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_PARAMETERMAP">
            <summary>
            Token for xml path to parameterMap elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.SQL_STATEMENT">
            <summary>
            Token for xml path to sql elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_STATEMENT">
            <summary>
            Token for xml path to statement elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_SELECT">
            <summary>
            Token for xml path to select elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_INSERT">
            <summary>
            Token for xml path to insert elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_SELECTKEY">
            <summary>
            Token for xml path to selectKey elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_UPDATE">
            <summary>
            Token for xml path to update elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_DELETE">
            <summary>
            Token for xml path to delete elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_PROCEDURE">
            <summary>
            Token for xml path to procedure elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_CACHE_MODEL">
            <summary>
            Token for xml path to cacheModel elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_FLUSH_ON_EXECUTE">
            <summary>
            Token for xml path to flushOnExecute elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_SEARCH_STATEMENT">
            <summary>
            Token for xml path to search statement elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_SEARCH_PARAMETER">
            <summary>
            Token for xml path to search parameterMap elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_SEARCH_RESULTMAP">
            <summary>
            Token for xml path to search resultMap elements.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ATR_USE_STATEMENT_NAMESPACES">
            <summary>
            Token for useStatementNamespaces attribute.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ATR_CACHE_MODELS_ENABLED">
            <summary>
            Token for cacheModelsEnabled attribute.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ATR_VALIDATE_SQLMAP">
            <summary>
            Token for validateSqlMap attribute.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ATR_USE_REFLECTION_OPTIMIZER">
            <summary>
            Token for useReflectionOptimizer attribute.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.#ctor">
            <summary>
            Constructs a DomSqlMapBuilder.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.#ctor(System.Boolean)">
            <summary>
            Constructs a DomSqlMapBuilder 
            with or without configuration document validation using the 
            SqlMapConfig schema.
            </summary>
            <param name="validateSqlMapConfig">
            Specify whether the configuration Xml document should be 
            validated with the SqlMapConfig schema.
            </param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Configure">
            <summary>
            Configure a SqlMapper from default resource file named 'SqlMap.config'.
            </summary>
            <returns>An ISqlMapper instance.</returns>
            <remarks>
            The file path is relative to the application root. For ASP.Net applications
            this would be the same directory as the Web.config file. For other .Net
            applications the SqlMap.config file should be placed in the same folder
            as the executable. 
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Configure(System.Xml.XmlDocument)">
            <summary>
            Configure and returns an ISqlMapper instance.
            </summary>
            <param name="document">An xml sql map configuration document.</param>
            <returns>An ISqlMapper instance.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Configure(System.String)">
            <summary>
            Configure an ISqlMapper object from a file path.
            </summary>
            <param name="resource">
            A relative ressource path from your Application root 
            or a absolue file path file:\\c:\dir\a.config
            </param>
            <returns>An ISqlMapper instance.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Configure(System.IO.Stream)">
            <summary>
             Configure an ISqlMapper object from a stream.
            </summary>
            <param name="resource">A Stream resource.</param>
            <returns>An SqlMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Configure(System.IO.FileInfo)">
            <summary>
             Configure an ISqlMapper object from a FileInfo.
            </summary>
            <param name="resource">A FileInfo resource.</param>
            <returns>An ISqlMapper instance.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Configure(System.Uri)">
            <summary>
             Configure an ISqlMapper object from an Uri.
            </summary>
            <param name="resource">A Uri resource.</param>
            <returns>An ISqlMapper instance.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ConfigureAndWatch(IBatisNet.Common.Utilities.ConfigureHandler)">
            <summary>
            Configure and monitor the default configuration file (SqlMap.config) for modifications 
            and automatically reconfigure SqlMap. 
            </summary>
            <returns>An ISqlMapper instance.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ConfigureAndWatch(System.String,IBatisNet.Common.Utilities.ConfigureHandler)">
             <summary>
             Configure and monitor the configuration file for modifications 
             and automatically reconfigure the ISqlMapper instance.
             </summary>
             <param name="resource">
             A relative ressource path from your Application root 
             or an absolue file path file:\\c:\dir\a.config
             </param>
            <param name="configureDelegate">
             Delegate called when the file has changed.
             </param>
             <returns>An ISqlMapper instance.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ConfigureAndWatch(System.IO.FileInfo,IBatisNet.Common.Utilities.ConfigureHandler)">
             <summary>
             Configure and monitor the configuration file for modifications 
             and automatically reconfigure the ISqlMapper instance.
             </summary>
             <param name="resource">
             A FileInfo to a SqlMap.config file.
             </param>
            <param name="configureDelegate">
             Delegate called when the file has changed.
             </param>
             <returns>An ISqlMapper instance.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.OnConfigFileChange(System.Object)">
            <summary>
            Callback called when the SqlMap.config file has changed.
            </summary>
            <param name="obj">The <see cref="T:IBatisNet.Common.Utilities.StateConfig"/> object.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Build(System.Xml.XmlDocument,IBatisNet.Common.DataSource,System.Boolean,System.Boolean)">
            <summary>
            Build an ISqlMapper instance.
            </summary>
            <param name="document">An xml configuration document.</param>
            <param name="dataSource">A data source.</param>
            <param name="useConfigFileWatcher"></param>
            <param name="isCallFromDao"></param>
            <returns>Returns an ISqlMapper instance.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ValidateSchema(System.Xml.XmlNode,System.String)">
            <summary>
            Validates an XmlNode against a schema file.
            </summary>
            <param name="section">The doc to validate.</param>
            <param name="schemaFileName">Schema file name.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Build(System.Xml.XmlDocument,IBatisNet.Common.DataSource,System.Boolean,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Load statements (select, insert, update, delete), parameters, and resultMaps.
            </summary>
            <param name="document"></param>
            <param name="dataSource"></param>
            <param name="useConfigFileWatcher"></param>
            <param name="properties"></param>
            <returns></returns>
            <remarks>Used by Dao</remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Build(System.Xml.XmlDocument,System.Boolean)">
            <summary>
            Load SqlMap configuration from
            from the XmlDocument passed in parameter.
            </summary>
            <param name="document">The xml sql map configuration.</param>
            <param name="useConfigFileWatcher"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Reset">
            <summary>
            Reset PreparedStatements cache
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Initialize">
            <summary>
            Intialize the internal ISqlMapper instance.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.GetProviders">
            <summary>
            Load and initialize providers from specified file.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ParseProvider">
            <summary>
            Parse the provider tag.
            </summary>
            <returns>A provider object.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ConfigureSqlMap">
            <summary>
            Load sqlMap statement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ProcessSqlStatement(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Process the Sql Statement
            </summary>
            <param name="statement"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ParseDynamicTags(System.Xml.XmlNode,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IDynamicParent,System.Text.StringBuilder,System.Boolean,System.Boolean,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Parse dynamic tags
            </summary>
            <param name="commandTextNode"></param>
            <param name="dynamic"></param>
            <param name="sqlBuffer"></param>
            <param name="isDynamic"></param>
            <param name="postParseRequired"></param>
            <param name="statement"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ApplyInlineParemeterMap(IBatisNet.DataMapper.Configuration.Statements.IStatement,System.String)">
            <summary>
            Apply inline paremeterMap
            </summary>
            <param name="statement"></param>
            <param name="sqlStatement"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ParseGlobalProperties">
            <summary>
            Initialize the list of variables defined in the
            properties file.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.GenerateCommandText(IBatisNet.DataMapper.Scope.ConfigurationScope,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Generate the command text for CRUD operation
            </summary>
            <param name="configScope"></param>
            <param name="statement"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.BuildParameterMap">
            <summary>
            Build a ParameterMap
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.BuildResultMap">
            <summary>
            Build a ResultMap
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.GetStream(System.String)">
            <summary>
            Gets a resource stream.
            </summary>
            <param name="schemaResourceKey">The schema resource key.</param>
            <returns>A resource stream.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ApplyDataMapperNamespacePrefix(System.String)">
            <summary>
            Apply the dataMapper namespace prefix
            </summary>
            <param name="elementName"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ApplyProviderNamespacePrefix(System.String)">
            <summary>
            Apply the provider namespace prefix
            </summary>
            <param name="elementName"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ApplyMappingNamespacePrefix(System.String)">
            <summary>
            Apply the provider namespace prefix
            </summary>
            <param name="elementName"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Properties">
            <summary>
            Allow properties to be set before configuration.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.SetAccessorFactory">
            <summary>
            Allow a custom <see cref="T:IBatisNet.Common.Utilities.Objects.Members.ISetAccessorFactory"/> to be set before configuration.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.GetAccessorFactory">
            <summary>
            Allow a custom <see cref="T:IBatisNet.Common.Utilities.Objects.Members.IGetAccessorFactory"/> to be set before configuration.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ObjectFactory">
            <summary>
            Allow a custom <see cref="T:IBatisNet.Common.Utilities.Objects.IObjectFactory"/> to be set before configuration.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.SqlMapper">
            <summary>
            Allow a custom <see cref="T:IBatisNet.DataMapper.ISqlMapper"/> to be set before configuration.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ValidateSqlMapConfig">
            <summary>
            Enable validation of SqlMap document. This property must be set before configuration.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSingleTypeHandler">
            <summary>
            TypeHandler for Nullable Single type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSingleTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSingleTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSingleTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSingleTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSingleTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSingleTypeHandler.IsSimpleType">
            <summary>
            Tell us if ot is a 'primitive' type
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableSingleTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableBooleanTypeHandler">
            <summary>
            TypeHandler for Nullable Boolean Type
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableBooleanTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableBooleanTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableBooleanTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableBooleanTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableBooleanTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableBooleanTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.Nullables.NullableBooleanTypeHandler.NullValue">
            <summary>
            The null value for this type
            </summary>
            <value></value>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.GuidTypeHandler">
            <summary>
            Description résumée de GuidTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.GuidTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.GuidTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.GuidTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.GuidTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.GuidTypeHandler.IsSimpleType">
            <summary>
            Gets a value indicating whether this instance is simple type.
            </summary>
            <value>
            	<c>true</c> if this instance is simple type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IBatisNet.DataMapper.SessionStore.CallContextSessionStore">
            <summary>
            Provides an implementation of <see cref="T:IBatisNet.DataMapper.SessionStore.ISessionStore"/>
            which relies on <c>CallContext</c>.
            This implementation will first get the current session from the current 
            thread. Do NOT use on web scenario (web applications or web services).
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.CallContextSessionStore.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.SessionStore.CallContextSessionStore"/> class.
            </summary>
            <param name="sqlMapperId">The SQL mapper id.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.CallContextSessionStore.Store(IBatisNet.DataMapper.ISqlMapSession)">
            <summary>
            Store the specified session.
            </summary>
            <param name="session">The session to store</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionStore.CallContextSessionStore.Dispose">
            <summary>
            Remove the local session.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SessionStore.CallContextSessionStore.LocalSession">
            <summary>
            Get the local session
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Scope.RequestScope">
            <summary>
            Hold data during the process of a mapped statement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.RequestScope.GetUniqueKeys(IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap)">
            <summary>
            Gets the unique keys.
            </summary>
            <param name="map">The ResultMap.</param>
            <returns>
            Returns [key, result object] which holds the result objects that have  
            already been build during this request with this <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap"/>
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.RequestScope.SetUniqueKeys(IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,System.Collections.IDictionary)">
            <summary>
            Sets the unique keys.
            </summary>
            <param name="map">The map.</param>
            <param name="keys">The keys.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.RequestScope.MoveNextResultMap">
            <summary>
            Moves to the next result map.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.RequestScope.#ctor(IBatisNet.DataMapper.DataExchange.DataExchangeFactory,IBatisNet.DataMapper.ISqlMapSession,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/> class.
            </summary>
            <param name="dataExchangeFactory">The data exchange factory.</param>
            <param name="session">The session.</param>
            <param name="statement">The statement</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.RequestScope.Equals(System.Object)">
            <summary>
            Check if the specify object is equal to the current object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.RequestScope.GetHashCode">
            <summary>
            Get the HashCode for this RequestScope
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.RequestScope.GetNextId">
            <summary>
            Method to get a unique ID
            </summary>
            <returns>The new ID</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.MappedStatement">
            <summary>
             The current <see cref="T:IBatisNet.DataMapper.MappedStatements.IMappedStatement"/>.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.Statement">
            <summary>
            Gets the current <see cref="T:IBatisNet.DataMapper.Configuration.Statements.IStatement"/>.
            </summary>
            <value>The statement.</value>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.Session">
            <summary>
             The current <see cref="T:IBatisNet.DataMapper.ISqlMapSession"/>.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.IDbCommand">
            <summary>
             The <see cref="P:IBatisNet.DataMapper.Scope.RequestScope.IDbCommand"/> to execute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.IsRowDataFound">
            <summary>
             Indicate if the statement have find data
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.QueueSelect">
            <summary>
            The 'select' result property to process after having process the main properties.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.CurrentResultMap">
            <summary>
            The current <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap"/> used by this request.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.ParameterMap">
            <summary>
            The <see cref="P:IBatisNet.DataMapper.Scope.RequestScope.ParameterMap"/> used by this request.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.PreparedStatement">
            <summary>
            The <see cref="P:IBatisNet.DataMapper.Scope.RequestScope.PreparedStatement"/> used by this request.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.DataExchangeFactory">
            <summary>
            A factory for DataExchange objects
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.ErrorContext">
            <summary>
             Get the request's error context
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ObjectStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy"/> implementation when 
            no 'resultClass' attribute is specified.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.ObjectStrategy.Process(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader@,System.Object)">
            <summary>
            Processes the specified <see cref="T:System.Data.IDataReader"/> 
            when no resultClass or resultMap attribute are specified.
            </summary>
            <param name="request">The request.</param>
            <param name="reader">The reader.</param>
            <param name="resultObject">The result object.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.DictionaryStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy"/> implementation when 
            a 'resultClass' attribute is specified and
            the type of the result object is <see cref="T:System.Collections.IDictionary"/>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.DictionaryStrategy.Process(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader@,System.Object)">
            <summary>
            Processes the specified <see cref="T:System.Data.IDataReader"/> 
            when a 'resultClass' attribute is specified on the statement and
            the 'resultClass' attribute is a <see cref="T:System.Collections.IDictionary"/>.
            </summary>
            <param name="request">The request.</param>
            <param name="reader">The reader.</param>
            <param name="resultObject">The result object.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.AutoMapStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ResultStrategy.IResultStrategy"/> implementation used when implicit 'ResultMap'.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.AutoMapStrategy.InitializeAutoResultMap(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader@,System.Object@)">
            <summary>
            Auto-map the reader to the result object.
            </summary>
            <param name="request">The request.</param>
            <param name="reader">The reader.</param>
            <param name="resultObject">The result object.</param>
            <returns>The AutoResultMap use to map the resultset.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ResultStrategy.AutoMapStrategy.Process(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader@,System.Object)">
            <summary>
            Processes the specified <see cref="T:System.Data.IDataReader"/> 
            a an auto result map is used.
            </summary>
            <param name="request">The request.</param>
            <param name="reader">The reader.</param>
            <param name="resultObject">The result object.</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectArrayStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.IPropertyStrategy"/> implementation when a 'select' attribute exists
            on a <see cref="T:System.Array"/> <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/>
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectArrayStrategy.Set(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader,System.Object)">
            <summary>
             Sets value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> on the target object
             when a 'select' attribute exists and fills an Array property
             on the <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> are empties.
             </summary>
             <param name="request">The request.</param>
             <param name="resultMap">The result map.</param>
             <param name="mapping">The ResultProperty.</param>
             <param name="target">The target.</param>
             <param name="reader">The <see cref="T:System.Data.IDataReader"/></param>
             <param name="keys">The keys</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PropertyStrategy.SelectArrayStrategy.Get(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.IResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader)">
            <summary>
            Gets the value of the specified <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> that must be set on the target object.
            </summary>
            <param name="request">The request.</param>
            <param name="resultMap">The result map.</param>
            <param name="mapping">The mapping.</param>
            <param name="reader">The reader.</param>
            <param name="target">The target object</param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.SelectArrayStrategy">
            <summary>
            <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/> implementation when a 'select' attribute exists
            on a <see cref="T:System.Array"/> <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty"/>
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.SelectArrayStrategy.GetValue(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader@,System.Object)">
            <summary>
            Gets the value of an argument constructor.
            </summary>
            <param name="request">The current <see cref="T:IBatisNet.DataMapper.Scope.RequestScope"/>.</param>
            <param name="mapping">The <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty"/> with the argument infos.</param>
            <param name="reader">The current <see cref="T:System.Data.IDataReader"/>.</param>
            <param name="keys">The keys</param>
            <returns>The paremeter value.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.ArgumentStrategyFactory">
            <summary>
            Factory to get <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/> implementation.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.ArgumentStrategyFactory.#cctor">
            <summary>
            Initializes the <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.ArgumentStrategyFactory"/> class.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.ArgumentStrategyFactory.Get(IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty)">
            <summary>
            Finds the <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/>.
            </summary>
            <param name="mapping">The <see cref="T:IBatisNet.DataMapper.Configuration.ResultMapping.ArgumentProperty"/>.</param>
            <returns>The <see cref="T:IBatisNet.DataMapper.MappedStatements.ArgumentStrategy.IArgumentStrategy"/></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Procedure">
            <summary>
            Represent a store Procedure.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Procedure.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Procedure.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configurationScope">The scope of the configuration</param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Procedure.CommandType">
            <summary>
            The type of the statement StoredProcedure.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Procedure.ExtendStatement">
            <summary>
            Extend statement attribute
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory">
            <summary>
            Summary description for PreparedStatementFactory.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory.#ctor(IBatisNet.DataMapper.ISqlMapSession,IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.Statements.IStatement,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="session"></param>
            <param name="statement"></param>
            <param name="commandText"></param>
            <param name="request"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory.Prepare">
            <summary>
            Create a list of IDataParameter for the statement and build the sql string.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory.DiscoverParameter(IBatisNet.DataMapper.ISqlMapSession)">
            <summary>
            For store procedure, auto discover IDataParameters for stored procedures at run-time.
            </summary>
            <param name="session">The current session.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory.CreateParametersForTextCommand">
            <summary>
            Create IDataParameters for command text statement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory.CreateParametersForProcedureCommand">
            <summary>
            Create IDataParameters for procedure statement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory.EvaluateParameterMap">
            <summary>
            Parse sql command text.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection">
            <summary>
            A ResultProperty Collection.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.#ctor">
            <summary>
            Constructs a ResultPropertyCollection. The list is initially empty and has a capacity
            of zero. Upon adding the first element to the list the capacity is
            increased to 8, and then increased in multiples of two as required.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.#ctor(System.Int32)">
            <summary>
             Constructs a ResultPropertyCollection with a given initial capacity. 
             The list is initially empty, but will have room for the given number of elements
             before any reallocations are required.
            </summary>
            <param name="capacity">The initial capacity of the list</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.FindByPropertyName(System.String)">
            <summary>
            Finds a property by his name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.Add(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty)">
            <summary>
            Add an ResultProperty
            </summary>
            <param name="value"></param>
            <returns>Index</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.AddRange(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty[])">
            <summary>
            Add a list of ResultProperty to the collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.AddRange(IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection)">
            <summary>
            Add a list of ResultProperty to the collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.Contains(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty)">
            <summary>
            Indicate if a ResultProperty is in the collection
            </summary>
            <param name="value">A ResultProperty</param>
            <returns>True fi is in</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.Contains(System.String)">
            <summary>
            Indicate if a ResultProperty is in the collection
            </summary>
            <param name="propertyName">A property name</param>
            <returns>True fi is in</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.Insert(System.Int32,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty)">
            <summary>
            Insert a ResultProperty in the collection.
            </summary>
            <param name="index">Index where to insert.</param>
            <param name="value">A ResultProperty</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.Remove(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty)">
            <summary>
            Remove a ResultProperty of the collection.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a ResultProperty at the given index. The size of the list is
            decreased by one.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.Resize(System.Int32)">
            <summary>
            Ensures that the capacity of this collection is at least the given minimum
            value. If the currect capacity of the list is less than min, the
            capacity is increased to twice the current capacity.
            </summary>
            <param name="minSize"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.Count">
            <summary>
            Read-only property describing how many elements are in the Collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.Length">
            <summary>
            Length of the collection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultPropertyCollection.Item(System.Int32)">
            <summary>
            Sets or Gets the ResultProperty at the given index.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator">
            <summary>
            Summary description for Discriminator.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator._resultMaps">
            <summary>
            (discriminatorValue (string), ResultMap)
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator._subMaps">
            <summary>
            The subMaps name who used this discriminator
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.SetMapping(IBatisNet.DataMapper.Scope.ConfigurationScope,System.Type)">
            <summary>
            Initilaize the underlying mapping
            </summary>
            <param name="configScope"></param>
            <param name="resultClass"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Initialize the Discriminator
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.Add(IBatisNet.DataMapper.Configuration.ResultMapping.SubMap)">
            <summary>
            Add a subMap that the discrimator must treat
            </summary>
            <param name="subMap">A subMap</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.GetSubMap(System.String)">
            <summary>
            Find the SubMap to use.
            </summary>
            <param name="discriminatorValue">the discriminator value</param>
            <returns>The find ResultMap</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.CallBackName">
            <summary>
            Specify the custom type handlers to used.
            </summary>
            <remarks>Will be an alias to a class wchic implement ITypeHandlerCallback</remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.DbType">
            <summary>
            Give an entry in the 'DbType' enumeration
            </summary>
            <example >
            For Sql Server, give an entry of SqlDbType : Bit, Decimal, Money...
            <br/>
            For Oracle, give an OracleType Enumeration : Byte, Int16, Number...
            </example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.CLRType">
            <summary>
            Specify the CLR type of the result.
            </summary>
            <remarks>
            The type attribute is used to explicitly specify the property type of the property to be set.
            Normally this can be derived from a property through reflection, but certain mappings such as
            HashTable cannot provide the type to the framework.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.ColumnIndex">
            <summary>
            Column Index
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.ColumnName">
            <summary>
            Column Name
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.NullValue">
            <summary>
            Null value replacement.
            </summary>
            <example>"no_email@provided.com"</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.ResultProperty">
            <summary>
            Th underlying ResultProperty
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Commands.DbCommandDecorator">
            <summary>
            Decorate an <see cref="T:System.Data.IDbCommand"></see>
            to auto move to next ResultMap on ExecuteReader call. 
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DbCommandDecorator.#ctor(System.Data.IDbCommand,IBatisNet.DataMapper.Scope.RequestScope)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Commands.DbCommandDecorator"/> class.
            </summary>
            <param name="dbCommand">The db command.</param>
            <param name="request">The request scope</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#Cancel">
            <summary>
            Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand"></see>.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#CreateParameter">
            <summary>
            Creates a new instance of an <see cref="T:System.Data.IDbDataParameter"></see> object.
            </summary>
            <returns>An IDbDataParameter object.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#ExecuteNonQuery">
            <summary>
            Executes an SQL statement against the Connection object of a .NET Framework data provider, and returns the number of rows affected.
            </summary>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.InvalidOperationException">The connection does not exist.-or- The connection is not open. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
            <summary>
            Executes the <see cref="P:System.Data.IDbCommand.CommandText"></see> against the <see cref="P:System.Data.IDbCommand.Connection"></see>, and builds an <see cref="T:System.Data.IDataReader"></see> using one of the <see cref="T:System.Data.CommandBehavior"></see> values.
            </summary>
            <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior"></see> values.</param>
            <returns>
            An <see cref="T:System.Data.IDataReader"></see> object.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#ExecuteReader">
            <summary>
            Executes the <see cref="P:System.Data.IDbCommand.CommandText"></see> against the <see cref="P:System.Data.IDbCommand.Connection"></see> and builds an <see cref="T:System.Data.IDataReader"></see>.
            </summary>
            <returns>
            An <see cref="T:System.Data.IDataReader"></see> object.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#ExecuteScalar">
            <summary>
            Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.
            </summary>
            <returns>
            The first column of the first row in the resultset.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#Prepare">
            <summary>
            Creates a prepared (or compiled) version of the command on the data source.
            </summary>
            <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection"></see> is not set.-or- The <see cref="P:System.Data.OleDb.OleDbCommand.Connection"></see> is not <see cref="M:System.Data.OleDb.OleDbConnection.Open"></see>. </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#CommandText">
            <summary>
            Gets or sets the text command to run against the data source.
            </summary>
            <value></value>
            <returns>The text command to execute. The default value is an empty string ("").</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#CommandTimeout">
            <summary>
            Gets or sets the wait time before terminating the attempt to execute a command and generating an error.
            </summary>
            <value></value>
            <returns>The time (in seconds) to wait for the command to execute. The default value is 30 seconds.</returns>
            <exception cref="T:System.ArgumentException">The property value assigned is less than 0. </exception>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#CommandType">
            <summary>
            Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText"></see> property is interpreted.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.Data.CommandType"></see> values. The default is Text.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#Connection">
            <summary>
            Gets or sets the <see cref="T:System.Data.IDbConnection"></see> used by this instance of the <see cref="T:System.Data.IDbCommand"></see>.
            </summary>
            <value></value>
            <returns>The connection to the data source.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#Parameters">
            <summary>
            Gets the <see cref="T:System.Data.IDataParameterCollection"></see>.
            </summary>
            <value></value>
            <returns>The parameters of the SQL statement or stored procedure.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#Transaction">
            <summary>
            Gets or sets the transaction within which the Command object of a .NET Framework data provider executes.
            </summary>
            <value></value>
            <returns>the Command object of a .NET Framework data provider executes. The default value is null.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Commands.DbCommandDecorator.System#Data#IDbCommand#UpdatedRowSource">
            <summary>
            Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow"></see> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)"></see> method of a <see cref="T:System.Data.Common.DbDataAdapter"></see>.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.Data.UpdateRowSource"></see> values. The default is Both unless the command is automatically generated. Then the default is None.</returns>
            <exception cref="T:System.ArgumentException">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource"></see> values. </exception>
        </member>
    </members>
</doc>
