$ValidationHelper.InstallScripts()

<h2>New ${model.Type.Name}</h2>

#if($flash.errors)
<ul id="errors">
#foreach($error in $flash.errors)
  <li>$error</li>
#end
</ul>
#end

#set ($validatorForm = "return validateForm( this, false, false, false, false, 5 )" )

#if($useModelName)
$PresentationHelper.Form("create${model.Type.Name}", "scaffoldingform", "post", $validatorForm)
#else
$PresentationHelper.Form("create", "scaffoldingform", "post", $validatorForm)
#end

<div id="scaffoldmain">

#foreach($curmodel in $HtmlHelper.GetModelHierarchy($model, $instance))

#if($curmodel.IsNestedType)
  $HtmlHelper.FieldSet("${curmodel.Type.Name}:")
#end

#foreach($field in $curmodel.Fields)
#if($HtmlHelper.CanHandle($field))
<p>$HtmlHelper.CreateControl($curmodel, $prefix, $field, $instance)</p>
#end
#end

#foreach($prop in $curmodel.Properties)
#if($HtmlHelper.CanHandle($prop))
<p>$HtmlHelper.CreateControl($curmodel, $prefix, $prop, $instance)</p>
#end
#end

#foreach($prop in $curmodel.NotMappedProperties)
#if($HtmlHelper.CanHandle($prop))
<p>$HtmlHelper.CreateControl($curmodel, $prefix, $prop, $instance)</p>
#end
#end

#foreach($prop in $curmodel.BelongsTo)
#if($HtmlHelper.CanHandle($prop))
<p>$HtmlHelper.CreateControl($curmodel, $prefix, $prop, $instance)</p>
#end
#end

#foreach($prop in $curmodel.HasMany)
#if($HtmlHelper.CanHandle($prop))
<p>$HtmlHelper.CreateControl($curmodel, $prefix, $prop, $instance)</p>
#end
#end

#foreach($prop in $curmodel.HasAndBelongsToMany)
#if($HtmlHelper.CanHandle($prop))
<p valign="top">$HtmlHelper.CreateControl($curmodel, $prefix, $prop, $instance)</p>
#end
#end

#if($curmodel.IsNestedType)
  $HtmlHelper.EndFieldSet()
#end

#end

$HtmlHelper.SubmitButton("Create")

</div>

<p>
$PresentationHelper.LinkToBack("Back", null) | $PresentationHelper.LinkToList($model, $useModelName, "List", null)
</p>

$HtmlHelper.EndForm()
