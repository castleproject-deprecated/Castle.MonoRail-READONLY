<?xml version="1.0"?>
<project name="Brail.BooViewEngine" default="compile">

	<property name="base.dir" value="${path::get-full-path( project::get-base-directory() )}" />
	<property name="bin.dir" value="${base.dir}/../bin" />
	<property name="shared.lib.dir" value="${base.dir}/../../SharedLibs/Boo" />
	<property name="sample.dir" value="${base.dir}/../TestSiteBrail" />

	<property name="booviewengine.test" value="true" unless="${property::exists('booviewengine.test')}" />

	<include buildfile="../../common.xml" />
	
	<property name="name" value="Castle.MonoRail.Views.Brail" />
	<property name="test.name" value="${name}.Tests" />
	
	<property name="assembly.name" value="${name}.dll" />
	<property name="test.assembly.name" value="${test.name}.dll" />
	
	<property name="src.dir" value="${base.dir}/" />
	<property name="test.src.dir" value="${base.dir}/../${test.name}" />

	<target name="clean">
	</target>

	<target name="init" depends="clean">
		<copy file="${test.src.dir}/App.config" tofile="${bin.dir}/${test.assembly.name}.config" />
	</target>

	<loadtasks assembly="${shared.lib.dir}/Boo.NAnt.Tasks.dll" verbose="true" />
	
	<echo>${bin.dir}\anrControls.Markdown.NET.dll</echo>
	
	<target name="compile" depends="init">
		<booc target="library" 
				output="${bin.dir}\${assembly.name}" 
				debug="${debug}">
			<sources basedir="${src.dir}">
				<include name="**.boo" />
			</sources>
			<references basedir="${bin.dir}">
				<include name="System.Xml.dll"/>
				<include name="System.Web.dll"/>
				<include name="${bin.dir}\anrControls.Markdown.NET.dll"/>
				<include name="${bin.dir}\log4net.dll"/>
				<include name="${bin.dir}\Castle.MonoRail.TestSupport.dll"/>
				<include name="${bin.dir}\Boo.Lang.Parser.dll"/>
				<include name="${bin.dir}\Castle.Core.dll"/>
				<include name="${bin.dir}\Castle.MonoRail.Framework.dll"/>
			</references>
		</booc>
	</target>

	<target name="tests.compile">
		<booc target="library" 
				output="${bin.dir}\${test.assembly.name}" 
				debug="${debug}" >
			<sources basedir="${test.src.dir}">
				<include name="**/*.boo" />
				<exclude name="Views/**.boo" />
			</sources>
			<references basedir="${bin.dir}">
				<include name="${bin.dir}\${assembly.name}" />
				<!-- get NUnit from the GAC -->
				<include name="${nunit.framework.dll}" />
				<include name="${bin.dir}\Castle.Core.dll"/>
				<include name="${bin.dir}\Castle.MonoRail.TestSupport.dll"/>
				<include name="${bin.dir}\Castle.MonoRail.Framework.Dll"/>
				<include name="${bin.dir}\Castle.MonoRail.Framework.Tests.Dll"/>
				<include name="System.Web.dll"/>
			</references>
			<resources basedir="${test.src.dir}\Resources">
				<include name="**.resources"/>
			</resources>
		</booc>
	</target>
	
	<target name="sample.compile">
		<nant buildfile="${sample.dir}/sample.build" inheritall="true"/>
	</target>
	
	<target name="test" depends="tests.run,init" />

	<target name="tests.run" depends="tests.compile, sample.compile" if="${booviewengine.test}">
		<copy file="${bin.dir}\Castle.MonoRail.TestSupport.dll" todir="${sample.dir}/bin"/>
		
		<exec 
			program="${nunit-console}" 
			workingdir="${bin.dir}" 
			commandline="${test.assembly.name} /xml:${test.output.dir}/${assembly.name}-results.xml /nologo"
			unless="${tests.disabled}" />

		<!--
		<nunit2>
			<formatter type="${nunit.formatter}" />
			<test assemblyname="${bin.dir}/${test.assembly.name}" appconfig="${test.src.dir}\app.config"/>
		</nunit2>
		-->
	</target>

</project>
